

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jul 17 15:21:32 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 17/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   001554                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _port_registers
    67   001554  80                 	db	128
    68   001555  0F                 	db	15
    69   001556  81                 	db	129
    70   001557  0F                 	db	15
    71   001558  82                 	db	130
    72   001559  0F                 	db	15
    73   00155A  83                 	db	131
    74   00155B  0F                 	db	15
    75   00155C  84                 	db	132
    76   00155D  0F                 	db	15
    77                           
    78                           ;initializer for _lat_registers
    79   00155E  89                 	db	137
    80   00155F  0F                 	db	15
    81   001560  8A                 	db	138
    82   001561  0F                 	db	15
    83   001562  8B                 	db	139
    84   001563  0F                 	db	15
    85   001564  8C                 	db	140
    86   001565  0F                 	db	15
    87   001566  8D                 	db	141
    88   001567  0F                 	db	15
    89                           
    90                           ;initializer for _tris_registers
    91   001568  92                 	db	146
    92   001569  0F                 	db	15
    93   00156A  93                 	db	147
    94   00156B  0F                 	db	15
    95   00156C  94                 	db	148
    96   00156D  0F                 	db	15
    97   00156E  95                 	db	149
    98   00156F  0F                 	db	15
    99   001570  96                 	db	150
   100   001571  0F                 	db	15
   101                           
   102                           ;initializer for _switch__
   103   001572  4A                 	db	74
   104   001573  01                 	db	1
   105   001574  00                 	db	0
   106                           
   107                           ;initializer for _button
   108   001575  42                 	db	66
   109   001576  01                 	db	1
   110   001577  00                 	db	0
   111                           
   112                           ;initializer for _dc_motor_1
   113   001578  32                 	db	50
   114   001579  3A                 	db	58
   115                           
   116                           	psect	smallconst
   117   001000                     __psmallconst:
   118                           	callstack 0
   119   001000  00                 	db	0
   120   001001                     _btn_values:
   121                           	callstack 0
   122   001001  37                 	db	55
   123   001002  38                 	db	56
   124   001003  39                 	db	57
   125   001004  2F                 	db	47
   126   001005  34                 	db	52
   127   001006  35                 	db	53
   128   001007  36                 	db	54
   129   001008  2A                 	db	42
   130   001009  31                 	db	49
   131   00100A  32                 	db	50
   132   00100B  33                 	db	51
   133   00100C  2D                 	db	45
   134   00100D  25                 	db	37
   135   00100E  30                 	db	48
   136   00100F  3D                 	db	61
   137   001010  2B                 	db	43
   138   001011                     __end_of_btn_values:
   139                           	callstack 0
   140   000000                     _PORTE	set	3972
   141   000000                     _PORTD	set	3971
   142   000000                     _PORTC	set	3970
   143   000000                     _PORTB	set	3969
   144   000000                     _PORTA	set	3968
   145   000000                     _LATA	set	3977
   146   000000                     _TRISA	set	3986
   147   000000                     _TRISE	set	3990
   148   000000                     _TRISD	set	3989
   149   000000                     _TRISC	set	3988
   150   000000                     _TRISB	set	3987
   151   000000                     _LATE	set	3981
   152   000000                     _LATD	set	3980
   153   000000                     _LATC	set	3979
   154   000000                     _LATB	set	3978
   155   001011                     STR_1:
   156   001011  25                 	db	37
   157   001012  69                 	db	105	;'i'
   158   001013  00                 	db	0
   159   001014  00                 	db	0	; dummy byte at the end
   160   000000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164   001466                     __pcinit:
   165                           	callstack 0
   166   001466                     start_initialization:
   167                           	callstack 0
   168   001466                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Initialize objects allocated to COMRAM (38 bytes)
   172                           ; load TBLPTR registers with __pidataCOMRAM
   173   001466  0E54               	movlw	low __pidataCOMRAM
   174   001468  6EF6               	movwf	tblptrl,c
   175   00146A  0E15               	movlw	high __pidataCOMRAM
   176   00146C  6EF7               	movwf	tblptrh,c
   177   00146E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   178   001470  6EF8               	movwf	tblptru,c
   179   001472  EE00  F001         	lfsr	0,__pdataCOMRAM
   180   001476  EE10 F026          	lfsr	1,38
   181   00147A                     copy_data0:
   182   00147A  0009               	tblrd		*+
   183   00147C  CFF5 FFEE          	movff	tablat,postinc0
   184   001480  50E5               	movf	postdec1,w,c
   185   001482  50E1               	movf	fsr1l,w,c
   186   001484  E1FA               	bnz	copy_data0
   187                           
   188                           ; Clear objects allocated to COMRAM (11 bytes)
   189   001486  EE00  F034         	lfsr	0,__pbssCOMRAM
   190   00148A  0E0B               	movlw	11
   191   00148C                     clear_0:
   192   00148C  6AEE               	clrf	postinc0,c
   193   00148E  06E8               	decf	wreg,f,c
   194   001490  E1FD               	bnz	clear_0
   195   001492                     end_of_initialization:
   196                           	callstack 0
   197   001492                     __end_of__initialization:
   198                           	callstack 0
   199   001492  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200   001494  6EF8               	movwf	tblptru,c
   201   001496  0100               	movlb	0
   202   001498  EFC7  F009         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMRAM
   205   000034                     __pbssCOMRAM:
   206                           	callstack 0
   207   000034                     	ds	1
   208   000035                     	ds	1
   209   000036                     relay_turn_off@F3066:
   210                           	callstack 0
   211   000036                     	ds	1
   212   000037                     relay_turn_on@F3061:
   213                           	callstack 0
   214   000037                     	ds	1
   215   000038                     relay_intialize@F3056:
   216                           	callstack 0
   217   000038                     	ds	1
   218   000039                     led_turn_toggle@F3077:
   219                           	callstack 0
   220   000039                     	ds	1
   221   00003A                     led_turn_off@F3072:
   222                           	callstack 0
   223   00003A                     	ds	1
   224   00003B                     led_turn_on@F3067:
   225                           	callstack 0
   226   00003B                     	ds	1
   227   00003C                     led_intialize@F3062:
   228                           	callstack 0
   229   00003C                     	ds	1
   230   00003D                     _switch_status:
   231                           	callstack 0
   232   00003D                     	ds	1
   233   00003E                     _Push_button_status:
   234                           	callstack 0
   235   00003E                     	ds	1
   236                           
   237                           	psect	dataCOMRAM
   238   000001                     __pdataCOMRAM:
   239                           	callstack 0
   240   000001                     _port_registers:
   241                           	callstack 0
   242   000001                     	ds	10
   243   00000B                     _lat_registers:
   244                           	callstack 0
   245   00000B                     	ds	10
   246   000015                     _tris_registers:
   247                           	callstack 0
   248   000015                     	ds	10
   249   00001F                     _switch__:
   250                           	callstack 0
   251   00001F                     	ds	3
   252   000022                     _button:
   253                           	callstack 0
   254   000022                     	ds	3
   255   000025                     _dc_motor_1:
   256                           	callstack 0
   257   000025                     	ds	2
   258                           
   259                           	psect	cstackCOMRAM
   260   000027                     __pcstackCOMRAM:
   261                           	callstack 0
   262   000027                     gpio_pin_direction_intialize@_pin_config:
   263                           	callstack 0
   264   000027                     gpio_pin_write_logic@_pin_config:
   265                           	callstack 0
   266   000027                     gpio_pin_read_logic@_pin_config:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x0
   270   000027                     	ds	1
   271   000028                     ??_gpio_pin_direction_intialize:
   272   000028                     gpio_pin_write_logic@logic:
   273                           	callstack 0
   274   000028                     gpio_pin_read_logic@logic:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x1
   278   000028                     	ds	1
   279   000029                     ??_gpio_pin_write_logic:
   280   000029                     ??_gpio_pin_read_logic:
   281                           
   282                           ; 1 bytes @ 0x2
   283   000029                     	ds	4
   284   00002D                     gpio_pin_direction_intialize@ret:
   285                           	callstack 0
   286   00002D                     gpio_pin_read_logic@ret:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x6
   290   00002D                     	ds	1
   291   00002E                     button_intialize@btn:
   292                           	callstack 0
   293   00002E                     button_read_state@btn:
   294                           	callstack 0
   295   00002E                     gpio_pin_write_logic@ret:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x7
   299   00002E                     	ds	1
   300   00002F                     button_intialize@ret:
   301                           	callstack 0
   302   00002F                     button_read_state@btn_state:
   303                           	callstack 0
   304   00002F                     dc_motor_turn_right@_dc_motor:
   305                           	callstack 0
   306   00002F                     dc_motor_turn_left@_dc_motor:
   307                           	callstack 0
   308   00002F                     dc_motor_stop@_dc_motor:
   309                           	callstack 0
   310   00002F                     gpio_pin_intialize@_pin_config:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x8
   314   00002F                     	ds	1
   315   000030                     ??_gpio_pin_intialize:
   316   000030                     
   317                           ; 1 bytes @ 0x9
   318   000030                     	ds	1
   319   000031                     button_read_state@ret:
   320                           	callstack 0
   321   000031                     gpio_pin_intialize@ret:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0xA
   325   000031                     	ds	1
   326   000032                     button_read_state@pin_logic_status:
   327                           	callstack 0
   328   000032                     dc_motor_intialize@_dc_motor:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0xB
   332   000032                     	ds	1
   333   000033                     main@temp:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xC
   337   000033                     	ds	1
   338                           
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 14 in file "application.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  temp            1   12[COMRAM] unsigned char 
   349 ;;  ret             1    0        unsigned char 
   350 ;; Return value:  Size  Location     Type
   351 ;;                  2  493[None  ] int 
   352 ;; Registers used:
   353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;Total ram usage:        1 bytes
   364 ;; Hardware stack levels required when called: 4
   365 ;; This function calls:
   366 ;;		_application_intialize
   367 ;;		_button_read_state
   368 ;;		_dc_motor_stop
   369 ;;		_dc_motor_turn_left
   370 ;;		_dc_motor_turn_right
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text0
   377   00138E                     __ptext0:
   378                           	callstack 0
   379   00138E                     _main:
   380                           	callstack 27
   381   00138E                     
   382                           ;application.c: 16: application_intialize();
   383   00138E  ECD0  F00A         	call	_application_intialize	;wreg free
   384   001392                     l2784:
   385   001392  0E22               	movlw	low _button
   386   001394  6E2E               	movwf	button_read_state@btn^0,c
   387   001396  0E3E               	movlw	low _Push_button_status
   388   001398  6E2F               	movwf	button_read_state@btn_state^0,c
   389   00139A  EC1C  F009         	call	_button_read_state	;wreg free
   390   00139E                     
   391                           ;application.c: 21:     if(!Push_button_status){
   392   00139E  503E               	movf	_Push_button_status^0,w,c	;volatile
   393   0013A0  A4D8               	btfss	status,2,c
   394   0013A2  EFD5  F009         	goto	u1891
   395   0013A6  EFD7  F009         	goto	u1890
   396   0013AA                     u1891:
   397   0013AA  EFC9  F009         	goto	l2784
   398   0013AE                     u1890:
   399   0013AE                     
   400                           ;application.c: 22:     Push_button_status =1;
   401   0013AE  0E01               	movlw	1
   402   0013B0  6E3E               	movwf	_Push_button_status^0,c	;volatile
   403                           
   404                           ;application.c: 23:     if(switch_status){
   405   0013B2  503D               	movf	_switch_status^0,w,c	;volatile
   406   0013B4  B4D8               	btfsc	status,2,c
   407   0013B6  EFDF  F009         	goto	u1901
   408   0013BA  EFE1  F009         	goto	u1900
   409   0013BE                     u1901:
   410   0013BE  EFE7  F009         	goto	l2792
   411   0013C2                     u1900:
   412   0013C2  0E25               	movlw	low _dc_motor_1
   413   0013C4  6E2F               	movwf	dc_motor_turn_right@_dc_motor^0,c
   414   0013C6  EC4E  F00A         	call	_dc_motor_turn_right	;wreg free
   415                           
   416                           ;application.c: 25:     }else{
   417   0013CA  EFEB  F009         	goto	l2794
   418   0013CE                     l2792:
   419   0013CE  0E25               	movlw	low _dc_motor_1
   420   0013D0  6E2F               	movwf	dc_motor_turn_left@_dc_motor^0,c
   421   0013D2  EC66  F00A         	call	_dc_motor_turn_left	;wreg free
   422   0013D6                     l2794:
   423                           
   424                           ;application.c: 28:     uint8 temp =switch_status;
   425   0013D6  C03D  F033         	movff	_switch_status,main@temp	;volatile
   426   0013DA                     l2796:
   427   0013DA  0E1F               	movlw	low _switch__
   428   0013DC  6E2E               	movwf	button_read_state@btn^0,c
   429   0013DE  0E3D               	movlw	low _switch_status
   430   0013E0  6E2F               	movwf	button_read_state@btn_state^0,c
   431   0013E2  EC1C  F009         	call	_button_read_state	;wreg free
   432   0013E6                     
   433                           ;application.c: 31:     }while(temp==switch_status);
   434   0013E6  503D               	movf	_switch_status^0,w,c	;volatile
   435   0013E8  1833               	xorwf	main@temp^0,w,c
   436   0013EA  B4D8               	btfsc	status,2,c
   437   0013EC  EFFA  F009         	goto	u1911
   438   0013F0  EFFC  F009         	goto	u1910
   439   0013F4                     u1911:
   440   0013F4  EFED  F009         	goto	l2796
   441   0013F8                     u1910:
   442   0013F8  0E25               	movlw	low _dc_motor_1
   443   0013FA  6E2F               	movwf	dc_motor_stop@_dc_motor^0,c
   444   0013FC  EC7E  F00A         	call	_dc_motor_stop	;wreg free
   445   001400  EFC9  F009         	goto	l2784
   446   001404  EF00  F000         	goto	start
   447   001408                     __end_of_main:
   448                           	callstack 0
   449                           
   450 ;; *************** function _dc_motor_turn_right *****************
   451 ;; Defined at:
   452 ;;		line 38 in file "ECU_Layer/DC_motor/DC_motor.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   455 ;;		 -> dc_motor_1(2), 
   456 ;; Auto vars:     Size  Location     Type
   457 ;;  ret             1    0        unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      unsigned char 
   460 ;; Registers used:
   461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   467 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;Total ram usage:        1 bytes
   472 ;; Hardware stack levels used: 1
   473 ;; Hardware stack levels required when called: 1
   474 ;; This function calls:
   475 ;;		_gpio_pin_write_logic
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text1
   482   00149C                     __ptext1:
   483                           	callstack 0
   484   00149C                     _dc_motor_turn_right:
   485                           	callstack 29
   486   00149C                     
   487                           ;ECU_Layer/DC_motor/DC_motor.c: 40:      if(((void*)0)==_dc_motor){
   488   00149C  502F               	movf	dc_motor_turn_right@_dc_motor^0,w,c
   489   00149E  A4D8               	btfss	status,2,c
   490   0014A0  EF54  F00A         	goto	u1361
   491   0014A4  EF56  F00A         	goto	u1360
   492   0014A8                     u1361:
   493   0014A8  EF58  F00A         	goto	l2258
   494   0014AC                     u1360:
   495   0014AC                     
   496                           ;ECU_Layer/DC_motor/DC_motor.c: 42:      }else{
   497   0014AC  EF64  F00A         	goto	l2260
   498   0014B0                     l2258:
   499                           
   500                           ;ECU_Layer/DC_motor/DC_motor.c: 43:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0]),GPIO_HIGH);
   501   0014B0  C02F  F027         	movff	dc_motor_turn_right@_dc_motor,gpio_pin_write_logic@_pin_config
   502   0014B4  0E01               	movlw	1
   503   0014B6  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   504   0014B8  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   505                           
   506                           ;ECU_Layer/DC_motor/DC_motor.c: 44:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[1]),GPIO_LOW);
   507   0014BC  282F               	incf	dc_motor_turn_right@_dc_motor^0,w,c
   508   0014BE  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   509   0014C0  0E00               	movlw	0
   510   0014C2  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   511   0014C4  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   512   0014C8                     l2260:
   513                           
   514                           ;ECU_Layer/DC_motor/DC_motor.c: 46:     return (Std_ReturnType)0x01;
   515   0014C8  0E01               	movlw	1
   516   0014CA  0012               	return		;funcret
   517   0014CC                     __end_of_dc_motor_turn_right:
   518                           	callstack 0
   519                           
   520 ;; *************** function _dc_motor_turn_left *****************
   521 ;; Defined at:
   522 ;;		line 56 in file "ECU_Layer/DC_motor/DC_motor.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   525 ;;		 -> dc_motor_1(2), 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  ret             1    0        unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      unsigned char 
   530 ;; Registers used:
   531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;Total ram usage:        1 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 1
   544 ;; This function calls:
   545 ;;		_gpio_pin_write_logic
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text2
   552   0014CC                     __ptext2:
   553                           	callstack 0
   554   0014CC                     _dc_motor_turn_left:
   555                           	callstack 29
   556   0014CC                     
   557                           ;ECU_Layer/DC_motor/DC_motor.c: 58:      if(((void*)0)==_dc_motor){
   558   0014CC  502F               	movf	dc_motor_turn_left@_dc_motor^0,w,c
   559   0014CE  A4D8               	btfss	status,2,c
   560   0014D0  EF6C  F00A         	goto	u1371
   561   0014D4  EF6E  F00A         	goto	u1370
   562   0014D8                     u1371:
   563   0014D8  EF70  F00A         	goto	l2268
   564   0014DC                     u1370:
   565   0014DC                     
   566                           ;ECU_Layer/DC_motor/DC_motor.c: 60:      }else{
   567   0014DC  EF7C  F00A         	goto	l2270
   568   0014E0                     l2268:
   569                           
   570                           ;ECU_Layer/DC_motor/DC_motor.c: 61:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0]),GPIO_LOW);
   571   0014E0  C02F  F027         	movff	dc_motor_turn_left@_dc_motor,gpio_pin_write_logic@_pin_config
   572   0014E4  0E00               	movlw	0
   573   0014E6  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   574   0014E8  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   575                           
   576                           ;ECU_Layer/DC_motor/DC_motor.c: 62:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[1]),GPIO_HIGH);
   577   0014EC  282F               	incf	dc_motor_turn_left@_dc_motor^0,w,c
   578   0014EE  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   579   0014F0  0E01               	movlw	1
   580   0014F2  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   581   0014F4  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   582   0014F8                     l2270:
   583                           
   584                           ;ECU_Layer/DC_motor/DC_motor.c: 64:     return (Std_ReturnType)0x01;
   585   0014F8  0E01               	movlw	1
   586   0014FA  0012               	return		;funcret
   587   0014FC                     __end_of_dc_motor_turn_left:
   588                           	callstack 0
   589                           
   590 ;; *************** function _dc_motor_stop *****************
   591 ;; Defined at:
   592 ;;		line 74 in file "ECU_Layer/DC_motor/DC_motor.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   595 ;;		 -> dc_motor_1(2), 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  ret             1    0        unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      unsigned char 
   600 ;; Registers used:
   601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   607 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;Total ram usage:        1 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 1
   614 ;; This function calls:
   615 ;;		_gpio_pin_write_logic
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text3
   622   0014FC                     __ptext3:
   623                           	callstack 0
   624   0014FC                     _dc_motor_stop:
   625                           	callstack 29
   626   0014FC                     
   627                           ;ECU_Layer/DC_motor/DC_motor.c: 76:      if(((void*)0)==_dc_motor){
   628   0014FC  502F               	movf	dc_motor_stop@_dc_motor^0,w,c
   629   0014FE  A4D8               	btfss	status,2,c
   630   001500  EF84  F00A         	goto	u1381
   631   001504  EF86  F00A         	goto	u1380
   632   001508                     u1381:
   633   001508  EF88  F00A         	goto	l2278
   634   00150C                     u1380:
   635   00150C                     
   636                           ;ECU_Layer/DC_motor/DC_motor.c: 78:      }else{
   637   00150C  EF94  F00A         	goto	l2280
   638   001510                     l2278:
   639                           
   640                           ;ECU_Layer/DC_motor/DC_motor.c: 79:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0]),GPIO_LOW);
   641   001510  C02F  F027         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
   642   001514  0E00               	movlw	0
   643   001516  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   644   001518  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   645                           
   646                           ;ECU_Layer/DC_motor/DC_motor.c: 80:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[1]),GPIO_LOW);
   647   00151C  282F               	incf	dc_motor_stop@_dc_motor^0,w,c
   648   00151E  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   649   001520  0E00               	movlw	0
   650   001522  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   651   001524  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   652   001528                     l2280:
   653                           
   654                           ;ECU_Layer/DC_motor/DC_motor.c: 82:     return (Std_ReturnType)0x01;
   655   001528  0E01               	movlw	1
   656   00152A  0012               	return		;funcret
   657   00152C                     __end_of_dc_motor_stop:
   658                           	callstack 0
   659                           
   660 ;; *************** function _button_read_state *****************
   661 ;; Defined at:
   662 ;;		line 32 in file "ECU_Layer/button/button.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  btn             1    7[COMRAM] PTR const struct .
   665 ;;		 -> switch__(3), button(3), 
   666 ;;  btn_state       1    8[COMRAM] PTR enum E3042
   667 ;;		 -> switch_status(1), Push_button_status(1), 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  pin_logic_st    1   11[COMRAM] enum E2982
   670 ;;  ret             1   10[COMRAM] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      unsigned char 
   673 ;; Registers used:
   674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;Total ram usage:        5 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 1
   687 ;; This function calls:
   688 ;;		_gpio_pin_read_logic
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text4
   695   001238                     __ptext4:
   696                           	callstack 0
   697   001238                     _button_read_state:
   698                           	callstack 29
   699   001238                     
   700                           ;ECU_Layer/button/button.c: 33:      Std_ReturnType ret = (Std_ReturnType)0x01 ;
   701   001238  0E01               	movlw	1
   702   00123A  6E31               	movwf	button_read_state@ret^0,c
   703                           
   704                           ;ECU_Layer/button/button.c: 34:      logic_t pin_logic_status = GPIO_LOW ;
   705   00123C  0E00               	movlw	0
   706   00123E  6E32               	movwf	button_read_state@pin_logic_status^0,c
   707                           
   708                           ;ECU_Layer/button/button.c: 35:     if(((void*)0) == btn || ((void*)0)==btn_state){
   709   001240  502E               	movf	button_read_state@btn^0,w,c
   710   001242  B4D8               	btfsc	status,2,c
   711   001244  EF26  F009         	goto	u1301
   712   001248  EF28  F009         	goto	u1300
   713   00124C                     u1301:
   714   00124C  EF30  F009         	goto	l2230
   715   001250                     u1300:
   716   001250  502F               	movf	button_read_state@btn_state^0,w,c
   717   001252  A4D8               	btfss	status,2,c
   718   001254  EF2E  F009         	goto	u1311
   719   001258  EF30  F009         	goto	u1310
   720   00125C                     u1311:
   721   00125C  EF34  F009         	goto	l2232
   722   001260                     u1310:
   723   001260                     l2230:
   724                           
   725                           ;ECU_Layer/button/button.c: 36:         ret = (Std_ReturnType)0x00 ;
   726   001260  0E00               	movlw	0
   727   001262  6E31               	movwf	button_read_state@ret^0,c
   728                           
   729                           ;ECU_Layer/button/button.c: 37:     }else{
   730   001264  EF73  F009         	goto	l2250
   731   001268                     l2232:
   732                           
   733                           ;ECU_Layer/button/button.c: 38:         gpio_pin_read_logic(&(btn ->button_pin),&pin_log
      +                          ic_status);
   734   001268  C02E  F027         	movff	button_read_state@btn,gpio_pin_read_logic@_pin_config
   735   00126C  0E32               	movlw	low button_read_state@pin_logic_status
   736   00126E  6E28               	movwf	gpio_pin_read_logic@logic^0,c
   737   001270  EC75  F009         	call	_gpio_pin_read_logic	;wreg free
   738   001274                     
   739                           ;ECU_Layer/button/button.c: 39:         if(BUTTON_ACTIVE_HIGH == btn ->button_connection
      +                          ){
   740   001274  502E               	movf	button_read_state@btn^0,w,c
   741   001276  6ED9               	movwf	fsr2l,c
   742   001278  6ADA               	clrf	fsr2h,c
   743   00127A  0E02               	movlw	2
   744   00127C  26D9               	addwf	fsr2l,f,c
   745   00127E  50DF               	movf	indf2,w,c
   746   001280  A4D8               	btfss	status,2,c
   747   001282  EF45  F009         	goto	u1321
   748   001286  EF47  F009         	goto	u1320
   749   00128A                     u1321:
   750   00128A  EF5C  F009         	goto	l2242
   751   00128E                     u1320:
   752   00128E                     
   753                           ;ECU_Layer/button/button.c: 40:             if(GPIO_HIGH == pin_logic_status){
   754   00128E  0432               	decf	button_read_state@pin_logic_status^0,w,c
   755   001290  A4D8               	btfss	status,2,c
   756   001292  EF4D  F009         	goto	u1331
   757   001296  EF4F  F009         	goto	u1330
   758   00129A                     u1331:
   759   00129A  EF55  F009         	goto	l2240
   760   00129E                     u1330:
   761   00129E                     l2238:
   762                           
   763                           ;ECU_Layer/button/button.c: 41:                 *btn_state = BUTTON_PRESSED;
   764   00129E  502F               	movf	button_read_state@btn_state^0,w,c
   765   0012A0  6ED9               	movwf	fsr2l,c
   766   0012A2  6ADA               	clrf	fsr2h,c
   767   0012A4  6ADF               	clrf	indf2,c
   768                           
   769                           ;ECU_Layer/button/button.c: 42:             }else{
   770   0012A6  EF73  F009         	goto	l2250
   771   0012AA                     l2240:
   772                           
   773                           ;ECU_Layer/button/button.c: 43:                 *btn_state = BUTTON_RELEASED;
   774   0012AA  502F               	movf	button_read_state@btn_state^0,w,c
   775   0012AC  6ED9               	movwf	fsr2l,c
   776   0012AE  6ADA               	clrf	fsr2h,c
   777   0012B0  0E01               	movlw	1
   778   0012B2  6EDF               	movwf	indf2,c
   779   0012B4  EF73  F009         	goto	l2250
   780   0012B8                     l2242:
   781   0012B8  502E               	movf	button_read_state@btn^0,w,c
   782   0012BA  6ED9               	movwf	fsr2l,c
   783   0012BC  6ADA               	clrf	fsr2h,c
   784   0012BE  0E02               	movlw	2
   785   0012C0  26D9               	addwf	fsr2l,f,c
   786   0012C2  04DE               	decf	postinc2,w,c
   787   0012C4  A4D8               	btfss	status,2,c
   788   0012C6  EF67  F009         	goto	u1341
   789   0012CA  EF69  F009         	goto	u1340
   790   0012CE                     u1341:
   791   0012CE  EF73  F009         	goto	l53
   792   0012D2                     u1340:
   793   0012D2                     
   794                           ;ECU_Layer/button/button.c: 46:             if(GPIO_HIGH == pin_logic_status){
   795   0012D2  0432               	decf	button_read_state@pin_logic_status^0,w,c
   796   0012D4  A4D8               	btfss	status,2,c
   797   0012D6  EF6F  F009         	goto	u1351
   798   0012DA  EF71  F009         	goto	u1350
   799   0012DE                     u1351:
   800   0012DE  EF4F  F009         	goto	l2238
   801   0012E2                     u1350:
   802   0012E2  EF55  F009         	goto	l2240
   803   0012E6                     l53:
   804   0012E6                     l2250:
   805                           
   806                           ;ECU_Layer/button/button.c: 53:     return ret ;
   807   0012E6  5031               	movf	button_read_state@ret^0,w,c
   808   0012E8  0012               	return		;funcret
   809   0012EA                     __end_of_button_read_state:
   810                           	callstack 0
   811                           
   812 ;; *************** function _gpio_pin_read_logic *****************
   813 ;; Defined at:
   814 ;;		line 97 in file "MCAL_Layer/GPIO/hal_gpio.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   817 ;;		 -> switch__(3), button(3), 
   818 ;;  logic           1    1[COMRAM] PTR enum E2982
   819 ;;		 -> keypad_get_value@column_logic(1), button_read_state@pin_logic_status(1), 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  ret             1    6[COMRAM] unsigned char 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      unsigned char 
   824 ;; Registers used:
   825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;Total ram usage:        7 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_button_read_state
   841 ;;		_keypad_get_value
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text5
   846   0012EA                     __ptext5:
   847                           	callstack 0
   848   0012EA                     _gpio_pin_read_logic:
   849                           	callstack 29
   850   0012EA                     
   851                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   852   0012EA  0E01               	movlw	1
   853   0012EC  6E2D               	movwf	gpio_pin_read_logic@ret^0,c
   854                           
   855                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     if(((void*)0)==_pin_config || ((void*)0)==logic || 
      +                          _pin_config->pin >8 -1 ){
   856   0012EE  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   857   0012F0  B4D8               	btfsc	status,2,c
   858   0012F2  EF7D  F009         	goto	u1181
   859   0012F6  EF7F  F009         	goto	u1180
   860   0012FA                     u1181:
   861   0012FA  EF97  F009         	goto	l2132
   862   0012FE                     u1180:
   863   0012FE  5028               	movf	gpio_pin_read_logic@logic^0,w,c
   864   001300  B4D8               	btfsc	status,2,c
   865   001302  EF85  F009         	goto	u1191
   866   001306  EF87  F009         	goto	u1190
   867   00130A                     u1191:
   868   00130A  EF97  F009         	goto	l2132
   869   00130E                     u1190:
   870   00130E  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   871   001310  6ED9               	movwf	fsr2l,c
   872   001312  6ADA               	clrf	fsr2h,c
   873   001314  30DF               	rrcf	223,w,c
   874   001316  32E8               	rrcf	wreg,f,c
   875   001318  32E8               	rrcf	wreg,f,c
   876   00131A  0B07               	andlw	7
   877   00131C  6E29               	movwf	??_gpio_pin_read_logic^0,c
   878   00131E  0E07               	movlw	7
   879   001320  6429               	cpfsgt	??_gpio_pin_read_logic^0,c
   880   001322  EF95  F009         	goto	u1201
   881   001326  EF97  F009         	goto	u1200
   882   00132A                     u1201:
   883   00132A  EF9B  F009         	goto	l2134
   884   00132E                     u1200:
   885   00132E                     l2132:
   886                           
   887                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:         ret = (Std_ReturnType)0x00;
   888   00132E  0E00               	movlw	0
   889   001330  6E2D               	movwf	gpio_pin_read_logic@ret^0,c
   890                           
   891                           ;MCAL_Layer/GPIO/hal_gpio.c: 101:     }else{
   892   001332  EFC5  F009         	goto	l2136
   893   001336                     l2134:
   894                           
   895                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:         *logic = ((*port_registers[_pin_config->port] 
      +                          >> _pin_config->pin)&(uint8)1);
   896   001336  5028               	movf	gpio_pin_read_logic@logic^0,w,c
   897   001338  6ED9               	movwf	fsr2l,c
   898   00133A  6ADA               	clrf	fsr2h,c
   899   00133C  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   900   00133E  6EE1               	movwf	fsr1l,c
   901   001340  6AE2               	clrf	fsr1h,c
   902   001342  30E7               	rrcf	231,w,c
   903   001344  32E8               	rrcf	wreg,f,c
   904   001346  32E8               	rrcf	wreg,f,c
   905   001348  0B07               	andlw	7
   906   00134A  6E29               	movwf	??_gpio_pin_read_logic^0,c
   907   00134C  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   908   00134E  6EE1               	movwf	fsr1l,c
   909   001350  6AE2               	clrf	fsr1h,c
   910   001352  50E7               	movf	231,w,c
   911   001354  0B07               	andlw	7
   912   001356  0D02               	mullw	2
   913   001358  50F3               	movf	243,w,c
   914   00135A  0F01               	addlw	low _port_registers
   915   00135C  6EE1               	movwf	fsr1l,c
   916   00135E  6AE2               	clrf	fsr1h,c
   917   001360  CFE6 F02A          	movff	postinc1,??_gpio_pin_read_logic+1
   918   001364  CFE5 F02B          	movff	postdec1,??_gpio_pin_read_logic+2
   919   001368  C02A  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
   920   00136C  C02B  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
   921   001370  50E7               	movf	indf1,w,c
   922   001372  6E2C               	movwf	(??_gpio_pin_read_logic+3)^0,c
   923   001374  2A29               	incf	??_gpio_pin_read_logic^0,f,c
   924   001376  EFBF  F009         	goto	u1214
   925   00137A                     u1215:
   926   00137A  90D8               	bcf	status,0,c
   927   00137C  322C               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
   928   00137E                     u1214:
   929   00137E  2E29               	decfsz	??_gpio_pin_read_logic^0,f,c
   930   001380  EFBD  F009         	goto	u1215
   931   001384  502C               	movf	(??_gpio_pin_read_logic+3)^0,w,c
   932   001386  0B01               	andlw	1
   933   001388  6EDF               	movwf	indf2,c
   934   00138A                     l2136:
   935                           
   936                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:         return ret ;
   937   00138A  502D               	movf	gpio_pin_read_logic@ret^0,w,c
   938   00138C  0012               	return		;funcret
   939   00138E                     __end_of_gpio_pin_read_logic:
   940                           	callstack 0
   941                           
   942 ;; *************** function _application_intialize *****************
   943 ;; Defined at:
   944 ;;		line 39 in file "application.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  ret             1    0        unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 3
   965 ;; This function calls:
   966 ;;		_button_intialize
   967 ;;		_dc_motor_intialize
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text6
   974   0015A0                     __ptext6:
   975                           	callstack 0
   976   0015A0                     _application_intialize:
   977                           	callstack 27
   978   0015A0  0E25               	movlw	low _dc_motor_1
   979   0015A2  6E32               	movwf	dc_motor_intialize@_dc_motor^0,c
   980   0015A4  EC96  F00A         	call	_dc_motor_intialize	;wreg free
   981   0015A8  0E22               	movlw	low _button
   982   0015AA  6E2E               	movwf	button_intialize@btn^0,c
   983   0015AC  ECBD  F00A         	call	_button_intialize	;wreg free
   984   0015B0  0E1F               	movlw	low _switch__
   985   0015B2  6E2E               	movwf	button_intialize@btn^0,c
   986   0015B4  ECBD  F00A         	call	_button_intialize	;wreg free
   987   0015B8  0012               	return		;funcret
   988   0015BA                     __end_of_application_intialize:
   989                           	callstack 0
   990                           
   991 ;; *************** function _dc_motor_intialize *****************
   992 ;; Defined at:
   993 ;;		line 19 in file "ECU_Layer/DC_motor/DC_motor.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  _dc_motor       1   11[COMRAM] PTR const struct .
   996 ;;		 -> dc_motor_1(2), 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  ret             1    0        unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      unsigned char 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1008 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;Total ram usage:        1 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 2
  1015 ;; This function calls:
  1016 ;;		_gpio_pin_intialize
  1017 ;; This function is called by:
  1018 ;;		_application_intialize
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text7
  1023   00152C                     __ptext7:
  1024                           	callstack 0
  1025   00152C                     _dc_motor_intialize:
  1026                           	callstack 27
  1027   00152C                     
  1028                           ;ECU_Layer/DC_motor/DC_motor.c: 21:      if(((void*)0)==_dc_motor){
  1029   00152C  5032               	movf	dc_motor_intialize@_dc_motor^0,w,c
  1030   00152E  A4D8               	btfss	status,2,c
  1031   001530  EF9C  F00A         	goto	u1221
  1032   001534  EF9E  F00A         	goto	u1220
  1033   001538                     u1221:
  1034   001538  EFA0  F00A         	goto	l2144
  1035   00153C                     u1220:
  1036   00153C                     
  1037                           ;ECU_Layer/DC_motor/DC_motor.c: 24:      }else{
  1038   00153C  EFA8  F00A         	goto	l2146
  1039   001540                     l2144:
  1040                           
  1041                           ;ECU_Layer/DC_motor/DC_motor.c: 25:          gpio_pin_intialize(&(_dc_motor->dc_motor_pi
      +                          n[0]));
  1042   001540  C032  F02F         	movff	dc_motor_intialize@_dc_motor,gpio_pin_intialize@_pin_config
  1043   001544  EC04  F00A         	call	_gpio_pin_intialize	;wreg free
  1044                           
  1045                           ;ECU_Layer/DC_motor/DC_motor.c: 26:          gpio_pin_intialize(&(_dc_motor->dc_motor_pi
      +                          n[1]));
  1046   001548  2832               	incf	dc_motor_intialize@_dc_motor^0,w,c
  1047   00154A  6E2F               	movwf	gpio_pin_intialize@_pin_config^0,c
  1048   00154C  EC04  F00A         	call	_gpio_pin_intialize	;wreg free
  1049   001550                     l2146:
  1050                           
  1051                           ;ECU_Layer/DC_motor/DC_motor.c: 28:      return (Std_ReturnType)0x01;
  1052   001550  0E01               	movlw	1
  1053   001552  0012               	return		;funcret
  1054   001554                     __end_of_dc_motor_intialize:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function _gpio_pin_intialize *****************
  1058 ;; Defined at:
  1059 ;;		line 133 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1062 ;;		 -> dc_motor_1$dc_motor_pin(2), dc_motor_1(2), relay_intialize@pin_obj(1), led_intialize@pin_obj(1), 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  ret             1   10[COMRAM] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      unsigned char 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1074 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;Total ram usage:        3 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 1
  1081 ;; This function calls:
  1082 ;;		_gpio_pin_direction_intialize
  1083 ;;		_gpio_pin_write_logic
  1084 ;; This function is called by:
  1085 ;;		_dc_motor_intialize
  1086 ;;		_led_intialize
  1087 ;;		_relay_intialize
  1088 ;;		_seven_segment_intialize
  1089 ;;		_keypad_intialize
  1090 ;;		_lcd_4bit_intialize
  1091 ;;		_lcd_8bit_intialize
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text8
  1096   001408                     __ptext8:
  1097                           	callstack 0
  1098   001408                     _gpio_pin_intialize:
  1099                           	callstack 27
  1100   001408                     
  1101                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:      if(((void*)0)==_pin_config || _pin_config->pin >8
      +                           -1){
  1102   001408  502F               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1103   00140A  B4D8               	btfsc	status,2,c
  1104   00140C  EF0A  F00A         	goto	u1151
  1105   001410  EF0C  F00A         	goto	u1150
  1106   001414                     u1151:
  1107   001414  EF1C  F00A         	goto	l2108
  1108   001418                     u1150:
  1109   001418  502F               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1110   00141A  6ED9               	movwf	fsr2l,c
  1111   00141C  6ADA               	clrf	fsr2h,c
  1112   00141E  30DF               	rrcf	223,w,c
  1113   001420  32E8               	rrcf	wreg,f,c
  1114   001422  32E8               	rrcf	wreg,f,c
  1115   001424  0B07               	andlw	7
  1116   001426  6E30               	movwf	??_gpio_pin_intialize^0,c
  1117   001428  0E07               	movlw	7
  1118   00142A  6430               	cpfsgt	??_gpio_pin_intialize^0,c
  1119   00142C  EF1A  F00A         	goto	u1161
  1120   001430  EF1C  F00A         	goto	u1160
  1121   001434                     u1161:
  1122   001434  EF20  F00A         	goto	l2110
  1123   001438                     u1160:
  1124   001438                     l2108:
  1125                           
  1126                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:                  ret = (Std_ReturnType)0x00;
  1127   001438  0E00               	movlw	0
  1128   00143A  6E31               	movwf	gpio_pin_intialize@ret^0,c
  1129                           
  1130                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:      }else{
  1131   00143C  EF31  F00A         	goto	l2112
  1132   001440                     l2110:
  1133                           
  1134                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:          ret = gpio_pin_direction_intialize( _pin_conf
      +                          ig );
  1135   001440  C02F  F027         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1136   001444  EC0B  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1137   001448  6E31               	movwf	gpio_pin_intialize@ret^0,c
  1138                           
  1139                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:          ret = gpio_pin_write_logic(_pin_config ,_pin_
      +                          config-> logic);
  1140   00144A  C02F  F027         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1141   00144E  502F               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1142   001450  6ED9               	movwf	fsr2l,c
  1143   001452  6ADA               	clrf	fsr2h,c
  1144   001454  0E00               	movlw	0
  1145   001456  BEDF               	btfsc	indf2,7,c
  1146   001458  0E01               	movlw	1
  1147   00145A  6E28               	movwf	gpio_pin_write_logic@logic^0,c
  1148   00145C  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
  1149   001460  6E31               	movwf	gpio_pin_intialize@ret^0,c
  1150   001462                     l2112:
  1151                           
  1152                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:      return ret;
  1153   001462  5031               	movf	gpio_pin_intialize@ret^0,w,c
  1154   001464  0012               	return		;funcret
  1155   001466                     __end_of_gpio_pin_intialize:
  1156                           	callstack 0
  1157                           
  1158 ;; *************** function _gpio_pin_write_logic *****************
  1159 ;; Defined at:
  1160 ;;		line 70 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1163 ;;		 -> dc_motor_1$dc_motor_pin(2), dc_motor_1(2), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  1164 ;;		 -> relay_intialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_intialize@pin_obj(1), 
  1165 ;;  logic           1    1[COMRAM] enum E2982
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  ret             1    7[COMRAM] unsigned char 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      unsigned char 
  1170 ;; Registers used:
  1171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;Total ram usage:        8 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_dc_motor_turn_right
  1187 ;;		_dc_motor_turn_left
  1188 ;;		_dc_motor_stop
  1189 ;;		_gpio_pin_intialize
  1190 ;;		_led_turn_on
  1191 ;;		_led_turn_off
  1192 ;;		_relay_turn_on
  1193 ;;		_relay_turn_off
  1194 ;;		_seven_segment_write_number
  1195 ;;		_keypad_get_value
  1196 ;;		_lcd_4bit_send_command
  1197 ;;		_lcd_4bit_send_char_data
  1198 ;;		_lcd_8bit_send_command
  1199 ;;		_lcd_8bit_send_char_data
  1200 ;;		_lcd_send_4bits
  1201 ;;		_lcd_4bit_send_enable_signal
  1202 ;;		_lcd_8bit_send_enable_signal
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text9
  1207   001128                     __ptext9:
  1208                           	callstack 0
  1209   001128                     _gpio_pin_write_logic:
  1210                           	callstack 29
  1211   001128                     
  1212                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  1213   001128  0E01               	movlw	1
  1214   00112A  6E2E               	movwf	gpio_pin_write_logic@ret^0,c
  1215                           
  1216                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     if(((void*)0)==_pin_config|| _pin_config->pin >8 -1
      +                           ){
  1217   00112C  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1218   00112E  B4D8               	btfsc	status,2,c
  1219   001130  EF9C  F008         	goto	u1061
  1220   001134  EF9E  F008         	goto	u1060
  1221   001138                     u1061:
  1222   001138  EFAE  F008         	goto	l2068
  1223   00113C                     u1060:
  1224   00113C  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1225   00113E  6ED9               	movwf	fsr2l,c
  1226   001140  6ADA               	clrf	fsr2h,c
  1227   001142  30DF               	rrcf	223,w,c
  1228   001144  32E8               	rrcf	wreg,f,c
  1229   001146  32E8               	rrcf	wreg,f,c
  1230   001148  0B07               	andlw	7
  1231   00114A  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1232   00114C  0E07               	movlw	7
  1233   00114E  6429               	cpfsgt	??_gpio_pin_write_logic^0,c
  1234   001150  EFAC  F008         	goto	u1071
  1235   001154  EFAE  F008         	goto	u1070
  1236   001158                     u1071:
  1237   001158  EF05  F009         	goto	l2076
  1238   00115C                     u1070:
  1239   00115C                     l2068:
  1240                           
  1241                           ;MCAL_Layer/GPIO/hal_gpio.c: 73:         ret = (Std_ReturnType)0x00;
  1242   00115C  0E00               	movlw	0
  1243   00115E  6E2E               	movwf	gpio_pin_write_logic@ret^0,c
  1244                           
  1245                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     }else{
  1246   001160  EF1A  F009         	goto	l2078
  1247   001164                     l2070:
  1248                           
  1249                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  1250   001164  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1251   001166  6ED9               	movwf	fsr2l,c
  1252   001168  6ADA               	clrf	fsr2h,c
  1253   00116A  30DF               	rrcf	223,w,c
  1254   00116C  32E8               	rrcf	wreg,f,c
  1255   00116E  32E8               	rrcf	wreg,f,c
  1256   001170  0B07               	andlw	7
  1257   001172  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1258   001174  0E01               	movlw	1
  1259   001176  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1260   001178  2A29               	incf	??_gpio_pin_write_logic^0,f,c
  1261   00117A  EFC1  F008         	goto	u1084
  1262   00117E                     u1085:
  1263   00117E  90D8               	bcf	status,0,c
  1264   001180  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1265   001182                     u1084:
  1266   001182  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
  1267   001184  EFBF  F008         	goto	u1085
  1268   001188  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1269   00118A  6ED9               	movwf	fsr2l,c
  1270   00118C  6ADA               	clrf	fsr2h,c
  1271   00118E  50DF               	movf	223,w,c
  1272   001190  0B07               	andlw	7
  1273   001192  0D02               	mullw	2
  1274   001194  50F3               	movf	243,w,c
  1275   001196  0F0B               	addlw	low _lat_registers
  1276   001198  6ED9               	movwf	fsr2l,c
  1277   00119A  6ADA               	clrf	fsr2h,c
  1278   00119C  CFDE F02B          	movff	postinc2,??_gpio_pin_write_logic+2
  1279   0011A0  CFDD F02C          	movff	postdec2,??_gpio_pin_write_logic+3
  1280   0011A4  C02B  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1281   0011A8  C02C  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1282   0011AC  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1283   0011AE  12DF               	iorwf	indf2,f,c
  1284                           
  1285                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:                 break;
  1286   0011B0  EF1A  F009         	goto	l2078
  1287   0011B4                     l2072:
  1288                           
  1289                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  1290   0011B4  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1291   0011B6  6ED9               	movwf	fsr2l,c
  1292   0011B8  6ADA               	clrf	fsr2h,c
  1293   0011BA  30DF               	rrcf	223,w,c
  1294   0011BC  32E8               	rrcf	wreg,f,c
  1295   0011BE  32E8               	rrcf	wreg,f,c
  1296   0011C0  0B07               	andlw	7
  1297   0011C2  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1298   0011C4  0E01               	movlw	1
  1299   0011C6  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1300   0011C8  2A29               	incf	??_gpio_pin_write_logic^0,f,c
  1301   0011CA  EFE9  F008         	goto	u1094
  1302   0011CE                     u1095:
  1303   0011CE  90D8               	bcf	status,0,c
  1304   0011D0  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1305   0011D2                     u1094:
  1306   0011D2  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
  1307   0011D4  EFE7  F008         	goto	u1095
  1308   0011D8  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1309   0011DA  0AFF               	xorlw	255
  1310   0011DC  6E2B               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1311   0011DE  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1312   0011E0  6ED9               	movwf	fsr2l,c
  1313   0011E2  6ADA               	clrf	fsr2h,c
  1314   0011E4  50DF               	movf	223,w,c
  1315   0011E6  0B07               	andlw	7
  1316   0011E8  0D02               	mullw	2
  1317   0011EA  50F3               	movf	243,w,c
  1318   0011EC  0F0B               	addlw	low _lat_registers
  1319   0011EE  6ED9               	movwf	fsr2l,c
  1320   0011F0  6ADA               	clrf	fsr2h,c
  1321   0011F2  CFDE F02C          	movff	postinc2,??_gpio_pin_write_logic+3
  1322   0011F6  CFDD F02D          	movff	postdec2,??_gpio_pin_write_logic+4
  1323   0011FA  C02C  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1324   0011FE  C02D  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1325   001202  502B               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1326   001204  16DF               	andwf	indf2,f,c
  1327                           
  1328                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
  1329   001206  EF1A  F009         	goto	l2078
  1330   00120A                     l2076:
  1331   00120A  5028               	movf	gpio_pin_write_logic@logic^0,w,c
  1332   00120C  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1333   00120E  6A2A               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1334                           
  1335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1336                           ; Switch size 1, requested type "simple"
  1337                           ; Number of cases is 1, Range of values is 0 to 0
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; simple_byte            4     3 (average)
  1341                           ;	Chosen strategy is simple_byte
  1342   001210  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1343   001212  0A00               	xorlw	0	; case 0
  1344   001214  B4D8               	btfsc	status,2,c
  1345   001216  EF0F  F009         	goto	l2806
  1346   00121A  EFAE  F008         	goto	l2068
  1347   00121E                     l2806:
  1348                           
  1349                           ; Switch size 1, requested type "simple"
  1350                           ; Number of cases is 2, Range of values is 0 to 1
  1351                           ; switch strategies available:
  1352                           ; Name         Instructions Cycles
  1353                           ; simple_byte            7     4 (average)
  1354                           ;	Chosen strategy is simple_byte
  1355   00121E  5029               	movf	??_gpio_pin_write_logic^0,w,c
  1356   001220  0A00               	xorlw	0	; case 0
  1357   001222  B4D8               	btfsc	status,2,c
  1358   001224  EFDA  F008         	goto	l2072
  1359   001228  0A01               	xorlw	1	; case 1
  1360   00122A  B4D8               	btfsc	status,2,c
  1361   00122C  EFB2  F008         	goto	l2070
  1362   001230  EFAE  F008         	goto	l2068
  1363   001234                     l2078:
  1364                           
  1365                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:         return ret ;
  1366   001234  502E               	movf	gpio_pin_write_logic@ret^0,w,c
  1367   001236  0012               	return		;funcret
  1368   001238                     __end_of_gpio_pin_write_logic:
  1369                           	callstack 0
  1370                           
  1371 ;; *************** function _button_intialize *****************
  1372 ;; Defined at:
  1373 ;;		line 15 in file "ECU_Layer/button/button.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  btn             1    7[COMRAM] PTR const struct .
  1376 ;;		 -> switch__(3), button(3), 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  ret             1    8[COMRAM] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      unsigned char 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1388 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;Total ram usage:        2 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 1
  1395 ;; This function calls:
  1396 ;;		_gpio_pin_direction_intialize
  1397 ;; This function is called by:
  1398 ;;		_application_intialize
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text10
  1403   00157A                     __ptext10:
  1404                           	callstack 0
  1405   00157A                     _button_intialize:
  1406                           	callstack 28
  1407   00157A                     
  1408                           ;ECU_Layer/button/button.c: 17:     if(((void*)0) == btn){
  1409   00157A  502E               	movf	button_intialize@btn^0,w,c
  1410   00157C  A4D8               	btfss	status,2,c
  1411   00157E  EFC3  F00A         	goto	u1171
  1412   001582  EFC5  F00A         	goto	u1170
  1413   001586                     u1171:
  1414   001586  EFC9  F00A         	goto	l2120
  1415   00158A                     u1170:
  1416   00158A                     
  1417                           ;ECU_Layer/button/button.c: 18:         ret = (Std_ReturnType)0x00 ;
  1418   00158A  0E00               	movlw	0
  1419   00158C  6E2F               	movwf	button_intialize@ret^0,c
  1420                           
  1421                           ;ECU_Layer/button/button.c: 19:     }else{
  1422   00158E  EFCE  F00A         	goto	l2122
  1423   001592                     l2120:
  1424                           
  1425                           ;ECU_Layer/button/button.c: 20:         ret = gpio_pin_direction_intialize(&(btn ->butto
      +                          n_pin));
  1426   001592  C02E  F027         	movff	button_intialize@btn,gpio_pin_direction_intialize@_pin_config
  1427   001596  EC0B  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1428   00159A  6E2F               	movwf	button_intialize@ret^0,c
  1429   00159C                     l2122:
  1430                           
  1431                           ;ECU_Layer/button/button.c: 23:     return ret ;
  1432   00159C  502F               	movf	button_intialize@ret^0,w,c
  1433   00159E  0012               	return		;funcret
  1434   0015A0                     __end_of_button_intialize:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function _gpio_pin_direction_intialize *****************
  1438 ;; Defined at:
  1439 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1442 ;;		 -> dc_motor_1$dc_motor_pin(2), dc_motor_1(2), switch__(3), button(3), 
  1443 ;;		 -> relay_intialize@pin_obj(1), led_intialize@pin_obj(1), 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  ret             1    6[COMRAM] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      unsigned char 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1455 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;Total ram usage:        7 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_button_intialize
  1465 ;;		_gpio_pin_intialize
  1466 ;;		_keypad_intialize
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text11
  1471   001016                     __ptext11:
  1472                           	callstack 0
  1473   001016                     _gpio_pin_direction_intialize:
  1474                           	callstack 27
  1475   001016                     
  1476                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  1477   001016  0E01               	movlw	1
  1478   001018  6E2D               	movwf	gpio_pin_direction_intialize@ret^0,c
  1479                           
  1480                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if(((void*)0)==_pin_config || _pin_config->pin >8 -
      +                          1){
  1481   00101A  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1482   00101C  B4D8               	btfsc	status,2,c
  1483   00101E  EF13  F008         	goto	u1101
  1484   001022  EF15  F008         	goto	u1100
  1485   001026                     u1101:
  1486   001026  EF25  F008         	goto	l2090
  1487   00102A                     u1100:
  1488   00102A  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1489   00102C  6ED9               	movwf	fsr2l,c
  1490   00102E  6ADA               	clrf	fsr2h,c
  1491   001030  30DF               	rrcf	223,w,c
  1492   001032  32E8               	rrcf	wreg,f,c
  1493   001034  32E8               	rrcf	wreg,f,c
  1494   001036  0B07               	andlw	7
  1495   001038  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
  1496   00103A  0E07               	movlw	7
  1497   00103C  6428               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1498   00103E  EF23  F008         	goto	u1111
  1499   001042  EF25  F008         	goto	u1110
  1500   001046                     u1111:
  1501   001046  EF7C  F008         	goto	l2098
  1502   00104A                     u1110:
  1503   00104A                     l2090:
  1504                           
  1505                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (Std_ReturnType)0x00;
  1506   00104A  0E00               	movlw	0
  1507   00104C  6E2D               	movwf	gpio_pin_direction_intialize@ret^0,c
  1508                           
  1509                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }else{
  1510   00104E  EF92  F008         	goto	l2100
  1511   001052                     l2092:
  1512                           
  1513                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  1514   001052  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1515   001054  6ED9               	movwf	fsr2l,c
  1516   001056  6ADA               	clrf	fsr2h,c
  1517   001058  30DF               	rrcf	223,w,c
  1518   00105A  32E8               	rrcf	wreg,f,c
  1519   00105C  32E8               	rrcf	wreg,f,c
  1520   00105E  0B07               	andlw	7
  1521   001060  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
  1522   001062  0E01               	movlw	1
  1523   001064  6E29               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1524   001066  2A28               	incf	??_gpio_pin_direction_intialize^0,f,c
  1525   001068  EF38  F008         	goto	u1124
  1526   00106C                     u1125:
  1527   00106C  90D8               	bcf	status,0,c
  1528   00106E  3629               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1529   001070                     u1124:
  1530   001070  2E28               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1531   001072  EF36  F008         	goto	u1125
  1532   001076  5029               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1533   001078  0AFF               	xorlw	255
  1534   00107A  6E2A               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1535   00107C  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1536   00107E  6ED9               	movwf	fsr2l,c
  1537   001080  6ADA               	clrf	fsr2h,c
  1538   001082  50DF               	movf	223,w,c
  1539   001084  0B07               	andlw	7
  1540   001086  0D02               	mullw	2
  1541   001088  50F3               	movf	243,w,c
  1542   00108A  0F15               	addlw	low _tris_registers
  1543   00108C  6ED9               	movwf	fsr2l,c
  1544   00108E  6ADA               	clrf	fsr2h,c
  1545   001090  CFDE F02B          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1546   001094  CFDD F02C          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1547   001098  C02B  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1548   00109C  C02C  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1549   0010A0  502A               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1550   0010A2  16DF               	andwf	indf2,f,c
  1551                           
  1552                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:               break;
  1553   0010A4  EF92  F008         	goto	l2100
  1554   0010A8                     l2094:
  1555                           
  1556                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  1557   0010A8  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1558   0010AA  6ED9               	movwf	fsr2l,c
  1559   0010AC  6ADA               	clrf	fsr2h,c
  1560   0010AE  30DF               	rrcf	223,w,c
  1561   0010B0  32E8               	rrcf	wreg,f,c
  1562   0010B2  32E8               	rrcf	wreg,f,c
  1563   0010B4  0B07               	andlw	7
  1564   0010B6  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
  1565   0010B8  0E01               	movlw	1
  1566   0010BA  6E29               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1567   0010BC  2A28               	incf	??_gpio_pin_direction_intialize^0,f,c
  1568   0010BE  EF63  F008         	goto	u1134
  1569   0010C2                     u1135:
  1570   0010C2  90D8               	bcf	status,0,c
  1571   0010C4  3629               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1572   0010C6                     u1134:
  1573   0010C6  2E28               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1574   0010C8  EF61  F008         	goto	u1135
  1575   0010CC  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1576   0010CE  6ED9               	movwf	fsr2l,c
  1577   0010D0  6ADA               	clrf	fsr2h,c
  1578   0010D2  50DF               	movf	223,w,c
  1579   0010D4  0B07               	andlw	7
  1580   0010D6  0D02               	mullw	2
  1581   0010D8  50F3               	movf	243,w,c
  1582   0010DA  0F15               	addlw	low _tris_registers
  1583   0010DC  6ED9               	movwf	fsr2l,c
  1584   0010DE  6ADA               	clrf	fsr2h,c
  1585   0010E0  CFDE F02A          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1586   0010E4  CFDD F02B          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1587   0010E8  C02A  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1588   0010EC  C02B  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1589   0010F0  5029               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1590   0010F2  12DF               	iorwf	indf2,f,c
  1591                           
  1592                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:               break;
  1593   0010F4  EF92  F008         	goto	l2100
  1594   0010F8                     l2098:
  1595   0010F8  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1596   0010FA  6ED9               	movwf	fsr2l,c
  1597   0010FC  6ADA               	clrf	fsr2h,c
  1598   0010FE  BCDF               	btfsc	indf2,6,c
  1599   001100  EF84  F008         	goto	u1141
  1600   001104  EF87  F008         	goto	u1140
  1601   001108                     u1141:
  1602   001108  0E01               	movlw	1
  1603   00110A  EF88  F008         	goto	u1146
  1604   00110E                     u1140:
  1605   00110E  0E00               	movlw	0
  1606   001110                     u1146:
  1607                           
  1608                           ; Switch size 1, requested type "simple"
  1609                           ; Number of cases is 2, Range of values is 0 to 1
  1610                           ; switch strategies available:
  1611                           ; Name         Instructions Cycles
  1612                           ; simple_byte            7     4 (average)
  1613                           ;	Chosen strategy is simple_byte
  1614   001110  0A00               	xorlw	0	; case 0
  1615   001112  B4D8               	btfsc	status,2,c
  1616   001114  EF29  F008         	goto	l2092
  1617   001118  0A01               	xorlw	1	; case 1
  1618   00111A  B4D8               	btfsc	status,2,c
  1619   00111C  EF54  F008         	goto	l2094
  1620   001120  EF25  F008         	goto	l2090
  1621   001124                     l2100:
  1622                           
  1623                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret ;
  1624   001124  502D               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1625   001126  0012               	return		;funcret
  1626   001128                     __end_of_gpio_pin_direction_intialize:
  1627                           	callstack 0
  1628                           
  1629                           	psect	rparam
  1630   000000                     
  1631                           	psect	config
  1632                           
  1633                           ; Padding undefined space
  1634   300000                     	org	3145728
  1635   300000  FF                 	db	255
  1636                           
  1637                           ;Config register CONFIG1H @ 0x300001
  1638                           ;	Oscillator Selection bits
  1639                           ;	OSC = HS, HS oscillator
  1640                           ;	Fail-Safe Clock Monitor Enable bit
  1641                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1642                           ;	Internal/External Oscillator Switchover bit
  1643                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1644   300001                     	org	3145729
  1645   300001  02                 	db	2
  1646                           
  1647                           ;Config register CONFIG2L @ 0x300002
  1648                           ;	Power-up Timer Enable bit
  1649                           ;	PWRT = OFF, PWRT disabled
  1650                           ;	Brown-out Reset Enable bits
  1651                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1652                           ;	Brown Out Reset Voltage bits
  1653                           ;	BORV = 1, 
  1654   300002                     	org	3145730
  1655   300002  09                 	db	9
  1656                           
  1657                           ;Config register CONFIG2H @ 0x300003
  1658                           ;	Watchdog Timer Enable bit
  1659                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1660                           ;	Watchdog Timer Postscale Select bits
  1661                           ;	WDTPS = 32768, 1:32768
  1662   300003                     	org	3145731
  1663   300003  1E                 	db	30
  1664                           
  1665                           ; Padding undefined space
  1666   300004                     	org	3145732
  1667   300004  FF                 	db	255
  1668                           
  1669                           ;Config register CONFIG3H @ 0x300005
  1670                           ;	CCP2 MUX bit
  1671                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1672                           ;	PORTB A/D Enable bit
  1673                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1674                           ;	Low-Power Timer1 Oscillator Enable bit
  1675                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1676                           ;	MCLR Pin Enable bit
  1677                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1678   300005                     	org	3145733
  1679   300005  81                 	db	129
  1680                           
  1681                           ;Config register CONFIG4L @ 0x300006
  1682                           ;	Stack Full/Underflow Reset Enable bit
  1683                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1684                           ;	Single-Supply ICSP Enable bit
  1685                           ;	LVP = OFF, Single-Supply ICSP disabled
  1686                           ;	Extended Instruction Set Enable bit
  1687                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1688                           ;	Background Debugger Enable bit
  1689                           ;	DEBUG = 0x1, unprogrammed default
  1690   300006                     	org	3145734
  1691   300006  81                 	db	129
  1692                           
  1693                           ; Padding undefined space
  1694   300007                     	org	3145735
  1695   300007  FF                 	db	255
  1696                           
  1697                           ;Config register CONFIG5L @ 0x300008
  1698                           ;	Code Protection bit
  1699                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1700                           ;	Code Protection bit
  1701                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1702                           ;	Code Protection bit
  1703                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1704                           ;	Code Protection bit
  1705                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1706   300008                     	org	3145736
  1707   300008  0F                 	db	15
  1708                           
  1709                           ;Config register CONFIG5H @ 0x300009
  1710                           ;	Boot Block Code Protection bit
  1711                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1712                           ;	Data EEPROM Code Protection bit
  1713                           ;	CPD = OFF, Data EEPROM not code-protected
  1714   300009                     	org	3145737
  1715   300009  C0                 	db	192
  1716                           
  1717                           ;Config register CONFIG6L @ 0x30000A
  1718                           ;	Write Protection bit
  1719                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1720                           ;	Write Protection bit
  1721                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1722                           ;	Write Protection bit
  1723                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1724                           ;	Write Protection bit
  1725                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1726   30000A                     	org	3145738
  1727   30000A  0F                 	db	15
  1728                           
  1729                           ;Config register CONFIG6H @ 0x30000B
  1730                           ;	Configuration Register Write Protection bit
  1731                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1732                           ;	Boot Block Write Protection bit
  1733                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1734                           ;	Data EEPROM Write Protection bit
  1735                           ;	WRTD = OFF, Data EEPROM not write-protected
  1736   30000B                     	org	3145739
  1737   30000B  E0                 	db	224
  1738                           
  1739                           ;Config register CONFIG7L @ 0x30000C
  1740                           ;	Table Read Protection bit
  1741                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1742                           ;	Table Read Protection bit
  1743                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1744                           ;	Table Read Protection bit
  1745                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1746                           ;	Table Read Protection bit
  1747                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1748   30000C                     	org	3145740
  1749   30000C  0F                 	db	15
  1750                           
  1751                           ;Config register CONFIG7H @ 0x30000D
  1752                           ;	Boot Block Table Read Protection bit
  1753                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1754   30000D                     	org	3145741
  1755   30000D  40                 	db	64
  1756                           tosu	equ	0xFFF
  1757                           tosh	equ	0xFFE
  1758                           tosl	equ	0xFFD
  1759                           stkptr	equ	0xFFC
  1760                           pclatu	equ	0xFFB
  1761                           pclath	equ	0xFFA
  1762                           pcl	equ	0xFF9
  1763                           tblptru	equ	0xFF8
  1764                           tblptrh	equ	0xFF7
  1765                           tblptrl	equ	0xFF6
  1766                           tablat	equ	0xFF5
  1767                           prodh	equ	0xFF4
  1768                           prodl	equ	0xFF3
  1769                           indf0	equ	0xFEF
  1770                           postinc0	equ	0xFEE
  1771                           postdec0	equ	0xFED
  1772                           preinc0	equ	0xFEC
  1773                           plusw0	equ	0xFEB
  1774                           fsr0h	equ	0xFEA
  1775                           fsr0l	equ	0xFE9
  1776                           wreg	equ	0xFE8
  1777                           indf1	equ	0xFE7
  1778                           postinc1	equ	0xFE6
  1779                           postdec1	equ	0xFE5
  1780                           preinc1	equ	0xFE4
  1781                           plusw1	equ	0xFE3
  1782                           fsr1h	equ	0xFE2
  1783                           fsr1l	equ	0xFE1
  1784                           bsr	equ	0xFE0
  1785                           indf2	equ	0xFDF
  1786                           postinc2	equ	0xFDE
  1787                           postdec2	equ	0xFDD
  1788                           preinc2	equ	0xFDC
  1789                           plusw2	equ	0xFDB
  1790                           fsr2h	equ	0xFDA
  1791                           fsr2l	equ	0xFD9
  1792                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        38
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     13      62
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    button_intialize@btn	PTR const struct . size(1) Largest target is 3
		 -> button(COMRAM[3]), switch__(COMRAM[3]), 

    button_read_state@btn	PTR const struct . size(1) Largest target is 3
		 -> button(COMRAM[3]), switch__(COMRAM[3]), 

    button_read_state@btn_state	PTR enum E3042 size(1) Largest target is 1
		 -> Push_button_status(COMRAM[1]), switch_status(COMRAM[1]), 

    dc_motor_intialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), 

    dc_motor_turn_left@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), 

    dc_motor_turn_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 3
		 -> button(COMRAM[3]), dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), led_intialize@pin_obj(COMRAM[1]), 
		 -> relay_intialize@pin_obj(COMRAM[1]), switch__(COMRAM[3]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), led_intialize@pin_obj(COMRAM[1]), relay_intialize@pin_obj(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 3
		 -> button(COMRAM[3]), switch__(COMRAM[3]), 

    gpio_pin_read_logic@logic	PTR enum E2982 size(1) Largest target is 1
		 -> button_read_state@pin_logic_status(COMRAM[1]), keypad_get_value@column_logic(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), led_intialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), relay_intialize@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1270$buffer	PTR unsigned char  size(2) Largest target is 0

    S1270$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_button_read_state
    _dc_motor_turn_right->_gpio_pin_write_logic
    _dc_motor_turn_left->_gpio_pin_write_logic
    _dc_motor_stop->_gpio_pin_write_logic
    _button_read_state->_gpio_pin_read_logic
    _application_intialize->_dc_motor_intialize
    _dc_motor_intialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _button_intialize->_gpio_pin_direction_intialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23539
                                             12 COMRAM     1     1      0
              _application_intialize
                  _button_read_state
                      _dc_motor_stop
                 _dc_motor_turn_left
                _dc_motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _dc_motor_turn_right                                  2     1      1    5035
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_turn_left                                   2     1      1    5035
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    5035
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _button_read_state                                    5     3      2    1055
                                              7 COMRAM     5     3      2
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     460
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0    7350
                   _button_intialize
                 _dc_motor_intialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_intialize                                   2     1      1    6718
                                             11 COMRAM     1     0      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    6574
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _button_intialize                                     2     1      1     628
                                              7 COMRAM     2     1      1
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _button_intialize
       _gpio_pin_direction_intialize
     _dc_motor_intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
   _button_read_state
     _gpio_pin_read_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _dc_motor_turn_left
     _gpio_pin_write_logic
   _dc_motor_turn_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      D      3E       1       48.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E      39        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jul 17 15:21:32 2024

                                     l43 159E                                       l53 12E6  
                                     l58 12E8                                       l96 1552  
                                    l101 14CA                                      l111 152A  
                                    l106 14FA                                      l422 138C  
                                    l415 1236                                      l505 15B8  
                                    l436 1464                                      l396 1126  
                                    wreg 0FE8                                     l2100 1124  
                                   l2110 1440                                     l2120 1592  
                                   l2112 1462                                     l2104 1408  
                                   l2122 159C                                     l2106 1418  
                                   l2130 130E                                     l2116 157A  
                                   l2108 1438                                     l2140 152C  
                                   l2132 132E                                     l2118 158A  
                                   l2070 1164                                     l2142 153C  
                                   l2134 1336                                     l2126 12EA  
                                   l2230 1260                                     l2072 11B4  
                                   l2064 1128                                     l2144 1540  
                                   l2136 138A                                     l2128 12FE  
                                   l2240 12AA                                     l2232 1268  
                                   l2090 104A                                     l2066 113C  
                                   l2146 1550                                     l2242 12B8  
                                   l2234 1274                                     l2250 12E6  
                                   l2226 1238                                     l2092 1052  
                                   l2076 120A                                     l2068 115C  
                                   l2244 12D2                                     l2236 128E  
                                   l2228 1250                                     l2260 14C8  
                                   l2094 10A8                                     l2086 1016  
                                   l2078 1234                                     l2350 15B0  
                                   l2238 129E                                     l2270 14F8  
                                   l2254 149C                                     l2088 102A  
                                   l2344 15A0                                     l2280 1528  
                                   l2264 14CC                                     l2256 14AC  
                                   l2098 10F8                                     l2346 15A0  
                                   l2274 14FC                                     l2266 14DC  
                                   l2258 14B0                                     l2348 15A8  
                                   l2276 150C                                     l2268 14E0  
                                   l2278 1510                                     l2800 13F8  
                                   l2806 121E                                     l2780 138E  
                                   l2790 13C2                                     l2782 138E  
                                   l2792 13CE                                     l2784 1392  
                                   l2794 13D6                                     l2786 139E  
                                   l2796 13DA                                     l2788 13AE  
                                   l2798 13E6                                     STR_1 1011  
                                   u1100 102A                                     u1101 1026  
                                   u1110 104A                                     u1111 1046  
                                   u1200 132E                                     u1201 132A  
                                   u1140 110E                                     u1124 1070  
                                   u1060 113C                                     u1220 153C  
                                   u1300 1250                                     u1141 1108  
                                   u1125 106C                                     u1061 1138  
                                   u1221 1538                                     u1301 124C  
                                   u1134 10C6                                     u1070 115C  
                                   u1150 1418                                     u1214 137E  
                                   u1310 1260                                     u1135 10C2  
                                   u1071 1158                                     u1151 1414  
                                   u1215 137A                                     u1311 125C  
                                   u1160 1438                                     u1320 128E  
                                   u1161 1434                                     u1321 128A  
                                   u1146 1110                                     u1170 158A  
                                   u1330 129E                                     u1171 1586  
                                   u1331 129A                                     u1084 1182  
                                   u1180 12FE                                     u1340 12D2  
                                   u1085 117E                                     u1181 12FA  
                                   u1341 12CE                                     _LATA 0F89  
                                   u1094 11D2                                     u1190 130E  
                                   u1350 12E2                                     _LATB 0F8A  
                                   u1095 11CE                                     u1191 130A  
                                   u1351 12DE                                     _LATC 0F8B  
                                   u1360 14AC                                     _LATD 0F8C  
                                   u1361 14A8                                     _LATE 0F8D  
                                   u1370 14DC                                     u1371 14D8  
                                   u1380 150C                                     u1381 1508  
                                   u1900 13C2                                     u1901 13BE  
                                   u1910 13F8                                     u1911 13F4  
                                   u1890 13AE                                     u1891 13AA  
                ??_application_intialize 0033           gpio_pin_read_logic@_pin_config 0027  
                                   _main 138E                                     fsr1h 0FE2  
                                   fsr2h 0FDA                                     indf1 0FE7  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000                             ___param_bank 0000  
                   _gpio_pin_write_logic 1128                                    ?_main 0027  
                    relay_turn_off@F3066 0036                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                        ?_button_intialize 002E  
                     ??_button_intialize 002F                                    tablat 0FF5  
                                  status 0FD8                          __initialization 1466  
            dc_motor_turn_left@_dc_motor 002F                             __end_of_main 1408  
                  ?_gpio_pin_write_logic 0027                 gpio_pin_read_logic@logic 0028  
                          _lat_registers 000B                                   ??_main 0033  
                          __activetblptr 0002                         led_turn_on@F3067 003B  
                      _button_read_state 1238                       ?_button_read_state 002E  
                    ??_button_read_state 0030                                   _button 0022  
                                 clear_0 148C                                   isa$std 0001  
gpio_pin_direction_intialize@_pin_config 0027                             __pdataCOMRAM 0001  
                           __mediumconst 0000                __end_of_button_read_state 12EA  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0080  
                __end_of__initialization 1492                            ___rparam_used 0001  
                 ??_gpio_pin_write_logic 0029                           __pcstackCOMRAM 0027  
            __end_of_dc_motor_turn_right 14CC                            _switch_status 003D  
                             _dc_motor_1 0025            __end_of_application_intialize 15BA  
                   relay_intialize@F3056 0038                     button_read_state@btn 002E  
                   button_read_state@ret 0031                        led_turn_off@F3072 003A  
                   led_turn_toggle@F3077 0039                               _btn_values 1001  
                         _tris_registers 0015                                  __Hparam 0000  
                                __Lparam 0000                      _gpio_pin_read_logic 12EA  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 1466  
                                __pcinit 1466                                  __ramtop 1000  
                                __ptext0 138E                                  __ptext1 149C  
                                __ptext2 14CC                                  __ptext3 14FC  
                                __ptext4 1238                                  __ptext5 12EA  
                                __ptext6 15A0                                  __ptext7 152C  
                                __ptext8 1408                                  __ptext9 1128  
                   ?_gpio_pin_read_logic 0027                     end_of_initialization 1492  
                          __Lmediumconst 0000                    gpio_pin_intialize@ret 0031  
                          _dc_motor_stop 14FC                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc1 0FE6                                  postinc2 0FDE  
                             _motor_pin1 0035                               _motor_pin2 0034  
             button_read_state@btn_state 002F            gpio_pin_intialize@_pin_config 002F  
   __end_of_gpio_pin_direction_intialize 1128             _gpio_pin_direction_intialize 1016  
                  ??_gpio_pin_read_logic 0029                           ?_dc_motor_stop 002F  
                     relay_turn_on@F3061 0037                            __pidataCOMRAM 1554  
                     _Push_button_status 003E                      start_initialization 1466  
          ?_gpio_pin_direction_intialize 0027               __end_of_dc_motor_intialize 1554  
                 dc_motor_stop@_dc_motor 002F                         _button_intialize 157A  
                            __pbssCOMRAM 0034               __end_of_dc_motor_turn_left 14FC  
        gpio_pin_direction_intialize@ret 002D                          ??_dc_motor_stop 0030  
                  _application_intialize 15A0          gpio_pin_write_logic@_pin_config 0027  
      button_read_state@pin_logic_status 0032                gpio_pin_write_logic@logic 0028  
                            __smallconst 1000             dc_motor_turn_right@_dc_motor 002F  
                     _gpio_pin_intialize 1408           ??_gpio_pin_direction_intialize 0028  
                    button_intialize@btn 002E                      button_intialize@ret 002F  
                    ?_gpio_pin_intialize 002F                     ??_gpio_pin_intialize 0030  
                gpio_pin_write_logic@ret 002E                                copy_data0 147A  
                 gpio_pin_read_logic@ret 002D                   ?_application_intialize 0027  
                               __Hrparam 0000                                 __Lrparam 0000  
                     __end_of_btn_values 1011              __end_of_gpio_pin_read_logic 138E  
               __end_of_button_intialize 15A0                       led_intialize@F3062 003C  
                               __ptext10 157A                                 __ptext11 1016  
                               isa$xinst 0000                      _dc_motor_turn_right 149C  
                     _dc_motor_intialize 152C                                 main@temp 0033  
                               _switch__ 001F                      ?_dc_motor_intialize 0032  
                   ?_dc_motor_turn_right 002F             __end_of_gpio_pin_write_logic 1238  
                   ??_dc_motor_intialize 0033                       _dc_motor_turn_left 14CC  
                    ?_dc_motor_turn_left 002F                           _port_registers 0001  
                  ??_dc_motor_turn_right 0030                     ??_dc_motor_turn_left 0030  
                  __end_of_dc_motor_stop 152C              dc_motor_intialize@_dc_motor 0032  
