

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jun 22 16:37:42 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 17/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   0013F4                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _port_registers
    65   0013F4  80                 	db	128
    66   0013F5  0F                 	db	15
    67   0013F6  81                 	db	129
    68   0013F7  0F                 	db	15
    69   0013F8  82                 	db	130
    70   0013F9  0F                 	db	15
    71   0013FA  83                 	db	131
    72   0013FB  0F                 	db	15
    73   0013FC  84                 	db	132
    74   0013FD  0F                 	db	15
    75                           
    76                           ;initializer for _lat_registers
    77   0013FE  89                 	db	137
    78   0013FF  0F                 	db	15
    79   001400  8A                 	db	138
    80   001401  0F                 	db	15
    81   001402  8B                 	db	139
    82   001403  0F                 	db	15
    83   001404  8C                 	db	140
    84   001405  0F                 	db	15
    85   001406  8D                 	db	141
    86   001407  0F                 	db	15
    87                           
    88                           ;initializer for _tris_registers
    89   001408  92                 	db	146
    90   001409  0F                 	db	15
    91   00140A  93                 	db	147
    92   00140B  0F                 	db	15
    93   00140C  94                 	db	148
    94   00140D  0F                 	db	15
    95   00140E  95                 	db	149
    96   00140F  0F                 	db	15
    97   001410  96                 	db	150
    98   001411  0F                 	db	15
    99                           
   100                           ;initializer for _dc_motor_2
   101   001412  92                 	db	146
   102   001413  9A                 	db	154
   103                           
   104                           ;initializer for _dc_motor_1
   105   001414  82                 	db	130
   106   001415  8A                 	db	138
   107                           
   108                           	psect	nvCOMRAM
   109   00003A                     __pnvCOMRAM:
   110                           	callstack 0
   111   00003A                     _ret:
   112                           	callstack 0
   113   00003A                     	ds	1
   114   000000                     _PORTE	set	3972
   115   000000                     _PORTD	set	3971
   116   000000                     _PORTC	set	3970
   117   000000                     _PORTB	set	3969
   118   000000                     _PORTA	set	3968
   119   000000                     _LATA	set	3977
   120   000000                     _TRISA	set	3986
   121   000000                     _TRISE	set	3990
   122   000000                     _TRISD	set	3989
   123   000000                     _TRISC	set	3988
   124   000000                     _TRISB	set	3987
   125   000000                     _LATE	set	3981
   126   000000                     _LATD	set	3980
   127   000000                     _LATC	set	3979
   128   000000                     _LATB	set	3978
   129                           
   130                           ; #config settings
   131                           
   132                           	psect	cinit
   133   001306                     __pcinit:
   134                           	callstack 0
   135   001306                     start_initialization:
   136                           	callstack 0
   137   001306                     __initialization:
   138                           	callstack 0
   139                           
   140                           ; Initialize objects allocated to COMRAM (34 bytes)
   141                           ; load TBLPTR registers with __pidataCOMRAM
   142   001306  0EF4               	movlw	low __pidataCOMRAM
   143   001308  6EF6               	movwf	tblptrl,c
   144   00130A  0E13               	movlw	high __pidataCOMRAM
   145   00130C  6EF7               	movwf	tblptrh,c
   146   00130E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   147   001310  6EF8               	movwf	tblptru,c
   148   001312  EE00  F001         	lfsr	0,__pdataCOMRAM
   149   001316  EE10 F022          	lfsr	1,34
   150   00131A                     copy_data0:
   151   00131A  0009               	tblrd		*+
   152   00131C  CFF5 FFEE          	movff	tablat,postinc0
   153   001320  50E5               	movf	postdec1,w,c
   154   001322  50E1               	movf	fsr1l,w,c
   155   001324  E1FA               	bnz	copy_data0
   156                           
   157                           ; Clear objects allocated to COMRAM (9 bytes)
   158   001326  EE00  F031         	lfsr	0,__pbssCOMRAM
   159   00132A  0E09               	movlw	9
   160   00132C                     clear_0:
   161   00132C  6AEE               	clrf	postinc0,c
   162   00132E  06E8               	decf	wreg,f,c
   163   001330  E1FD               	bnz	clear_0
   164   001332                     end_of_initialization:
   165                           	callstack 0
   166   001332                     __end_of__initialization:
   167                           	callstack 0
   168   001332  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169   001334  6EF8               	movwf	tblptru,c
   170   001336  0100               	movlb	0
   171   001338  EF12  F009         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	bssCOMRAM
   174   000031                     __pbssCOMRAM:
   175                           	callstack 0
   176   000031                     	ds	1
   177   000032                     	ds	1
   178   000033                     relay_turn_off@F2578:
   179                           	callstack 0
   180   000033                     	ds	1
   181   000034                     relay_turn_on@F2573:
   182                           	callstack 0
   183   000034                     	ds	1
   184   000035                     relay_intialize@F2568:
   185                           	callstack 0
   186   000035                     	ds	1
   187   000036                     led_turn_toggle@F2589:
   188                           	callstack 0
   189   000036                     	ds	1
   190   000037                     led_turn_off@F2584:
   191                           	callstack 0
   192   000037                     	ds	1
   193   000038                     led_turn_on@F2579:
   194                           	callstack 0
   195   000038                     	ds	1
   196   000039                     led_intialize@F2574:
   197                           	callstack 0
   198   000039                     	ds	1
   199                           
   200                           	psect	dataCOMRAM
   201   000001                     __pdataCOMRAM:
   202                           	callstack 0
   203   000001                     _port_registers:
   204                           	callstack 0
   205   000001                     	ds	10
   206   00000B                     _lat_registers:
   207                           	callstack 0
   208   00000B                     	ds	10
   209   000015                     _tris_registers:
   210                           	callstack 0
   211   000015                     	ds	10
   212   00001F                     _dc_motor_2:
   213                           	callstack 0
   214   00001F                     	ds	2
   215   000021                     _dc_motor_1:
   216                           	callstack 0
   217   000021                     	ds	2
   218                           
   219                           	psect	cstackCOMRAM
   220   000023                     __pcstackCOMRAM:
   221                           	callstack 0
   222   000023                     gpio_pin_direction_intialize@_pin_config:
   223                           	callstack 0
   224   000023                     gpio_pin_write_logic@_pin_config:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x0
   228   000023                     	ds	1
   229   000024                     ??_gpio_pin_direction_intialize:
   230   000024                     gpio_pin_write_logic@logic:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0x1
   234   000024                     	ds	1
   235   000025                     ??_gpio_pin_write_logic:
   236                           
   237                           ; 1 bytes @ 0x2
   238   000025                     	ds	4
   239   000029                     gpio_pin_direction_intialize@ret:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x6
   243   000029                     	ds	1
   244   00002A                     gpio_pin_write_logic@ret:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x7
   248   00002A                     	ds	1
   249   00002B                     dc_motor_turn_right@_dc_motor:
   250                           	callstack 0
   251   00002B                     dc_motor_turn_left@_dc_motor:
   252                           	callstack 0
   253   00002B                     dc_motor_stop@_dc_motor:
   254                           	callstack 0
   255   00002B                     gpio_pin_intialize@_pin_config:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x8
   259   00002B                     	ds	1
   260   00002C                     ??_gpio_pin_intialize:
   261   00002C                     
   262                           ; 1 bytes @ 0x9
   263   00002C                     	ds	1
   264   00002D                     gpio_pin_intialize@ret:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0xA
   268   00002D                     	ds	1
   269   00002E                     dc_motor_intialize@_dc_motor:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0xB
   273   00002E                     	ds	1
   274   00002F                     ??_main:
   275                           
   276                           ; 1 bytes @ 0xC
   277   00002F                     	ds	2
   278                           
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 42 in file "application.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  2  250[None  ] int 
   291 ;; Registers used:
   292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;Total ram usage:        2 bytes
   303 ;; Hardware stack levels required when called: 4
   304 ;; This function calls:
   305 ;;		_application_intialize
   306 ;;		_dc_motor_stop
   307 ;;		_dc_motor_turn_left
   308 ;;		_dc_motor_turn_right
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text0
   315   001224                     __ptext0:
   316                           	callstack 0
   317   001224                     _main:
   318                           	callstack 27
   319   001224                     
   320                           ;application.c: 43:     application_intialize();
   321   001224  EC0B  F00A         	call	_application_intialize	;wreg free
   322   001228                     l251:
   323                           
   324                           ;application.c: 45:         ret = dc_motor_turn_right(&dc_motor_1);
   325   001228  0E21               	movlw	low _dc_motor_1
   326   00122A  6E2B               	movwf	dc_motor_turn_right@_dc_motor^0,c
   327   00122C  EC9E  F009         	call	_dc_motor_turn_right	;wreg free
   328   001230  6E3A               	movwf	_ret^0,c
   329                           
   330                           ;application.c: 46:         ret = dc_motor_turn_left(&dc_motor_2);
   331   001232  0E1F               	movlw	low _dc_motor_2
   332   001234  6E2B               	movwf	dc_motor_turn_left@_dc_motor^0,c
   333   001236  ECB6  F009         	call	_dc_motor_turn_left	;wreg free
   334   00123A  6E3A               	movwf	_ret^0,c
   335   00123C                     
   336                           ;application.c: 47:         _delay((unsigned long)((3000)*((uint64)3200000/4000.0)));
   337   00123C  0E0D               	movlw	13
   338   00123E  6E30               	movwf	(??_main+1)^0,c
   339   001240  0E2D               	movlw	45
   340   001242  6E2F               	movwf	??_main^0,c
   341   001244  0ED8               	movlw	216
   342   001246                     u837:
   343   001246  2EE8               	decfsz	wreg,f,c
   344   001248  D7FE               	bra	u837
   345   00124A  2E2F               	decfsz	??_main^0,f,c
   346   00124C  D7FC               	bra	u837
   347   00124E  2E30               	decfsz	(??_main+1)^0,f,c
   348   001250  D7FA               	bra	u837
   349   001252                     
   350                           ;application.c: 48:         ret = dc_motor_turn_right(&dc_motor_2);
   351   001252  0E1F               	movlw	low _dc_motor_2
   352   001254  6E2B               	movwf	dc_motor_turn_right@_dc_motor^0,c
   353   001256  EC9E  F009         	call	_dc_motor_turn_right	;wreg free
   354   00125A  6E3A               	movwf	_ret^0,c
   355   00125C                     
   356                           ;application.c: 49:         ret = dc_motor_turn_left(&dc_motor_1);
   357   00125C  0E21               	movlw	low _dc_motor_1
   358   00125E  6E2B               	movwf	dc_motor_turn_left@_dc_motor^0,c
   359   001260  ECB6  F009         	call	_dc_motor_turn_left	;wreg free
   360   001264  6E3A               	movwf	_ret^0,c
   361   001266                     
   362                           ;application.c: 50:         _delay((unsigned long)((3000)*((uint64)3200000/4000.0)));
   363   001266  0E0D               	movlw	13
   364   001268  6E30               	movwf	(??_main+1)^0,c
   365   00126A  0E2D               	movlw	45
   366   00126C  6E2F               	movwf	??_main^0,c
   367   00126E  0ED8               	movlw	216
   368   001270                     u847:
   369   001270  2EE8               	decfsz	wreg,f,c
   370   001272  D7FE               	bra	u847
   371   001274  2E2F               	decfsz	??_main^0,f,c
   372   001276  D7FC               	bra	u847
   373   001278  2E30               	decfsz	(??_main+1)^0,f,c
   374   00127A  D7FA               	bra	u847
   375                           
   376                           ;application.c: 51:         ret = dc_motor_stop(&dc_motor_1);
   377   00127C  0E21               	movlw	low _dc_motor_1
   378   00127E  6E2B               	movwf	dc_motor_stop@_dc_motor^0,c
   379   001280  ECCE  F009         	call	_dc_motor_stop	;wreg free
   380   001284  6E3A               	movwf	_ret^0,c
   381                           
   382                           ;application.c: 52:         ret = dc_motor_stop(&dc_motor_2);
   383   001286  0E1F               	movlw	low _dc_motor_2
   384   001288  6E2B               	movwf	dc_motor_stop@_dc_motor^0,c
   385   00128A  ECCE  F009         	call	_dc_motor_stop	;wreg free
   386   00128E  6E3A               	movwf	_ret^0,c
   387   001290                     
   388                           ;application.c: 53:         _delay((unsigned long)((3000)*((uint64)3200000/4000.0)));
   389   001290  0E0D               	movlw	13
   390   001292  6E30               	movwf	(??_main+1)^0,c
   391   001294  0E2D               	movlw	45
   392   001296  6E2F               	movwf	??_main^0,c
   393   001298  0ED8               	movlw	216
   394   00129A                     u857:
   395   00129A  2EE8               	decfsz	wreg,f,c
   396   00129C  D7FE               	bra	u857
   397   00129E  2E2F               	decfsz	??_main^0,f,c
   398   0012A0  D7FC               	bra	u857
   399   0012A2  2E30               	decfsz	(??_main+1)^0,f,c
   400   0012A4  D7FA               	bra	u857
   401   0012A6  EF14  F009         	goto	l251
   402   0012AA  EF00  F000         	goto	start
   403   0012AE                     __end_of_main:
   404                           	callstack 0
   405                           
   406 ;; *************** function _dc_motor_turn_right *****************
   407 ;; Defined at:
   408 ;;		line 38 in file "ECU_Layer/DC_motor/DC_motor.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   411 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  ret             1    0        unsigned char 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      unsigned char 
   416 ;; Registers used:
   417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   423 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;Total ram usage:        1 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; Hardware stack levels required when called: 1
   430 ;; This function calls:
   431 ;;		_gpio_pin_write_logic
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text1
   438   00133C                     __ptext1:
   439                           	callstack 0
   440   00133C                     _dc_motor_turn_right:
   441                           	callstack 29
   442   00133C                     
   443                           ;ECU_Layer/DC_motor/DC_motor.c: 40:      if(((void*)0)==_dc_motor){
   444   00133C  502B               	movf	dc_motor_turn_right@_dc_motor^0,w,c
   445   00133E  A4D8               	btfss	status,2,c
   446   001340  EFA4  F009         	goto	u671
   447   001344  EFA6  F009         	goto	u670
   448   001348                     u671:
   449   001348  EFA8  F009         	goto	l1345
   450   00134C                     u670:
   451   00134C                     
   452                           ;ECU_Layer/DC_motor/DC_motor.c: 42:      }else{
   453   00134C  EFB4  F009         	goto	l1347
   454   001350                     l1345:
   455                           
   456                           ;ECU_Layer/DC_motor/DC_motor.c: 43:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0]),GPIO_HIGH);
   457   001350  C02B  F023         	movff	dc_motor_turn_right@_dc_motor,gpio_pin_write_logic@_pin_config
   458   001354  0E01               	movlw	1
   459   001356  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   460   001358  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   461                           
   462                           ;ECU_Layer/DC_motor/DC_motor.c: 44:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[1]),GPIO_LOW);
   463   00135C  282B               	incf	dc_motor_turn_right@_dc_motor^0,w,c
   464   00135E  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   465   001360  0E00               	movlw	0
   466   001362  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   467   001364  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   468   001368                     l1347:
   469                           
   470                           ;ECU_Layer/DC_motor/DC_motor.c: 46:     return (Std_ReturnType)0x01;
   471   001368  0E01               	movlw	1
   472   00136A  0012               	return		;funcret
   473   00136C                     __end_of_dc_motor_turn_right:
   474                           	callstack 0
   475                           
   476 ;; *************** function _dc_motor_turn_left *****************
   477 ;; Defined at:
   478 ;;		line 56 in file "ECU_Layer/DC_motor/DC_motor.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   481 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  ret             1    0        unsigned char 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      unsigned char 
   486 ;; Registers used:
   487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   493 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;Total ram usage:        1 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; Hardware stack levels required when called: 1
   500 ;; This function calls:
   501 ;;		_gpio_pin_write_logic
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text2
   508   00136C                     __ptext2:
   509                           	callstack 0
   510   00136C                     _dc_motor_turn_left:
   511                           	callstack 29
   512   00136C                     
   513                           ;ECU_Layer/DC_motor/DC_motor.c: 58:      if(((void*)0)==_dc_motor){
   514   00136C  502B               	movf	dc_motor_turn_left@_dc_motor^0,w,c
   515   00136E  A4D8               	btfss	status,2,c
   516   001370  EFBC  F009         	goto	u681
   517   001374  EFBE  F009         	goto	u680
   518   001378                     u681:
   519   001378  EFC0  F009         	goto	l1355
   520   00137C                     u680:
   521   00137C                     
   522                           ;ECU_Layer/DC_motor/DC_motor.c: 60:      }else{
   523   00137C  EFCC  F009         	goto	l1357
   524   001380                     l1355:
   525                           
   526                           ;ECU_Layer/DC_motor/DC_motor.c: 61:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0]),GPIO_LOW);
   527   001380  C02B  F023         	movff	dc_motor_turn_left@_dc_motor,gpio_pin_write_logic@_pin_config
   528   001384  0E00               	movlw	0
   529   001386  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   530   001388  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   531                           
   532                           ;ECU_Layer/DC_motor/DC_motor.c: 62:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[1]),GPIO_HIGH);
   533   00138C  282B               	incf	dc_motor_turn_left@_dc_motor^0,w,c
   534   00138E  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   535   001390  0E01               	movlw	1
   536   001392  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   537   001394  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   538   001398                     l1357:
   539                           
   540                           ;ECU_Layer/DC_motor/DC_motor.c: 64:     return (Std_ReturnType)0x01;
   541   001398  0E01               	movlw	1
   542   00139A  0012               	return		;funcret
   543   00139C                     __end_of_dc_motor_turn_left:
   544                           	callstack 0
   545                           
   546 ;; *************** function _dc_motor_stop *****************
   547 ;; Defined at:
   548 ;;		line 74 in file "ECU_Layer/DC_motor/DC_motor.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   551 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  ret             1    0        unsigned char 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      unsigned char 
   556 ;; Registers used:
   557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   563 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;Total ram usage:        1 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; Hardware stack levels required when called: 1
   570 ;; This function calls:
   571 ;;		_gpio_pin_write_logic
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text3
   578   00139C                     __ptext3:
   579                           	callstack 0
   580   00139C                     _dc_motor_stop:
   581                           	callstack 29
   582   00139C                     
   583                           ;ECU_Layer/DC_motor/DC_motor.c: 76:      if(((void*)0)==_dc_motor){
   584   00139C  502B               	movf	dc_motor_stop@_dc_motor^0,w,c
   585   00139E  A4D8               	btfss	status,2,c
   586   0013A0  EFD4  F009         	goto	u691
   587   0013A4  EFD6  F009         	goto	u690
   588   0013A8                     u691:
   589   0013A8  EFD8  F009         	goto	l1365
   590   0013AC                     u690:
   591   0013AC                     
   592                           ;ECU_Layer/DC_motor/DC_motor.c: 78:      }else{
   593   0013AC  EFE4  F009         	goto	l1367
   594   0013B0                     l1365:
   595                           
   596                           ;ECU_Layer/DC_motor/DC_motor.c: 79:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0]),GPIO_LOW);
   597   0013B0  C02B  F023         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
   598   0013B4  0E00               	movlw	0
   599   0013B6  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   600   0013B8  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   601                           
   602                           ;ECU_Layer/DC_motor/DC_motor.c: 80:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[1]),GPIO_LOW);
   603   0013BC  282B               	incf	dc_motor_stop@_dc_motor^0,w,c
   604   0013BE  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   605   0013C0  0E00               	movlw	0
   606   0013C2  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   607   0013C4  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   608   0013C8                     l1367:
   609                           
   610                           ;ECU_Layer/DC_motor/DC_motor.c: 82:     return (Std_ReturnType)0x01;
   611   0013C8  0E01               	movlw	1
   612   0013CA  0012               	return		;funcret
   613   0013CC                     __end_of_dc_motor_stop:
   614                           	callstack 0
   615                           
   616 ;; *************** function _application_intialize *****************
   617 ;; Defined at:
   618 ;;		line 57 in file "application.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; Hardware stack levels required when called: 3
   639 ;; This function calls:
   640 ;;		_dc_motor_intialize
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text4
   647   001416                     __ptext4:
   648                           	callstack 0
   649   001416                     _application_intialize:
   650                           	callstack 27
   651   001416                     
   652                           ;application.c: 58:     ret = dc_motor_intialize(&dc_motor_1);
   653   001416  0E21               	movlw	low _dc_motor_1
   654   001418  6E2E               	movwf	dc_motor_intialize@_dc_motor^0,c
   655   00141A  ECE6  F009         	call	_dc_motor_intialize	;wreg free
   656   00141E  6E3A               	movwf	_ret^0,c
   657                           
   658                           ;application.c: 59:     ret = dc_motor_intialize(&dc_motor_2);
   659   001420  0E1F               	movlw	low _dc_motor_2
   660   001422  6E2E               	movwf	dc_motor_intialize@_dc_motor^0,c
   661   001424  ECE6  F009         	call	_dc_motor_intialize	;wreg free
   662   001428  6E3A               	movwf	_ret^0,c
   663   00142A  0012               	return		;funcret
   664   00142C                     __end_of_application_intialize:
   665                           	callstack 0
   666                           
   667 ;; *************** function _dc_motor_intialize *****************
   668 ;; Defined at:
   669 ;;		line 19 in file "ECU_Layer/DC_motor/DC_motor.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  _dc_motor       1   11[COMRAM] PTR const struct .
   672 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  ret             1    0        unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      unsigned char 
   677 ;; Registers used:
   678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   684 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;Total ram usage:        1 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; Hardware stack levels required when called: 2
   691 ;; This function calls:
   692 ;;		_gpio_pin_intialize
   693 ;; This function is called by:
   694 ;;		_application_intialize
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text5
   699   0013CC                     __ptext5:
   700                           	callstack 0
   701   0013CC                     _dc_motor_intialize:
   702                           	callstack 27
   703   0013CC                     
   704                           ;ECU_Layer/DC_motor/DC_motor.c: 21:      if(((void*)0)==_dc_motor){
   705   0013CC  502E               	movf	dc_motor_intialize@_dc_motor^0,w,c
   706   0013CE  A4D8               	btfss	status,2,c
   707   0013D0  EFEC  F009         	goto	u661
   708   0013D4  EFEE  F009         	goto	u660
   709   0013D8                     u661:
   710   0013D8  EFF0  F009         	goto	l1335
   711   0013DC                     u660:
   712   0013DC                     
   713                           ;ECU_Layer/DC_motor/DC_motor.c: 24:      }else{
   714   0013DC  EFF8  F009         	goto	l1337
   715   0013E0                     l1335:
   716                           
   717                           ;ECU_Layer/DC_motor/DC_motor.c: 25:          gpio_pin_intialize(&(_dc_motor->dc_motor_pi
      +                          n[0]));
   718   0013E0  C02E  F02B         	movff	dc_motor_intialize@_dc_motor,gpio_pin_intialize@_pin_config
   719   0013E4  EC57  F009         	call	_gpio_pin_intialize	;wreg free
   720                           
   721                           ;ECU_Layer/DC_motor/DC_motor.c: 26:          gpio_pin_intialize(&(_dc_motor->dc_motor_pi
      +                          n[1]));
   722   0013E8  282E               	incf	dc_motor_intialize@_dc_motor^0,w,c
   723   0013EA  6E2B               	movwf	gpio_pin_intialize@_pin_config^0,c
   724   0013EC  EC57  F009         	call	_gpio_pin_intialize	;wreg free
   725   0013F0                     l1337:
   726                           
   727                           ;ECU_Layer/DC_motor/DC_motor.c: 28:      return (Std_ReturnType)0x01;
   728   0013F0  0E01               	movlw	1
   729   0013F2  0012               	return		;funcret
   730   0013F4                     __end_of_dc_motor_intialize:
   731                           	callstack 0
   732                           
   733 ;; *************** function _gpio_pin_intialize *****************
   734 ;; Defined at:
   735 ;;		line 133 in file "MCAL_Layer/GPIO/hal_gpio.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  _pin_config     1    8[COMRAM] PTR const struct .
   738 ;;		 -> dc_motor_2$dc_motor_pin(2), dc_motor_2(2), dc_motor_1$dc_motor_pin(2), dc_motor_1(2), 
   739 ;;		 -> relay_intialize@pin_obj(1), led_intialize@pin_obj(1), 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  ret             1   10[COMRAM] unsigned char 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      unsigned char 
   744 ;; Registers used:
   745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   751 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;Total ram usage:        3 bytes
   756 ;; Hardware stack levels used: 1
   757 ;; Hardware stack levels required when called: 1
   758 ;; This function calls:
   759 ;;		_gpio_pin_direction_intialize
   760 ;;		_gpio_pin_write_logic
   761 ;; This function is called by:
   762 ;;		_dc_motor_intialize
   763 ;;		_led_intialize
   764 ;;		_relay_intialize
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text6
   769   0012AE                     __ptext6:
   770                           	callstack 0
   771   0012AE                     _gpio_pin_intialize:
   772                           	callstack 27
   773   0012AE                     
   774                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:      if(((void*)0)==_pin_config || _pin_config->pin >8
      +                           -1){
   775   0012AE  502B               	movf	gpio_pin_intialize@_pin_config^0,w,c
   776   0012B0  B4D8               	btfsc	status,2,c
   777   0012B2  EF5D  F009         	goto	u641
   778   0012B6  EF5F  F009         	goto	u640
   779   0012BA                     u641:
   780   0012BA  EF6F  F009         	goto	l1325
   781   0012BE                     u640:
   782   0012BE  502B               	movf	gpio_pin_intialize@_pin_config^0,w,c
   783   0012C0  6ED9               	movwf	fsr2l,c
   784   0012C2  6ADA               	clrf	fsr2h,c
   785   0012C4  30DF               	rrcf	223,w,c
   786   0012C6  32E8               	rrcf	wreg,f,c
   787   0012C8  32E8               	rrcf	wreg,f,c
   788   0012CA  0B07               	andlw	7
   789   0012CC  6E2C               	movwf	??_gpio_pin_intialize^0,c
   790   0012CE  0E07               	movlw	7
   791   0012D0  642C               	cpfsgt	??_gpio_pin_intialize^0,c
   792   0012D2  EF6D  F009         	goto	u651
   793   0012D6  EF6F  F009         	goto	u650
   794   0012DA                     u651:
   795   0012DA  EF71  F009         	goto	l1327
   796   0012DE                     u650:
   797   0012DE                     l1325:
   798                           
   799                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:      }else{
   800   0012DE  EF82  F009         	goto	l199
   801   0012E2                     l1327:
   802                           
   803                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:          ret = gpio_pin_direction_intialize( _pin_conf
      +                          ig );
   804   0012E2  C02B  F023         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
   805   0012E6  EC01  F008         	call	_gpio_pin_direction_intialize	;wreg free
   806   0012EA  6E2D               	movwf	gpio_pin_intialize@ret^0,c
   807                           
   808                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:          ret = gpio_pin_write_logic(_pin_config ,_pin_
      +                          config-> logic);
   809   0012EC  C02B  F023         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
   810   0012F0  502B               	movf	gpio_pin_intialize@_pin_config^0,w,c
   811   0012F2  6ED9               	movwf	fsr2l,c
   812   0012F4  6ADA               	clrf	fsr2h,c
   813   0012F6  0E00               	movlw	0
   814   0012F8  BEDF               	btfsc	indf2,7,c
   815   0012FA  0E01               	movlw	1
   816   0012FC  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   817   0012FE  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   818   001302  6E2D               	movwf	gpio_pin_intialize@ret^0,c
   819   001304                     l199:
   820   001304  0012               	return		;funcret
   821   001306                     __end_of_gpio_pin_intialize:
   822                           	callstack 0
   823                           
   824 ;; *************** function _gpio_pin_write_logic *****************
   825 ;; Defined at:
   826 ;;		line 70 in file "MCAL_Layer/GPIO/hal_gpio.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   829 ;;		 -> dc_motor_2$dc_motor_pin(2), dc_motor_2(2), dc_motor_1$dc_motor_pin(2), dc_motor_1(2), 
   830 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_intialize@pin_obj(1), led_turn_off@pin_obj(1), 
   831 ;;		 -> led_turn_on@pin_obj(1), led_intialize@pin_obj(1), 
   832 ;;  logic           1    1[COMRAM] enum E2494
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  ret             1    7[COMRAM] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      unsigned char 
   837 ;; Registers used:
   838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:        8 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_dc_motor_turn_right
   854 ;;		_dc_motor_turn_left
   855 ;;		_dc_motor_stop
   856 ;;		_gpio_pin_intialize
   857 ;;		_led_turn_on
   858 ;;		_led_turn_off
   859 ;;		_relay_turn_on
   860 ;;		_relay_turn_off
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text7
   865   001114                     __ptext7:
   866                           	callstack 0
   867   001114                     _gpio_pin_write_logic:
   868                           	callstack 29
   869   001114                     
   870                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   871   001114  0E01               	movlw	1
   872   001116  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
   873                           
   874                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     if(((void*)0)==_pin_config|| _pin_config->pin >8 -1
      +                           ){
   875   001118  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   876   00111A  B4D8               	btfsc	status,2,c
   877   00111C  EF92  F008         	goto	u551
   878   001120  EF94  F008         	goto	u550
   879   001124                     u551:
   880   001124  EFA4  F008         	goto	l1285
   881   001128                     u550:
   882   001128  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   883   00112A  6ED9               	movwf	fsr2l,c
   884   00112C  6ADA               	clrf	fsr2h,c
   885   00112E  30DF               	rrcf	223,w,c
   886   001130  32E8               	rrcf	wreg,f,c
   887   001132  32E8               	rrcf	wreg,f,c
   888   001134  0B07               	andlw	7
   889   001136  6E25               	movwf	??_gpio_pin_write_logic^0,c
   890   001138  0E07               	movlw	7
   891   00113A  6425               	cpfsgt	??_gpio_pin_write_logic^0,c
   892   00113C  EFA2  F008         	goto	u561
   893   001140  EFA4  F008         	goto	u560
   894   001144                     u561:
   895   001144  EFFB  F008         	goto	l1293
   896   001148                     u560:
   897   001148                     l1285:
   898                           
   899                           ;MCAL_Layer/GPIO/hal_gpio.c: 73:         ret = (Std_ReturnType)0x00;
   900   001148  0E00               	movlw	0
   901   00114A  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
   902                           
   903                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     }else{
   904   00114C  EF10  F009         	goto	l1295
   905   001150                     l1287:
   906                           
   907                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
   908   001150  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   909   001152  6ED9               	movwf	fsr2l,c
   910   001154  6ADA               	clrf	fsr2h,c
   911   001156  30DF               	rrcf	223,w,c
   912   001158  32E8               	rrcf	wreg,f,c
   913   00115A  32E8               	rrcf	wreg,f,c
   914   00115C  0B07               	andlw	7
   915   00115E  6E25               	movwf	??_gpio_pin_write_logic^0,c
   916   001160  0E01               	movlw	1
   917   001162  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
   918   001164  2A25               	incf	??_gpio_pin_write_logic^0,f,c
   919   001166  EFB7  F008         	goto	u574
   920   00116A                     u575:
   921   00116A  90D8               	bcf	status,0,c
   922   00116C  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   923   00116E                     u574:
   924   00116E  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
   925   001170  EFB5  F008         	goto	u575
   926   001174  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   927   001176  6ED9               	movwf	fsr2l,c
   928   001178  6ADA               	clrf	fsr2h,c
   929   00117A  50DF               	movf	223,w,c
   930   00117C  0B07               	andlw	7
   931   00117E  0D02               	mullw	2
   932   001180  50F3               	movf	243,w,c
   933   001182  0F0B               	addlw	low _lat_registers
   934   001184  6ED9               	movwf	fsr2l,c
   935   001186  6ADA               	clrf	fsr2h,c
   936   001188  CFDE F027          	movff	postinc2,??_gpio_pin_write_logic+2
   937   00118C  CFDD F028          	movff	postdec2,??_gpio_pin_write_logic+3
   938   001190  C027  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
   939   001194  C028  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
   940   001198  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   941   00119A  12DF               	iorwf	indf2,f,c
   942                           
   943                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:                 break;
   944   00119C  EF10  F009         	goto	l1295
   945   0011A0                     l1289:
   946                           
   947                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
   948   0011A0  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   949   0011A2  6ED9               	movwf	fsr2l,c
   950   0011A4  6ADA               	clrf	fsr2h,c
   951   0011A6  30DF               	rrcf	223,w,c
   952   0011A8  32E8               	rrcf	wreg,f,c
   953   0011AA  32E8               	rrcf	wreg,f,c
   954   0011AC  0B07               	andlw	7
   955   0011AE  6E25               	movwf	??_gpio_pin_write_logic^0,c
   956   0011B0  0E01               	movlw	1
   957   0011B2  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
   958   0011B4  2A25               	incf	??_gpio_pin_write_logic^0,f,c
   959   0011B6  EFDF  F008         	goto	u584
   960   0011BA                     u585:
   961   0011BA  90D8               	bcf	status,0,c
   962   0011BC  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   963   0011BE                     u584:
   964   0011BE  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
   965   0011C0  EFDD  F008         	goto	u585
   966   0011C4  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   967   0011C6  0AFF               	xorlw	255
   968   0011C8  6E27               	movwf	(??_gpio_pin_write_logic+2)^0,c
   969   0011CA  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   970   0011CC  6ED9               	movwf	fsr2l,c
   971   0011CE  6ADA               	clrf	fsr2h,c
   972   0011D0  50DF               	movf	223,w,c
   973   0011D2  0B07               	andlw	7
   974   0011D4  0D02               	mullw	2
   975   0011D6  50F3               	movf	243,w,c
   976   0011D8  0F0B               	addlw	low _lat_registers
   977   0011DA  6ED9               	movwf	fsr2l,c
   978   0011DC  6ADA               	clrf	fsr2h,c
   979   0011DE  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+3
   980   0011E2  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+4
   981   0011E6  C028  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   982   0011EA  C029  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   983   0011EE  5027               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   984   0011F0  16DF               	andwf	indf2,f,c
   985                           
   986                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
   987   0011F2  EF10  F009         	goto	l1295
   988   0011F6                     l1293:
   989   0011F6  5024               	movf	gpio_pin_write_logic@logic^0,w,c
   990   0011F8  6E25               	movwf	??_gpio_pin_write_logic^0,c
   991   0011FA  6A26               	clrf	(??_gpio_pin_write_logic+1)^0,c
   992                           
   993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   994                           ; Switch size 1, requested type "simple"
   995                           ; Number of cases is 1, Range of values is 0 to 0
   996                           ; switch strategies available:
   997                           ; Name         Instructions Cycles
   998                           ; simple_byte            4     3 (average)
   999                           ;	Chosen strategy is simple_byte
  1000   0011FC  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1001   0011FE  0A00               	xorlw	0	; case 0
  1002   001200  B4D8               	btfsc	status,2,c
  1003   001202  EF05  F009         	goto	l1495
  1004   001206  EFA4  F008         	goto	l1285
  1005   00120A                     l1495:
  1006                           
  1007                           ; Switch size 1, requested type "simple"
  1008                           ; Number of cases is 2, Range of values is 0 to 1
  1009                           ; switch strategies available:
  1010                           ; Name         Instructions Cycles
  1011                           ; simple_byte            7     4 (average)
  1012                           ;	Chosen strategy is simple_byte
  1013   00120A  5025               	movf	??_gpio_pin_write_logic^0,w,c
  1014   00120C  0A00               	xorlw	0	; case 0
  1015   00120E  B4D8               	btfsc	status,2,c
  1016   001210  EFD0  F008         	goto	l1289
  1017   001214  0A01               	xorlw	1	; case 1
  1018   001216  B4D8               	btfsc	status,2,c
  1019   001218  EFA8  F008         	goto	l1287
  1020   00121C  EFA4  F008         	goto	l1285
  1021   001220                     l1295:
  1022                           
  1023                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:         return ret ;
  1024   001220  502A               	movf	gpio_pin_write_logic@ret^0,w,c
  1025   001222  0012               	return		;funcret
  1026   001224                     __end_of_gpio_pin_write_logic:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _gpio_pin_direction_intialize *****************
  1030 ;; Defined at:
  1031 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1034 ;;		 -> dc_motor_2$dc_motor_pin(2), dc_motor_2(2), dc_motor_1$dc_motor_pin(2), dc_motor_1(2), 
  1035 ;;		 -> relay_intialize@pin_obj(1), led_intialize@pin_obj(1), 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  ret             1    6[COMRAM] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      unsigned char 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1047 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;Total ram usage:        7 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_gpio_pin_intialize
  1057 ;;		_button_intialize
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text8
  1062   001002                     __ptext8:
  1063                           	callstack 0
  1064   001002                     _gpio_pin_direction_intialize:
  1065                           	callstack 27
  1066   001002                     
  1067                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  1068   001002  0E01               	movlw	1
  1069   001004  6E29               	movwf	gpio_pin_direction_intialize@ret^0,c
  1070                           
  1071                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if(((void*)0)==_pin_config || _pin_config->pin >8 -
      +                          1){
  1072   001006  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1073   001008  B4D8               	btfsc	status,2,c
  1074   00100A  EF09  F008         	goto	u591
  1075   00100E  EF0B  F008         	goto	u590
  1076   001012                     u591:
  1077   001012  EF1B  F008         	goto	l1307
  1078   001016                     u590:
  1079   001016  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1080   001018  6ED9               	movwf	fsr2l,c
  1081   00101A  6ADA               	clrf	fsr2h,c
  1082   00101C  30DF               	rrcf	223,w,c
  1083   00101E  32E8               	rrcf	wreg,f,c
  1084   001020  32E8               	rrcf	wreg,f,c
  1085   001022  0B07               	andlw	7
  1086   001024  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
  1087   001026  0E07               	movlw	7
  1088   001028  6424               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1089   00102A  EF19  F008         	goto	u601
  1090   00102E  EF1B  F008         	goto	u600
  1091   001032                     u601:
  1092   001032  EF72  F008         	goto	l1315
  1093   001036                     u600:
  1094   001036                     l1307:
  1095                           
  1096                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (Std_ReturnType)0x00;
  1097   001036  0E00               	movlw	0
  1098   001038  6E29               	movwf	gpio_pin_direction_intialize@ret^0,c
  1099                           
  1100                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }else{
  1101   00103A  EF88  F008         	goto	l1317
  1102   00103E                     l1309:
  1103                           
  1104                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  1105   00103E  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1106   001040  6ED9               	movwf	fsr2l,c
  1107   001042  6ADA               	clrf	fsr2h,c
  1108   001044  30DF               	rrcf	223,w,c
  1109   001046  32E8               	rrcf	wreg,f,c
  1110   001048  32E8               	rrcf	wreg,f,c
  1111   00104A  0B07               	andlw	7
  1112   00104C  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
  1113   00104E  0E01               	movlw	1
  1114   001050  6E25               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1115   001052  2A24               	incf	??_gpio_pin_direction_intialize^0,f,c
  1116   001054  EF2E  F008         	goto	u614
  1117   001058                     u615:
  1118   001058  90D8               	bcf	status,0,c
  1119   00105A  3625               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1120   00105C                     u614:
  1121   00105C  2E24               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1122   00105E  EF2C  F008         	goto	u615
  1123   001062  5025               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1124   001064  0AFF               	xorlw	255
  1125   001066  6E26               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1126   001068  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1127   00106A  6ED9               	movwf	fsr2l,c
  1128   00106C  6ADA               	clrf	fsr2h,c
  1129   00106E  50DF               	movf	223,w,c
  1130   001070  0B07               	andlw	7
  1131   001072  0D02               	mullw	2
  1132   001074  50F3               	movf	243,w,c
  1133   001076  0F15               	addlw	low _tris_registers
  1134   001078  6ED9               	movwf	fsr2l,c
  1135   00107A  6ADA               	clrf	fsr2h,c
  1136   00107C  CFDE F027          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1137   001080  CFDD F028          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1138   001084  C027  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1139   001088  C028  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1140   00108C  5026               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1141   00108E  16DF               	andwf	indf2,f,c
  1142                           
  1143                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:               break;
  1144   001090  EF88  F008         	goto	l1317
  1145   001094                     l1311:
  1146                           
  1147                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  1148   001094  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1149   001096  6ED9               	movwf	fsr2l,c
  1150   001098  6ADA               	clrf	fsr2h,c
  1151   00109A  30DF               	rrcf	223,w,c
  1152   00109C  32E8               	rrcf	wreg,f,c
  1153   00109E  32E8               	rrcf	wreg,f,c
  1154   0010A0  0B07               	andlw	7
  1155   0010A2  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
  1156   0010A4  0E01               	movlw	1
  1157   0010A6  6E25               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1158   0010A8  2A24               	incf	??_gpio_pin_direction_intialize^0,f,c
  1159   0010AA  EF59  F008         	goto	u624
  1160   0010AE                     u625:
  1161   0010AE  90D8               	bcf	status,0,c
  1162   0010B0  3625               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1163   0010B2                     u624:
  1164   0010B2  2E24               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1165   0010B4  EF57  F008         	goto	u625
  1166   0010B8  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1167   0010BA  6ED9               	movwf	fsr2l,c
  1168   0010BC  6ADA               	clrf	fsr2h,c
  1169   0010BE  50DF               	movf	223,w,c
  1170   0010C0  0B07               	andlw	7
  1171   0010C2  0D02               	mullw	2
  1172   0010C4  50F3               	movf	243,w,c
  1173   0010C6  0F15               	addlw	low _tris_registers
  1174   0010C8  6ED9               	movwf	fsr2l,c
  1175   0010CA  6ADA               	clrf	fsr2h,c
  1176   0010CC  CFDE F026          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1177   0010D0  CFDD F027          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1178   0010D4  C026  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1179   0010D8  C027  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1180   0010DC  5025               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1181   0010DE  12DF               	iorwf	indf2,f,c
  1182                           
  1183                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:               break;
  1184   0010E0  EF88  F008         	goto	l1317
  1185   0010E4                     l1315:
  1186   0010E4  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1187   0010E6  6ED9               	movwf	fsr2l,c
  1188   0010E8  6ADA               	clrf	fsr2h,c
  1189   0010EA  BCDF               	btfsc	indf2,6,c
  1190   0010EC  EF7A  F008         	goto	u631
  1191   0010F0  EF7D  F008         	goto	u630
  1192   0010F4                     u631:
  1193   0010F4  0E01               	movlw	1
  1194   0010F6  EF7E  F008         	goto	u636
  1195   0010FA                     u630:
  1196   0010FA  0E00               	movlw	0
  1197   0010FC                     u636:
  1198                           
  1199                           ; Switch size 1, requested type "simple"
  1200                           ; Number of cases is 2, Range of values is 0 to 1
  1201                           ; switch strategies available:
  1202                           ; Name         Instructions Cycles
  1203                           ; simple_byte            7     4 (average)
  1204                           ;	Chosen strategy is simple_byte
  1205   0010FC  0A00               	xorlw	0	; case 0
  1206   0010FE  B4D8               	btfsc	status,2,c
  1207   001100  EF1F  F008         	goto	l1309
  1208   001104  0A01               	xorlw	1	; case 1
  1209   001106  B4D8               	btfsc	status,2,c
  1210   001108  EF4A  F008         	goto	l1311
  1211   00110C  EF1B  F008         	goto	l1307
  1212   001110                     l1317:
  1213                           
  1214                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret ;
  1215   001110  5029               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1216   001112  0012               	return		;funcret
  1217   001114                     __end_of_gpio_pin_direction_intialize:
  1218                           	callstack 0
  1219                           
  1220                           	psect	smallconst
  1221   001000                     __psmallconst:
  1222                           	callstack 0
  1223   001000  00                 	db	0
  1224   001001  00                 	db	0	; dummy byte at the end
  1225   000000                     
  1226                           	psect	rparam
  1227   000000                     
  1228                           	psect	config
  1229                           
  1230                           ; Padding undefined space
  1231   300000                     	org	3145728
  1232   300000  FF                 	db	255
  1233                           
  1234                           ;Config register CONFIG1H @ 0x300001
  1235                           ;	Oscillator Selection bits
  1236                           ;	OSC = HS, HS oscillator
  1237                           ;	Fail-Safe Clock Monitor Enable bit
  1238                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1239                           ;	Internal/External Oscillator Switchover bit
  1240                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1241   300001                     	org	3145729
  1242   300001  02                 	db	2
  1243                           
  1244                           ;Config register CONFIG2L @ 0x300002
  1245                           ;	Power-up Timer Enable bit
  1246                           ;	PWRT = OFF, PWRT disabled
  1247                           ;	Brown-out Reset Enable bits
  1248                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1249                           ;	Brown Out Reset Voltage bits
  1250                           ;	BORV = 1, 
  1251   300002                     	org	3145730
  1252   300002  09                 	db	9
  1253                           
  1254                           ;Config register CONFIG2H @ 0x300003
  1255                           ;	Watchdog Timer Enable bit
  1256                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1257                           ;	Watchdog Timer Postscale Select bits
  1258                           ;	WDTPS = 32768, 1:32768
  1259   300003                     	org	3145731
  1260   300003  1E                 	db	30
  1261                           
  1262                           ; Padding undefined space
  1263   300004                     	org	3145732
  1264   300004  FF                 	db	255
  1265                           
  1266                           ;Config register CONFIG3H @ 0x300005
  1267                           ;	CCP2 MUX bit
  1268                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1269                           ;	PORTB A/D Enable bit
  1270                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1271                           ;	Low-Power Timer1 Oscillator Enable bit
  1272                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1273                           ;	MCLR Pin Enable bit
  1274                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1275   300005                     	org	3145733
  1276   300005  81                 	db	129
  1277                           
  1278                           ;Config register CONFIG4L @ 0x300006
  1279                           ;	Stack Full/Underflow Reset Enable bit
  1280                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1281                           ;	Single-Supply ICSP Enable bit
  1282                           ;	LVP = OFF, Single-Supply ICSP disabled
  1283                           ;	Extended Instruction Set Enable bit
  1284                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1285                           ;	Background Debugger Enable bit
  1286                           ;	DEBUG = 0x1, unprogrammed default
  1287   300006                     	org	3145734
  1288   300006  81                 	db	129
  1289                           
  1290                           ; Padding undefined space
  1291   300007                     	org	3145735
  1292   300007  FF                 	db	255
  1293                           
  1294                           ;Config register CONFIG5L @ 0x300008
  1295                           ;	Code Protection bit
  1296                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1297                           ;	Code Protection bit
  1298                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1299                           ;	Code Protection bit
  1300                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1301                           ;	Code Protection bit
  1302                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1303   300008                     	org	3145736
  1304   300008  0F                 	db	15
  1305                           
  1306                           ;Config register CONFIG5H @ 0x300009
  1307                           ;	Boot Block Code Protection bit
  1308                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1309                           ;	Data EEPROM Code Protection bit
  1310                           ;	CPD = OFF, Data EEPROM not code-protected
  1311   300009                     	org	3145737
  1312   300009  C0                 	db	192
  1313                           
  1314                           ;Config register CONFIG6L @ 0x30000A
  1315                           ;	Write Protection bit
  1316                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1317                           ;	Write Protection bit
  1318                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1319                           ;	Write Protection bit
  1320                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1321                           ;	Write Protection bit
  1322                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1323   30000A                     	org	3145738
  1324   30000A  0F                 	db	15
  1325                           
  1326                           ;Config register CONFIG6H @ 0x30000B
  1327                           ;	Configuration Register Write Protection bit
  1328                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1329                           ;	Boot Block Write Protection bit
  1330                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1331                           ;	Data EEPROM Write Protection bit
  1332                           ;	WRTD = OFF, Data EEPROM not write-protected
  1333   30000B                     	org	3145739
  1334   30000B  E0                 	db	224
  1335                           
  1336                           ;Config register CONFIG7L @ 0x30000C
  1337                           ;	Table Read Protection bit
  1338                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1339                           ;	Table Read Protection bit
  1340                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1341                           ;	Table Read Protection bit
  1342                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1343                           ;	Table Read Protection bit
  1344                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1345   30000C                     	org	3145740
  1346   30000C  0F                 	db	15
  1347                           
  1348                           ;Config register CONFIG7H @ 0x30000D
  1349                           ;	Boot Block Table Read Protection bit
  1350                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1351   30000D                     	org	3145741
  1352   30000D  40                 	db	64
  1353                           tosu	equ	0xFFF
  1354                           tosh	equ	0xFFE
  1355                           tosl	equ	0xFFD
  1356                           stkptr	equ	0xFFC
  1357                           pclatu	equ	0xFFB
  1358                           pclath	equ	0xFFA
  1359                           pcl	equ	0xFF9
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           prodh	equ	0xFF4
  1365                           prodl	equ	0xFF3
  1366                           indf0	equ	0xFEF
  1367                           postinc0	equ	0xFEE
  1368                           postdec0	equ	0xFED
  1369                           preinc0	equ	0xFEC
  1370                           plusw0	equ	0xFEB
  1371                           fsr0h	equ	0xFEA
  1372                           fsr0l	equ	0xFE9
  1373                           wreg	equ	0xFE8
  1374                           indf1	equ	0xFE7
  1375                           postinc1	equ	0xFE6
  1376                           postdec1	equ	0xFE5
  1377                           preinc1	equ	0xFE4
  1378                           plusw1	equ	0xFE3
  1379                           fsr1h	equ	0xFE2
  1380                           fsr1l	equ	0xFE1
  1381                           bsr	equ	0xFE0
  1382                           indf2	equ	0xFDF
  1383                           postinc2	equ	0xFDE
  1384                           postdec2	equ	0xFDD
  1385                           preinc2	equ	0xFDC
  1386                           plusw2	equ	0xFDB
  1387                           fsr2h	equ	0xFDA
  1388                           fsr2l	equ	0xFD9
  1389                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         9
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     14      58
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_intialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_turn_left@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_turn_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> led_intialize@pin_obj(COMRAM[1]), relay_intialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> led_intialize@pin_obj(COMRAM[1]), relay_intialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> led_intialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_intialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _dc_motor_turn_right->_gpio_pin_write_logic
    _dc_motor_turn_left->_gpio_pin_write_logic
    _dc_motor_stop->_gpio_pin_write_logic
    _application_intialize->_dc_motor_intialize
    _dc_motor_intialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9039
                                             12 COMRAM     2     2      0
              _application_intialize
                      _dc_motor_stop
                 _dc_motor_turn_left
                _dc_motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _dc_motor_turn_right                                  2     1      1    2071
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_turn_left                                   2     1      1    2071
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    2071
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0    2826
                 _dc_motor_intialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_intialize                                   2     1      1    2826
                                             11 COMRAM     1     0      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    2606
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1851
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _dc_motor_intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _dc_motor_turn_left
     _gpio_pin_write_logic
   _dc_motor_turn_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      E      3A       1       45.7%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A      39        0.0%
DATA                 0      0      3A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jun 22 16:37:42 2024

                                     l96 13F2                                      l101 136A  
                                    l111 13CA                                      l106 139A  
                                    l251 1228                                      l159 1112  
                                    l257 142A                                      l178 1222  
                                    l199 1304                                      u600 1036  
                                    u601 1032                                      u630 10FA  
                                    u614 105C                                      u550 1128  
                                    u631 10F4                                      u615 1058  
                                    u551 1124                                      u624 10B2  
                                    u560 1148                                      u640 12BE  
                                    u625 10AE                                      u561 1144  
                                    u641 12BA                                      u650 12DE  
                                    u651 12DA                                      u636 10FC  
                                    u660 13DC                                      u661 13D8  
                                    u590 1016                                      u574 116E  
                                    u670 134C                                      u591 1012  
                                    u575 116A                                      u671 1348  
                                    u584 11BE                                      u680 137C  
                                    u585 11BA                                      u681 1378  
                                    u690 13AC                                      u691 13A8  
                                    u837 1246                                      u847 1270  
                                    u857 129A                                      _ret 003A  
                                    wreg 0FE8                                     l1311 1094  
                                   l1303 1002                                     l1305 1016  
                                   l1321 12AE                                     l1315 10E4  
                                   l1307 1036                                     l1323 12BE  
                                   l1331 13CC                                     l1309 103E  
                                   l1317 1110                                     l1325 12DE  
                                   l1333 13DC                                     l1341 133C  
                                   l1327 12E2                                     l1335 13E0  
                                   l1351 136C                                     l1343 134C  
                                   l1281 1114                                     l1337 13F0  
                                   l1361 139C                                     l1353 137C  
                                   l1345 1350                                     l1283 1128  
                                   l1371 1416                                     l1363 13AC  
                                   l1355 1380                                     l1347 1368  
                                   l1293 11F6                                     l1285 1148  
                                   l1365 13B0                                     l1357 1398  
                                   l1287 1150                                     l1295 1220  
                                   l1367 13C8                                     l1289 11A0  
                                   l1481 123C                                     l1483 1252  
                                   l1485 125C                                     l1495 120A  
                                   l1487 1266                                     l1479 1224  
                                   l1489 1290                                     _LATA 0F89  
                                   _LATB 0F8A                                     _LATC 0F8B  
                                   _LATD 0F8C                                     _LATE 0F8D  
                ??_application_intialize 002F                                     _main 1224  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
                           ___param_bank 0000                     _gpio_pin_write_logic 1114  
                                  ?_main 0023                      relay_turn_off@F2578 0033  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
                                  tablat 0FF5                                    status 0FD8  
                        __initialization 1306              dc_motor_turn_left@_dc_motor 002B  
                           __end_of_main 12AE                    ?_gpio_pin_write_logic 0023  
                          _lat_registers 000B                                   ??_main 002F  
                          __activetblptr 0002                         led_turn_on@F2579 0038  
                                 clear_0 132C                                   isa$std 0001  
gpio_pin_direction_intialize@_pin_config 0023                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 1332  
                          ___rparam_used 0001                   ??_gpio_pin_write_logic 0025  
                         __pcstackCOMRAM 0023              __end_of_dc_motor_turn_right 136C  
                             _dc_motor_1 0021                               _dc_motor_2 001F  
                             __pnvCOMRAM 003A            __end_of_application_intialize 142C  
                   relay_intialize@F2568 0035                        led_turn_off@F2584 0037  
                   led_turn_toggle@F2589 0036                           _tris_registers 0015  
                                __Hparam 0000                                  __Lparam 0000  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 1306  
                                __pcinit 1306                                  __ramtop 1000  
                                __ptext0 1224                                  __ptext1 133C  
                                __ptext2 136C                                  __ptext3 139C  
                                __ptext4 1416                                  __ptext5 13CC  
                                __ptext6 12AE                                  __ptext7 1114  
                                __ptext8 1002                     end_of_initialization 1332  
                          __Lmediumconst 0000                    gpio_pin_intialize@ret 002D  
                          _dc_motor_stop 139C                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                               _motor_pin1 0032  
                             _motor_pin2 0031            gpio_pin_intialize@_pin_config 002B  
   __end_of_gpio_pin_direction_intialize 1114             _gpio_pin_direction_intialize 1002  
                         ?_dc_motor_stop 002B                       relay_turn_on@F2573 0034  
                          __pidataCOMRAM 13F4                      start_initialization 1306  
          ?_gpio_pin_direction_intialize 0023               __end_of_dc_motor_intialize 13F4  
                 dc_motor_stop@_dc_motor 002B                              __pbssCOMRAM 0031  
             __end_of_dc_motor_turn_left 139C          gpio_pin_direction_intialize@ret 0029  
                        ??_dc_motor_stop 002C                    _application_intialize 1416  
        gpio_pin_write_logic@_pin_config 0023                gpio_pin_write_logic@logic 0024  
                            __smallconst 1000             dc_motor_turn_right@_dc_motor 002B  
                     _gpio_pin_intialize 12AE           ??_gpio_pin_direction_intialize 0024  
                    ?_gpio_pin_intialize 002B                     ??_gpio_pin_intialize 002C  
                gpio_pin_write_logic@ret 002A                                copy_data0 131A  
                 ?_application_intialize 0023                                 __Hrparam 0000  
                               __Lrparam 0000                       led_intialize@F2574 0039  
                               isa$xinst 0000                      _dc_motor_turn_right 133C  
                     _dc_motor_intialize 13CC                      ?_dc_motor_intialize 002E  
                   ?_dc_motor_turn_right 002B             __end_of_gpio_pin_write_logic 1224  
                   ??_dc_motor_intialize 002F                       _dc_motor_turn_left 136C  
                    ?_dc_motor_turn_left 002B                           _port_registers 0001  
                  ??_dc_motor_turn_right 002C                     ??_dc_motor_turn_left 002C  
                  __end_of_dc_motor_stop 13CC              dc_motor_intialize@_dc_motor 002E  
