

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Oct 07 01:42:07 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 17/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001A1C                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _port_registers
    75   001A1C  80                 	db	128
    76   001A1D  0F                 	db	15
    77   001A1E  81                 	db	129
    78   001A1F  0F                 	db	15
    79   001A20  82                 	db	130
    80   001A21  0F                 	db	15
    81   001A22  83                 	db	131
    82   001A23  0F                 	db	15
    83   001A24  84                 	db	132
    84   001A25  0F                 	db	15
    85                           
    86                           ;initializer for _lat_registers
    87   001A26  89                 	db	137
    88   001A27  0F                 	db	15
    89   001A28  8A                 	db	138
    90   001A29  0F                 	db	15
    91   001A2A  8B                 	db	139
    92   001A2B  0F                 	db	15
    93   001A2C  8C                 	db	140
    94   001A2D  0F                 	db	15
    95   001A2E  8D                 	db	141
    96   001A2F  0F                 	db	15
    97                           
    98                           ;initializer for _tris_registers
    99   001A30  92                 	db	146
   100   001A31  0F                 	db	15
   101   001A32  93                 	db	147
   102   001A33  0F                 	db	15
   103   001A34  94                 	db	148
   104   001A35  0F                 	db	15
   105   001A36  95                 	db	149
   106   001A37  0F                 	db	15
   107   001A38  96                 	db	150
   108   001A39  0F                 	db	15
   109                           
   110                           ;initializer for _lcd2
   111   001A3A  32                 	db	50
   112   001A3B  3A                 	db	58
   113   001A3C  03                 	db	3
   114   001A3D  0B                 	db	11
   115   001A3E  13                 	db	19
   116   001A3F  1B                 	db	27
   117   001A40  23                 	db	35
   118   001A41  2B                 	db	43
   119   001A42  33                 	db	51
   120   001A43  3B                 	db	59
   121                           
   122                           ;initializer for _lcd1
   123   001A44  02                 	db	2
   124   001A45  0A                 	db	10
   125   001A46  12                 	db	18
   126   001A47  1A                 	db	26
   127   001A48  22                 	db	34
   128   001A49  2A                 	db	42
   129   000000                     _PORTE	set	3972
   130   000000                     _PORTD	set	3971
   131   000000                     _PORTC	set	3970
   132   000000                     _PORTB	set	3969
   133   000000                     _PORTA	set	3968
   134   000000                     _LATA	set	3977
   135   000000                     _TRISA	set	3986
   136   000000                     _TRISE	set	3990
   137   000000                     _TRISD	set	3989
   138   000000                     _TRISC	set	3988
   139   000000                     _TRISB	set	3987
   140   000000                     _LATE	set	3981
   141   000000                     _LATD	set	3980
   142   000000                     _LATC	set	3979
   143   000000                     _LATB	set	3978
   144                           
   145                           	psect	smallconst
   146   001000                     __psmallconst:
   147                           	callstack 0
   148   001000  00                 	db	0
   149   001001                     STR_2:
   150   001001  45                 	db	69	;'E'
   151   001002  6D                 	db	109	;'m'
   152   001003  62                 	db	98	;'b'
   153   001004  65                 	db	101	;'e'
   154   001005  64                 	db	100	;'d'
   155   001006  64                 	db	100	;'d'
   156   001007  65                 	db	101	;'e'
   157   001008  64                 	db	100	;'d'
   158   001009  20                 	db	32
   159   00100A  44                 	db	68	;'D'
   160   00100B  69                 	db	105	;'i'
   161   00100C  70                 	db	112	;'p'
   162   00100D  6C                 	db	108	;'l'
   163   00100E  6F                 	db	111	;'o'
   164   00100F  6D                 	db	109	;'m'
   165   001010  61                 	db	97	;'a'
   166   001011  00                 	db	0
   167   001012                     STR_4:
   168   001012  20                 	db	32
   169   001013  20                 	db	32
   170   001014  20                 	db	32
   171   001015  20                 	db	32
   172   001016  20                 	db	32
   173   001017  20                 	db	32
   174   001018  20                 	db	32
   175   001019  20                 	db	32
   176   00101A  20                 	db	32
   177   00101B  20                 	db	32
   178   00101C  20                 	db	32
   179   00101D  20                 	db	32
   180   00101E  20                 	db	32
   181   00101F  20                 	db	32
   182   001020  00                 	db	0
   183   001021                     STR_1:
   184   001021  48                 	db	72	;'H'
   185   001022  65                 	db	101	;'e'
   186   001023  6C                 	db	108	;'l'
   187   001024  6C                 	db	108	;'l'
   188   001025  6F                 	db	111	;'o'
   189   001026  20                 	db	32
   190   001027  41                 	db	65	;'A'
   191   001028  6C                 	db	108	;'l'
   192   001029  6C                 	db	108	;'l'
   193   00102A  00                 	db	0
   194   00102B                     STR_3:
   195   00102B  4C                 	db	76	;'L'
   196   00102C  6F                 	db	111	;'o'
   197   00102D  61                 	db	97	;'a'
   198   00102E  64                 	db	100	;'d'
   199   00102F  69                 	db	105	;'i'
   200   001030  6E                 	db	110	;'n'
   201   001031  67                 	db	103	;'g'
   202   001032  00                 	db	0
   203   001033  00                 	db	0	; dummy byte at the end
   204   000000                     
   205                           ; #config settings
   206                           
   207                           	psect	cinit
   208   001A4A                     __pcinit:
   209                           	callstack 0
   210   001A4A                     start_initialization:
   211                           	callstack 0
   212   001A4A                     __initialization:
   213                           	callstack 0
   214                           
   215                           ; Initialize objects allocated to COMRAM (46 bytes)
   216                           ; load TBLPTR registers with __pidataCOMRAM
   217   001A4A  0E1C               	movlw	low __pidataCOMRAM
   218   001A4C  6EF6               	movwf	tblptrl,c
   219   001A4E  0E1A               	movlw	high __pidataCOMRAM
   220   001A50  6EF7               	movwf	tblptrh,c
   221   001A52  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   222   001A54  6EF8               	movwf	tblptru,c
   223   001A56  EE00  F001         	lfsr	0,__pdataCOMRAM
   224   001A5A  EE10 F02E          	lfsr	1,46
   225   001A5E                     copy_data0:
   226   001A5E  0009               	tblrd		*+
   227   001A60  CFF5 FFEE          	movff	tablat,postinc0
   228   001A64  50E5               	movf	postdec1,w,c
   229   001A66  50E1               	movf	fsr1l,w,c
   230   001A68  E1FA               	bnz	copy_data0
   231   001A6A                     end_of_initialization:
   232                           	callstack 0
   233   001A6A                     __end_of__initialization:
   234                           	callstack 0
   235   001A6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   236   001A6C  6EF8               	movwf	tblptru,c
   237   001A6E  0100               	movlb	0
   238   001A70  EF3A  F00D         	goto	_main	;jump to C main() function
   239                           
   240                           	psect	dataCOMRAM
   241   000001                     __pdataCOMRAM:
   242                           	callstack 0
   243   000001                     _port_registers:
   244                           	callstack 0
   245   000001                     	ds	10
   246   00000B                     _lat_registers:
   247                           	callstack 0
   248   00000B                     	ds	10
   249   000015                     _tris_registers:
   250                           	callstack 0
   251   000015                     	ds	10
   252   00001F                     _lcd2:
   253                           	callstack 0
   254   00001F                     	ds	10
   255   000029                     _lcd1:
   256                           	callstack 0
   257   000029                     	ds	6
   258                           
   259                           	psect	cstackCOMRAM
   260   00002F                     __pcstackCOMRAM:
   261                           	callstack 0
   262   00002F                     gpio_pin_direction_intialize@_pin_config:
   263                           	callstack 0
   264   00002F                     gpio_pin_write_logic@_pin_config:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x0
   268   00002F                     	ds	1
   269   000030                     ??_gpio_pin_direction_intialize:
   270   000030                     gpio_pin_write_logic@logic:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x1
   274   000030                     	ds	1
   275   000031                     ??_gpio_pin_write_logic:
   276                           
   277                           ; 1 bytes @ 0x2
   278   000031                     	ds	4
   279   000035                     gpio_pin_direction_intialize@ret:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x6
   283   000035                     	ds	1
   284   000036                     gpio_pin_write_logic@ret:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x7
   288   000036                     	ds	1
   289   000037                     lcd_send_4bits@lcd:
   290                           	callstack 0
   291   000037                     lcd_4bit_send_enable_signal@lcd:
   292                           	callstack 0
   293   000037                     lcd_8bit_send_enable_signal@lcd:
   294                           	callstack 0
   295   000037                     gpio_pin_intialize@_pin_config:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x8
   299   000037                     	ds	1
   300   000038                     ??_gpio_pin_intialize:
   301   000038                     lcd_send_4bits@_data_command:
   302                           	callstack 0
   303   000038                     lcd_4bit_send_enable_signal@ret:
   304                           	callstack 0
   305   000038                     lcd_8bit_send_enable_signal@ret:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x9
   309   000038                     	ds	1
   310   000039                     lcd_8bit_send_command@lcd:
   311                           	callstack 0
   312   000039                     lcd_8bit_send_char_data@lcd:
   313                           	callstack 0
   314   000039                     lcd_send_4bits@ret:
   315                           	callstack 0
   316   000039                     gpio_pin_intialize@ret:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0xA
   320   000039                     	ds	1
   321   00003A                     lcd_4bit_send_command@lcd:
   322                           	callstack 0
   323   00003A                     lcd_4bit_send_char_data@lcd:
   324                           	callstack 0
   325   00003A                     lcd_8bit_send_command@command:
   326                           	callstack 0
   327   00003A                     lcd_8bit_send_char_data@data:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0xB
   331   00003A                     	ds	1
   332   00003B                     ??_lcd_8bit_send_command:
   333   00003B                     ??_lcd_8bit_send_char_data:
   334   00003B                     lcd_4bit_send_command@command:
   335                           	callstack 0
   336   00003B                     lcd_4bit_send_char_data@data:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0xC
   340   00003B                     	ds	1
   341   00003C                     lcd_4bit_send_command@ret:
   342                           	callstack 0
   343   00003C                     lcd_4bit_send_char_data@ret:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0xD
   347   00003C                     	ds	1
   348   00003D                     lcd_4bit_intialize@lcd:
   349                           	callstack 0
   350   00003D                     lcd_8bit_send_command@ret:
   351                           	callstack 0
   352   00003D                     lcd_8bit_send_char_data@ret:
   353                           	callstack 0
   354   00003D                     lcd_4bit_set_cursor@lcd:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0xE
   358   00003D                     	ds	1
   359   00003E                     ??_lcd_4bit_intialize:
   360   00003E                     lcd_8bit_send_command@l_pin_counter:
   361                           	callstack 0
   362   00003E                     lcd_8bit_send_char_data@l_pin_counter:
   363                           	callstack 0
   364   00003E                     lcd_4bit_set_cursor@row:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0xF
   368   00003E                     	ds	1
   369   00003F                     lcd_4bit_intialize@l_data_pins_counter:
   370                           	callstack 0
   371   00003F                     lcd_8bit_intialize@lcd:
   372                           	callstack 0
   373   00003F                     lcd_8bit_set_cursor@lcd:
   374                           	callstack 0
   375   00003F                     lcd_4bit_set_cursor@column:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x10
   379   00003F                     	ds	1
   380   000040                     ??_lcd_8bit_intialize:
   381   000040                     lcd_4bit_intialize@ret:
   382                           	callstack 0
   383   000040                     lcd_8bit_set_cursor@row:
   384                           	callstack 0
   385   000040                     lcd_4bit_set_cursor@ret:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x11
   389   000040                     	ds	1
   390   000041                     lcd_4bit_send_string_pos@lcd:
   391                           	callstack 0
   392   000041                     lcd_8bit_intialize@l_data_pins_counter:
   393                           	callstack 0
   394   000041                     lcd_8bit_set_cursor@column:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x12
   398   000041                     	ds	1
   399   000042                     lcd_4bit_send_string_pos@row:
   400                           	callstack 0
   401   000042                     lcd_8bit_intialize@ret:
   402                           	callstack 0
   403   000042                     lcd_8bit_set_cursor@ret:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x13
   407   000042                     	ds	1
   408   000043                     lcd_4bit_send_string_pos@column:
   409                           	callstack 0
   410   000043                     lcd_8bit_send_char_data_pos@lcd:
   411                           	callstack 0
   412   000043                     lcd_8bit_send_string_pos@lcd:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x14
   416   000043                     	ds	1
   417   000044                     lcd_4bit_send_string_pos@str:
   418                           	callstack 0
   419   000044                     lcd_8bit_send_char_data_pos@row:
   420                           	callstack 0
   421   000044                     lcd_8bit_send_string_pos@row:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x15
   425   000044                     	ds	1
   426   000045                     ??_welcome_message:
   427   000045                     lcd_8bit_send_char_data_pos@column:
   428                           	callstack 0
   429   000045                     lcd_8bit_send_string_pos@column:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x16
   433   000045                     	ds	1
   434   000046                     lcd_8bit_send_char_data_pos@data:
   435                           	callstack 0
   436   000046                     lcd_8bit_send_string_pos@str:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x17
   440   000046                     	ds	1
   441   000047                     lcd_8bit_send_char_data_pos@ret:
   442                           	callstack 0
   443   000047                     welcome_message@lcd1_counter:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x18
   447   000047                     	ds	1
   448   000048                     ??_loading_screen:
   449                           
   450                           ; 1 bytes @ 0x19
   451   000048                     	ds	1
   452   000049                     loading_screen@l_lcd2_counter:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x1A
   456   000049                     	ds	1
   457   00004A                     
   458                           ; 1 bytes @ 0x1B
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   461 ;;
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 36 in file "application.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  ret             1    0        unsigned char 
   469 ;; Return value:  Size  Location     Type
   470 ;;                  2  317[None  ] int 
   471 ;; Registers used:
   472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels required when called: 6
   484 ;; This function calls:
   485 ;;		_application_intialize
   486 ;;		_loading_screen
   487 ;;		_welcome_message
   488 ;; This function is called by:
   489 ;;		Startup code after reset
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text0
   494   001A74                     __ptext0:
   495                           	callstack 0
   496   001A74                     _main:
   497                           	callstack 25
   498   001A74                     
   499                           ;application.c: 38: application_intialize();
   500   001A74  EC44  F00D         	call	_application_intialize	;wreg free
   501   001A78                     
   502                           ;application.c: 39: welcome_message();
   503   001A78  ECAD  F00A         	call	_welcome_message	;wreg free
   504   001A7C                     l1904:
   505                           
   506                           ;application.c: 41:  loading_screen();
   507   001A7C  ECE9  F00A         	call	_loading_screen	;wreg free
   508   001A80  EF3E  F00D         	goto	l1904
   509   001A84  EF00  F000         	goto	start
   510   001A88                     __end_of_main:
   511                           	callstack 0
   512                           
   513 ;; *************** function _welcome_message *****************
   514 ;; Defined at:
   515 ;;		line 12 in file "application.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  lcd1_counter    1   24[COMRAM] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;Total ram usage:        3 bytes
   534 ;; Hardware stack levels used: 1
   535 ;; Hardware stack levels required when called: 5
   536 ;; This function calls:
   537 ;;		_lcd_4bit_send_command
   538 ;;		_lcd_4bit_send_string_pos
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text1
   545   00155A                     __ptext1:
   546                           	callstack 0
   547   00155A                     _welcome_message:
   548                           	callstack 25
   549   00155A                     
   550                           ;application.c: 13:     uint8 lcd1_counter=0;
   551   00155A  0E00               	movlw	0
   552   00155C  6E47               	movwf	welcome_message@lcd1_counter^0,c
   553                           
   554                           ;application.c: 14:     for(lcd1_counter=1;lcd1_counter<=5;++lcd1_counter){
   555   00155E  0E01               	movlw	1
   556   001560  6E47               	movwf	welcome_message@lcd1_counter^0,c
   557   001562                     l1822:
   558                           
   559                           ;application.c: 15:         lcd_4bit_send_string_pos(&lcd1,1,7,"Hello All");
   560   001562  0E29               	movlw	low _lcd1
   561   001564  6E41               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   562   001566  0E01               	movlw	1
   563   001568  6E42               	movwf	lcd_4bit_send_string_pos@row^0,c
   564   00156A  0E07               	movlw	7
   565   00156C  6E43               	movwf	lcd_4bit_send_string_pos@column^0,c
   566   00156E  0E21               	movlw	low STR_1
   567   001570  6E44               	movwf	lcd_4bit_send_string_pos@str^0,c
   568   001572  EC95  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   569                           
   570                           ;application.c: 16:         lcd_4bit_send_string_pos(&lcd1,2,3,"Embedded Diploma");
   571   001576  0E29               	movlw	low _lcd1
   572   001578  6E41               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   573   00157A  0E02               	movlw	2
   574   00157C  6E42               	movwf	lcd_4bit_send_string_pos@row^0,c
   575   00157E  0E03               	movlw	3
   576   001580  6E43               	movwf	lcd_4bit_send_string_pos@column^0,c
   577   001582  0E01               	movlw	low STR_2
   578   001584  6E44               	movwf	lcd_4bit_send_string_pos@str^0,c
   579   001586  EC95  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   580   00158A                     
   581                           ;application.c: 17:         _delay((unsigned long)((500)*((uint64)3200000/4000.0)));
   582   00158A  0E03               	movlw	3
   583   00158C  6E46               	movwf	(??_welcome_message+1)^0,c
   584   00158E  0E08               	movlw	8
   585   001590  6E45               	movwf	??_welcome_message^0,c
   586   001592  0E77               	movlw	119
   587   001594                     u1057:
   588   001594  2EE8               	decfsz	wreg,f,c
   589   001596  D7FE               	bra	u1057
   590   001598  2E45               	decfsz	??_welcome_message^0,f,c
   591   00159A  D7FC               	bra	u1057
   592   00159C  2E46               	decfsz	(??_welcome_message+1)^0,f,c
   593   00159E  D7FA               	bra	u1057
   594   0015A0  0000               	nop	
   595   0015A2                     
   596                           ;application.c: 18:         lcd_4bit_send_command(&lcd1,0x01);
   597   0015A2  0E29               	movlw	low _lcd1
   598   0015A4  6E3A               	movwf	lcd_4bit_send_command@lcd^0,c
   599   0015A6  0E01               	movlw	1
   600   0015A8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   601   0015AA  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
   602   0015AE                     
   603                           ;application.c: 19:         _delay((unsigned long)((100)*((uint64)3200000/4000.0)));
   604   0015AE  0E68               	movlw	104
   605   0015B0  6E45               	movwf	??_welcome_message^0,c
   606   0015B2  0EE4               	movlw	228
   607   0015B4                     u1067:
   608   0015B4  2EE8               	decfsz	wreg,f,c
   609   0015B6  D7FE               	bra	u1067
   610   0015B8  2E45               	decfsz	??_welcome_message^0,f,c
   611   0015BA  D7FC               	bra	u1067
   612   0015BC  D000               	nop2	
   613   0015BE                     
   614                           ;application.c: 20:     }
   615   0015BE  2A47               	incf	welcome_message@lcd1_counter^0,f,c
   616   0015C0  0E05               	movlw	5
   617   0015C2  6447               	cpfsgt	welcome_message@lcd1_counter^0,c
   618   0015C4  EFE6  F00A         	goto	u971
   619   0015C8  EFE8  F00A         	goto	u970
   620   0015CC                     u971:
   621   0015CC  EFB1  F00A         	goto	l1822
   622   0015D0                     u970:
   623   0015D0  0012               	return		;funcret
   624   0015D2                     __end_of_welcome_message:
   625                           	callstack 0
   626                           
   627 ;; *************** function _lcd_4bit_send_string_pos *****************
   628 ;; Defined at:
   629 ;;		line 95 in file "ECU_Layer/lcd/lcd.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;  lcd             1   18[COMRAM] PTR const struct .
   632 ;;		 -> lcd1(6), 
   633 ;;  row             1   19[COMRAM] unsigned char 
   634 ;;  column          1   20[COMRAM] unsigned char 
   635 ;;  str             1   21[COMRAM] PTR unsigned char 
   636 ;;		 -> STR_2(17), STR_1(10), 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  ret             1    0        unsigned char 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      unsigned char 
   641 ;; Registers used:
   642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;Total ram usage:        4 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; Hardware stack levels required when called: 4
   655 ;; This function calls:
   656 ;;		_lcd_4bit_send_char_data
   657 ;;		_lcd_4bit_set_cursor
   658 ;; This function is called by:
   659 ;;		_welcome_message
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text2
   664   00172A                     __ptext2:
   665                           	callstack 0
   666   00172A                     _lcd_4bit_send_string_pos:
   667                           	callstack 25
   668   00172A                     
   669                           ;ECU_Layer/lcd/lcd.c: 97:      if(((void*)0)==lcd || ((void*)0)==str){
   670   00172A  5041               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
   671   00172C  B4D8               	btfsc	status,2,c
   672   00172E  EF9B  F00B         	goto	u891
   673   001732  EF9D  F00B         	goto	u890
   674   001736                     u891:
   675   001736  EFA5  F00B         	goto	l1744
   676   00173A                     u890:
   677   00173A  5044               	movf	lcd_4bit_send_string_pos@str^0,w,c
   678   00173C  A4D8               	btfss	status,2,c
   679   00173E  EFA3  F00B         	goto	u901
   680   001742  EFA5  F00B         	goto	u900
   681   001746                     u901:
   682   001746  EFA7  F00B         	goto	l1746
   683   00174A                     u900:
   684   00174A                     l1744:
   685                           
   686                           ;ECU_Layer/lcd/lcd.c: 99:      }else{
   687   00174A  EFCB  F00B         	goto	l64
   688   00174E                     l1746:
   689   00174E  C041  F03D         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
   690   001752  C042  F03E         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
   691   001756  C043  F03F         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
   692   00175A  EC11  F00A         	call	_lcd_4bit_set_cursor	;wreg free
   693                           
   694                           ;ECU_Layer/lcd/lcd.c: 101:          while(*str){
   695   00175E  EFBD  F00B         	goto	l1752
   696   001762                     l1748:
   697   001762  C041  F03A         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
   698   001766  C044  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   699   00176A                     	if	1	;There is more than 1 active tblptr byte
   700   00176A  0E10               	movlw	high __smallconst
   701   00176C  6EF7               	movwf	tblptrh,c
   702   00176E                     	endif
   703   00176E                     	if	0	;tblptru may be non-zero
   704   00176E                     	endif
   705   00176E                     	if	0	;tblptru may be non-zero
   706   00176E                     	endif
   707   00176E  0008               	tblrd		*
   708   001770  CFF5 F03B          	movff	tablat,lcd_4bit_send_char_data@data
   709   001774  EC61  F00C         	call	_lcd_4bit_send_char_data	;wreg free
   710   001778                     
   711                           ;ECU_Layer/lcd/lcd.c: 103:              str++;
   712   001778  2A44               	incf	lcd_4bit_send_string_pos@str^0,f,c
   713   00177A                     l1752:
   714                           
   715                           ;ECU_Layer/lcd/lcd.c: 101:          while(*str){
   716   00177A  C044  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   717   00177E                     	if	1	;There is more than 1 active tblptr byte
   718   00177E  0E10               	movlw	high __smallconst
   719   001780  6EF7               	movwf	tblptrh,c
   720   001782                     	endif
   721   001782                     	if	0	;tblptru may be non-zero
   722   001782                     	endif
   723   001782                     	if	0	;tblptru may be non-zero
   724   001782                     	endif
   725   001782  0008               	tblrd		*
   726   001784  50F5               	movf	tablat,w,c
   727   001786  0900               	iorlw	0
   728   001788  A4D8               	btfss	status,2,c
   729   00178A  EFC9  F00B         	goto	u911
   730   00178E  EFCB  F00B         	goto	u910
   731   001792                     u911:
   732   001792  EFB1  F00B         	goto	l1748
   733   001796                     u910:
   734   001796                     l64:
   735   001796  0012               	return		;funcret
   736   001798                     __end_of_lcd_4bit_send_string_pos:
   737                           	callstack 0
   738                           
   739 ;; *************** function _lcd_4bit_set_cursor *****************
   740 ;; Defined at:
   741 ;;		line 273 in file "ECU_Layer/lcd/lcd.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  lcd             1   14[COMRAM] PTR const struct .
   744 ;;		 -> lcd1(6), 
   745 ;;  row             1   15[COMRAM] unsigned char 
   746 ;;  column          1   16[COMRAM] unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  ret             1   17[COMRAM] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      unsigned char 
   751 ;; Registers used:
   752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   758 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;Total ram usage:        4 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 3
   765 ;; This function calls:
   766 ;;		_lcd_4bit_send_command
   767 ;; This function is called by:
   768 ;;		_lcd_4bit_send_string_pos
   769 ;;		_lcd_4bit_send_char_data_pos
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text3
   774   001422                     __ptext3:
   775                           	callstack 0
   776   001422                     _lcd_4bit_set_cursor:
   777                           	callstack 25
   778   001422                     
   779                           ;ECU_Layer/lcd/lcd.c: 274:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   780   001422  0E01               	movlw	1
   781   001424  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
   782                           
   783                           ;ECU_Layer/lcd/lcd.c: 275:      if(((void*)0)==lcd){
   784   001426  503D               	movf	lcd_4bit_set_cursor@lcd^0,w,c
   785   001428  A4D8               	btfss	status,2,c
   786   00142A  EF19  F00A         	goto	u821
   787   00142E  EF1B  F00A         	goto	u820
   788   001432                     u821:
   789   001432  EF1F  F00A         	goto	l1640
   790   001436                     u820:
   791   001436                     
   792                           ;ECU_Layer/lcd/lcd.c: 276:             ret = (Std_ReturnType)0x00;
   793   001436  0E00               	movlw	0
   794   001438  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
   795                           
   796                           ;ECU_Layer/lcd/lcd.c: 277:      }else{
   797   00143A  EF5D  F00A         	goto	l1652
   798   00143E                     l1640:
   799                           
   800                           ;ECU_Layer/lcd/lcd.c: 278:          column--;
   801   00143E  063F               	decf	lcd_4bit_set_cursor@column^0,f,c
   802                           
   803                           ;ECU_Layer/lcd/lcd.c: 279:          switch(row){
   804   001440  EF4A  F00A         	goto	l1650
   805   001444                     l1642:
   806   001444  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   807   001448  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
   808   00144A  0F80               	addlw	128
   809   00144C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   810   00144E  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
   811   001452  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
   812   001454  EF5D  F00A         	goto	l1652
   813   001458                     l1644:
   814   001458  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   815   00145C  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
   816   00145E  0FC0               	addlw	192
   817   001460  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   818   001462  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
   819   001466  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
   820   001468  EF5D  F00A         	goto	l1652
   821   00146C                     l1646:
   822   00146C  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   823   001470  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
   824   001472  0F94               	addlw	148
   825   001474  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   826   001476  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
   827   00147A  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
   828   00147C  EF5D  F00A         	goto	l1652
   829   001480                     l1648:
   830   001480  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   831   001484  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
   832   001486  0FD4               	addlw	212
   833   001488  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   834   00148A  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
   835   00148E  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
   836   001490  EF5D  F00A         	goto	l1652
   837   001494                     l1650:
   838   001494  503E               	movf	lcd_4bit_set_cursor@row^0,w,c
   839                           
   840                           ; Switch size 1, requested type "simple"
   841                           ; Number of cases is 4, Range of values is 1 to 4
   842                           ; switch strategies available:
   843                           ; Name         Instructions Cycles
   844                           ; simple_byte           13     7 (average)
   845                           ;	Chosen strategy is simple_byte
   846   001496  0A01               	xorlw	1	; case 1
   847   001498  B4D8               	btfsc	status,2,c
   848   00149A  EF22  F00A         	goto	l1642
   849   00149E  0A03               	xorlw	3	; case 2
   850   0014A0  B4D8               	btfsc	status,2,c
   851   0014A2  EF2C  F00A         	goto	l1644
   852   0014A6  0A01               	xorlw	1	; case 3
   853   0014A8  B4D8               	btfsc	status,2,c
   854   0014AA  EF36  F00A         	goto	l1646
   855   0014AE  0A07               	xorlw	7	; case 4
   856   0014B0  B4D8               	btfsc	status,2,c
   857   0014B2  EF40  F00A         	goto	l1648
   858   0014B6  EF5D  F00A         	goto	l1652
   859   0014BA                     l1652:
   860                           
   861                           ;ECU_Layer/lcd/lcd.c: 287:     return ret;
   862   0014BA  5040               	movf	lcd_4bit_set_cursor@ret^0,w,c
   863   0014BC  0012               	return		;funcret
   864   0014BE                     __end_of_lcd_4bit_set_cursor:
   865                           	callstack 0
   866                           
   867 ;; *************** function _lcd_4bit_send_char_data *****************
   868 ;; Defined at:
   869 ;;		line 60 in file "ECU_Layer/lcd/lcd.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  lcd             1   11[COMRAM] PTR const struct .
   872 ;;		 -> lcd1(6), 
   873 ;;  data            1   12[COMRAM] unsigned char 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  ret             1   13[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      unsigned char 
   878 ;; Registers used:
   879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;Total ram usage:        3 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 2
   892 ;; This function calls:
   893 ;;		_gpio_pin_write_logic
   894 ;;		_lcd_4bit_send_enable_signal
   895 ;;		_lcd_send_4bits
   896 ;; This function is called by:
   897 ;;		_lcd_4bit_send_string_pos
   898 ;;		_lcd_4bit_send_char_data_pos
   899 ;;		_lcd_4bit_send_string
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text4
   904   0018C2                     __ptext4:
   905                           	callstack 0
   906   0018C2                     _lcd_4bit_send_char_data:
   907                           	callstack 26
   908   0018C2                     
   909                           ;ECU_Layer/lcd/lcd.c: 62:      if(((void*)0)==lcd){
   910   0018C2  503A               	movf	lcd_4bit_send_char_data@lcd^0,w,c
   911   0018C4  A4D8               	btfss	status,2,c
   912   0018C6  EF67  F00C         	goto	u811
   913   0018CA  EF69  F00C         	goto	u810
   914   0018CE                     u811:
   915   0018CE  EF6D  F00C         	goto	l1630
   916   0018D2                     u810:
   917   0018D2                     
   918                           ;ECU_Layer/lcd/lcd.c: 63:             ret = (Std_ReturnType)0x00;
   919   0018D2  0E00               	movlw	0
   920   0018D4  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   921                           
   922                           ;ECU_Layer/lcd/lcd.c: 64:      }else{
   923   0018D6  EF8D  F00C         	goto	l1632
   924   0018DA                     l1630:
   925                           
   926                           ;ECU_Layer/lcd/lcd.c: 65:          ret =gpio_pin_write_logic(&(lcd->lcd_rs),GPIO_HIGH);
   927   0018DA  C03A  F02F         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
   928   0018DE  0E01               	movlw	1
   929   0018E0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   930   0018E2  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
   931   0018E6  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   932                           
   933                           ;ECU_Layer/lcd/lcd.c: 66:          ret =lcd_send_4bits(lcd,data>>4);
   934   0018E8  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
   935   0018EC  383B               	swapf	lcd_4bit_send_char_data@data^0,w,c
   936   0018EE  0B0F               	andlw	15
   937   0018F0  6E38               	movwf	lcd_send_4bits@_data_command^0,c
   938   0018F2  ECCC  F00B         	call	_lcd_send_4bits	;wreg free
   939   0018F6  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   940                           
   941                           ;ECU_Layer/lcd/lcd.c: 67:          ret =lcd_4bit_send_enable_signal(lcd);
   942   0018F8  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
   943   0018FC  ECF3  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
   944   001900  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   945                           
   946                           ;ECU_Layer/lcd/lcd.c: 68:          ret =lcd_send_4bits(lcd,data);
   947   001902  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
   948   001906  C03B  F038         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
   949   00190A  ECCC  F00B         	call	_lcd_send_4bits	;wreg free
   950   00190E  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   951                           
   952                           ;ECU_Layer/lcd/lcd.c: 69:          ret =lcd_4bit_send_enable_signal(lcd);
   953   001910  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
   954   001914  ECF3  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
   955   001918  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
   956   00191A                     l1632:
   957                           
   958                           ;ECU_Layer/lcd/lcd.c: 71:     return ret;
   959   00191A  503C               	movf	lcd_4bit_send_char_data@ret^0,w,c
   960   00191C  0012               	return		;funcret
   961   00191E                     __end_of_lcd_4bit_send_char_data:
   962                           	callstack 0
   963                           
   964 ;; *************** function _loading_screen *****************
   965 ;; Defined at:
   966 ;;		line 23 in file "application.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  l_lcd2_count    1   26[COMRAM] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;Total ram usage:        2 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; Hardware stack levels required when called: 5
   987 ;; This function calls:
   988 ;;		_lcd_8bit_send_char_data_pos
   989 ;;		_lcd_8bit_send_string_pos
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text5
   996   0015D2                     __ptext5:
   997                           	callstack 0
   998   0015D2                     _loading_screen:
   999                           	callstack 25
  1000   0015D2                     
  1001                           ;application.c: 24:     lcd_8bit_send_string_pos(&lcd2,1,1,"Loading");
  1002   0015D2  0E1F               	movlw	low _lcd2
  1003   0015D4  6E43               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1004   0015D6  0E01               	movlw	1
  1005   0015D8  6E44               	movwf	lcd_8bit_send_string_pos@row^0,c
  1006   0015DA  0E01               	movlw	1
  1007   0015DC  6E45               	movwf	lcd_8bit_send_string_pos@column^0,c
  1008   0015DE  0E2B               	movlw	low STR_3
  1009   0015E0  6E46               	movwf	lcd_8bit_send_string_pos@str^0,c
  1010   0015E2  EC03  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
  1011   0015E6                     
  1012                           ;application.c: 26:     for(l_lcd2_counter=8;l_lcd2_counter<=15;++l_lcd2_counter){
  1013   0015E6  0E08               	movlw	8
  1014   0015E8  6E49               	movwf	loading_screen@l_lcd2_counter^0,c
  1015   0015EA                     l1844:
  1016                           
  1017                           ;application.c: 27:         lcd_8bit_send_char_data_pos(&lcd2,1,l_lcd2_counter,'.');
  1018   0015EA  0E1F               	movlw	low _lcd2
  1019   0015EC  6E43               	movwf	lcd_8bit_send_char_data_pos@lcd^0,c
  1020   0015EE  0E01               	movlw	1
  1021   0015F0  6E44               	movwf	lcd_8bit_send_char_data_pos@row^0,c
  1022   0015F2  C049  F045         	movff	loading_screen@l_lcd2_counter,lcd_8bit_send_char_data_pos@column
  1023   0015F6  0E2E               	movlw	46
  1024   0015F8  6E46               	movwf	lcd_8bit_send_char_data_pos@data^0,c
  1025   0015FA  ECBD  F00C         	call	_lcd_8bit_send_char_data_pos	;wreg free
  1026   0015FE                     
  1027                           ;application.c: 28:         _delay((unsigned long)((150)*((uint64)3200000/4000.0)));
  1028   0015FE  0E9C               	movlw	156
  1029   001600  6E48               	movwf	??_loading_screen^0,c
  1030   001602  0ED7               	movlw	215
  1031   001604                     u1077:
  1032   001604  2EE8               	decfsz	wreg,f,c
  1033   001606  D7FE               	bra	u1077
  1034   001608  2E48               	decfsz	??_loading_screen^0,f,c
  1035   00160A  D7FC               	bra	u1077
  1036   00160C  0000               	nop	
  1037   00160E                     
  1038                           ;application.c: 29:     }
  1039   00160E  2A49               	incf	loading_screen@l_lcd2_counter^0,f,c
  1040   001610  0E0F               	movlw	15
  1041   001612  6449               	cpfsgt	loading_screen@l_lcd2_counter^0,c
  1042   001614  EF0E  F00B         	goto	u981
  1043   001618  EF10  F00B         	goto	u980
  1044   00161C                     u981:
  1045   00161C  EFF5  F00A         	goto	l1844
  1046   001620                     u980:
  1047   001620                     
  1048                           ;application.c: 30:     lcd_8bit_send_string_pos(&lcd2,1,8,"              ");
  1049   001620  0E1F               	movlw	low _lcd2
  1050   001622  6E43               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1051   001624  0E01               	movlw	1
  1052   001626  6E44               	movwf	lcd_8bit_send_string_pos@row^0,c
  1053   001628  0E08               	movlw	8
  1054   00162A  6E45               	movwf	lcd_8bit_send_string_pos@column^0,c
  1055   00162C  0E12               	movlw	low STR_4
  1056   00162E  6E46               	movwf	lcd_8bit_send_string_pos@str^0,c
  1057   001630  EC03  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
  1058   001634                     
  1059                           ;application.c: 31:     _delay((unsigned long)((150)*((uint64)3200000/4000.0)));
  1060   001634  0E9C               	movlw	156
  1061   001636  6E48               	movwf	??_loading_screen^0,c
  1062   001638  0ED7               	movlw	215
  1063   00163A                     u1087:
  1064   00163A  2EE8               	decfsz	wreg,f,c
  1065   00163C  D7FE               	bra	u1087
  1066   00163E  2E48               	decfsz	??_loading_screen^0,f,c
  1067   001640  D7FC               	bra	u1087
  1068   001642  0000               	nop	
  1069   001644  0012               	return		;funcret
  1070   001646                     __end_of_loading_screen:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _lcd_8bit_send_string_pos *****************
  1074 ;; Defined at:
  1075 ;;		line 197 in file "ECU_Layer/lcd/lcd.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  lcd             1   20[COMRAM] PTR const struct .
  1078 ;;		 -> lcd2(10), 
  1079 ;;  row             1   21[COMRAM] unsigned char 
  1080 ;;  column          1   22[COMRAM] unsigned char 
  1081 ;;  str             1   23[COMRAM] PTR unsigned char 
  1082 ;;		 -> STR_4(15), STR_3(8), 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  ret             1    0        unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      unsigned char 
  1087 ;; Registers used:
  1088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;Total ram usage:        4 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 4
  1101 ;; This function calls:
  1102 ;;		_lcd_8bit_send_char_data
  1103 ;;		_lcd_8bit_set_cursor
  1104 ;; This function is called by:
  1105 ;;		_loading_screen
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text6
  1110   001806                     __ptext6:
  1111                           	callstack 0
  1112   001806                     _lcd_8bit_send_string_pos:
  1113                           	callstack 25
  1114   001806                     
  1115                           ;ECU_Layer/lcd/lcd.c: 199:      if(((void*)0)==lcd){
  1116   001806  5043               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
  1117   001808  A4D8               	btfss	status,2,c
  1118   00180A  EF09  F00C         	goto	u951
  1119   00180E  EF0B  F00C         	goto	u950
  1120   001812                     u951:
  1121   001812  EF0D  F00C         	goto	l1808
  1122   001816                     u950:
  1123   001816                     
  1124                           ;ECU_Layer/lcd/lcd.c: 201:      }else{
  1125   001816  EF31  F00C         	goto	l113
  1126   00181A                     l1808:
  1127   00181A  C043  F03F         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
  1128   00181E  C044  F040         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  1129   001822  C045  F041         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
  1130   001826  EC5F  F00A         	call	_lcd_8bit_set_cursor	;wreg free
  1131                           
  1132                           ;ECU_Layer/lcd/lcd.c: 203:             while(*str){
  1133   00182A  EF23  F00C         	goto	l1814
  1134   00182E                     l1810:
  1135   00182E  C043  F039         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
  1136   001832  C046  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
  1137   001836                     	if	1	;There is more than 1 active tblptr byte
  1138   001836  0E10               	movlw	high __smallconst
  1139   001838  6EF7               	movwf	tblptrh,c
  1140   00183A                     	endif
  1141   00183A                     	if	0	;tblptru may be non-zero
  1142   00183A                     	endif
  1143   00183A                     	if	0	;tblptru may be non-zero
  1144   00183A                     	endif
  1145   00183A  0008               	tblrd		*
  1146   00183C  CFF5 F03A          	movff	tablat,lcd_8bit_send_char_data@data
  1147   001840  EC23  F00B         	call	_lcd_8bit_send_char_data	;wreg free
  1148   001844                     
  1149                           ;ECU_Layer/lcd/lcd.c: 205:              str++;
  1150   001844  2A46               	incf	lcd_8bit_send_string_pos@str^0,f,c
  1151   001846                     l1814:
  1152                           
  1153                           ;ECU_Layer/lcd/lcd.c: 203:             while(*str){
  1154   001846  C046  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
  1155   00184A                     	if	1	;There is more than 1 active tblptr byte
  1156   00184A  0E10               	movlw	high __smallconst
  1157   00184C  6EF7               	movwf	tblptrh,c
  1158   00184E                     	endif
  1159   00184E                     	if	0	;tblptru may be non-zero
  1160   00184E                     	endif
  1161   00184E                     	if	0	;tblptru may be non-zero
  1162   00184E                     	endif
  1163   00184E  0008               	tblrd		*
  1164   001850  50F5               	movf	tablat,w,c
  1165   001852  0900               	iorlw	0
  1166   001854  A4D8               	btfss	status,2,c
  1167   001856  EF2F  F00C         	goto	u961
  1168   00185A  EF31  F00C         	goto	u960
  1169   00185E                     u961:
  1170   00185E  EF17  F00C         	goto	l1810
  1171   001862                     u960:
  1172   001862                     l113:
  1173   001862  0012               	return		;funcret
  1174   001864                     __end_of_lcd_8bit_send_string_pos:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _lcd_8bit_send_char_data_pos *****************
  1178 ;; Defined at:
  1179 ;;		line 175 in file "ECU_Layer/lcd/lcd.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  lcd             1   20[COMRAM] PTR const struct .
  1182 ;;		 -> lcd2(10), 
  1183 ;;  row             1   21[COMRAM] unsigned char 
  1184 ;;  column          1   22[COMRAM] unsigned char 
  1185 ;;  data            1   23[COMRAM] unsigned char 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  ret             1   24[COMRAM] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      unsigned char 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;Total ram usage:        5 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 4
  1204 ;; This function calls:
  1205 ;;		_lcd_8bit_send_char_data
  1206 ;;		_lcd_8bit_set_cursor
  1207 ;; This function is called by:
  1208 ;;		_loading_screen
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text7
  1213   00197A                     __ptext7:
  1214                           	callstack 0
  1215   00197A                     _lcd_8bit_send_char_data_pos:
  1216                           	callstack 25
  1217   00197A                     
  1218                           ;ECU_Layer/lcd/lcd.c: 177:      if(((void*)0)==lcd){
  1219   00197A  5043               	movf	lcd_8bit_send_char_data_pos@lcd^0,w,c
  1220   00197C  A4D8               	btfss	status,2,c
  1221   00197E  EFC3  F00C         	goto	u941
  1222   001982  EFC5  F00C         	goto	u940
  1223   001986                     u941:
  1224   001986  EFC7  F00C         	goto	l1800
  1225   00198A                     u940:
  1226   00198A                     
  1227                           ;ECU_Layer/lcd/lcd.c: 179:      }else{
  1228   00198A  EFD7  F00C         	goto	l95
  1229   00198E                     l1800:
  1230                           
  1231                           ;ECU_Layer/lcd/lcd.c: 180:          ret = lcd_8bit_set_cursor(lcd,row,column);
  1232   00198E  C043  F03F         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_set_cursor@lcd
  1233   001992  C044  F040         	movff	lcd_8bit_send_char_data_pos@row,lcd_8bit_set_cursor@row
  1234   001996  C045  F041         	movff	lcd_8bit_send_char_data_pos@column,lcd_8bit_set_cursor@column
  1235   00199A  EC5F  F00A         	call	_lcd_8bit_set_cursor	;wreg free
  1236   00199E  6E47               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1237                           
  1238                           ;ECU_Layer/lcd/lcd.c: 181:          ret = lcd_8bit_send_char_data(lcd,data) ;
  1239   0019A0  C043  F039         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_send_char_data@lcd
  1240   0019A4  C046  F03A         	movff	lcd_8bit_send_char_data_pos@data,lcd_8bit_send_char_data@data
  1241   0019A8  EC23  F00B         	call	_lcd_8bit_send_char_data	;wreg free
  1242   0019AC  6E47               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1243   0019AE                     l95:
  1244   0019AE  0012               	return		;funcret
  1245   0019B0                     __end_of_lcd_8bit_send_char_data_pos:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _lcd_8bit_set_cursor *****************
  1249 ;; Defined at:
  1250 ;;		line 256 in file "ECU_Layer/lcd/lcd.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  lcd             1   16[COMRAM] PTR const struct .
  1253 ;;		 -> lcd2(10), 
  1254 ;;  row             1   17[COMRAM] unsigned char 
  1255 ;;  column          1   18[COMRAM] unsigned char 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  ret             1   19[COMRAM] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      unsigned char 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        4 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 3
  1274 ;; This function calls:
  1275 ;;		_lcd_8bit_send_command
  1276 ;; This function is called by:
  1277 ;;		_lcd_8bit_send_char_data_pos
  1278 ;;		_lcd_8bit_send_string_pos
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text8
  1283   0014BE                     __ptext8:
  1284                           	callstack 0
  1285   0014BE                     _lcd_8bit_set_cursor:
  1286                           	callstack 25
  1287   0014BE                     
  1288                           ;ECU_Layer/lcd/lcd.c: 257:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  1289   0014BE  0E01               	movlw	1
  1290   0014C0  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
  1291                           
  1292                           ;ECU_Layer/lcd/lcd.c: 258:      if(((void*)0)==lcd){
  1293   0014C2  503F               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  1294   0014C4  A4D8               	btfss	status,2,c
  1295   0014C6  EF67  F00A         	goto	u861
  1296   0014CA  EF69  F00A         	goto	u860
  1297   0014CE                     u861:
  1298   0014CE  EF6D  F00A         	goto	l1682
  1299   0014D2                     u860:
  1300   0014D2                     
  1301                           ;ECU_Layer/lcd/lcd.c: 259:             ret = (Std_ReturnType)0x00;
  1302   0014D2  0E00               	movlw	0
  1303   0014D4  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
  1304                           
  1305                           ;ECU_Layer/lcd/lcd.c: 260:      }else{
  1306   0014D6  EFAB  F00A         	goto	l1694
  1307   0014DA                     l1682:
  1308                           
  1309                           ;ECU_Layer/lcd/lcd.c: 261:          column--;
  1310   0014DA  0641               	decf	lcd_8bit_set_cursor@column^0,f,c
  1311                           
  1312                           ;ECU_Layer/lcd/lcd.c: 262:          switch(row){
  1313   0014DC  EF98  F00A         	goto	l1692
  1314   0014E0                     l1684:
  1315   0014E0  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1316   0014E4  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
  1317   0014E6  0F80               	addlw	128
  1318   0014E8  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1319   0014EA  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1320   0014EE  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
  1321   0014F0  EFAB  F00A         	goto	l1694
  1322   0014F4                     l1686:
  1323   0014F4  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1324   0014F8  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
  1325   0014FA  0FC0               	addlw	192
  1326   0014FC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1327   0014FE  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1328   001502  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
  1329   001504  EFAB  F00A         	goto	l1694
  1330   001508                     l1688:
  1331   001508  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1332   00150C  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
  1333   00150E  0F94               	addlw	148
  1334   001510  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1335   001512  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1336   001516  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
  1337   001518  EFAB  F00A         	goto	l1694
  1338   00151C                     l1690:
  1339   00151C  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1340   001520  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
  1341   001522  0FD4               	addlw	212
  1342   001524  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1343   001526  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1344   00152A  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
  1345   00152C  EFAB  F00A         	goto	l1694
  1346   001530                     l1692:
  1347   001530  5040               	movf	lcd_8bit_set_cursor@row^0,w,c
  1348                           
  1349                           ; Switch size 1, requested type "simple"
  1350                           ; Number of cases is 4, Range of values is 1 to 4
  1351                           ; switch strategies available:
  1352                           ; Name         Instructions Cycles
  1353                           ; simple_byte           13     7 (average)
  1354                           ;	Chosen strategy is simple_byte
  1355   001532  0A01               	xorlw	1	; case 1
  1356   001534  B4D8               	btfsc	status,2,c
  1357   001536  EF70  F00A         	goto	l1684
  1358   00153A  0A03               	xorlw	3	; case 2
  1359   00153C  B4D8               	btfsc	status,2,c
  1360   00153E  EF7A  F00A         	goto	l1686
  1361   001542  0A01               	xorlw	1	; case 3
  1362   001544  B4D8               	btfsc	status,2,c
  1363   001546  EF84  F00A         	goto	l1688
  1364   00154A  0A07               	xorlw	7	; case 4
  1365   00154C  B4D8               	btfsc	status,2,c
  1366   00154E  EF8E  F00A         	goto	l1690
  1367   001552  EFAB  F00A         	goto	l1694
  1368   001556                     l1694:
  1369                           
  1370                           ;ECU_Layer/lcd/lcd.c: 270:     return ret;
  1371   001556  5042               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1372   001558  0012               	return		;funcret
  1373   00155A                     __end_of_lcd_8bit_set_cursor:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function _lcd_8bit_send_char_data *****************
  1377 ;; Defined at:
  1378 ;;		line 161 in file "ECU_Layer/lcd/lcd.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  lcd             1   10[COMRAM] PTR const struct .
  1381 ;;		 -> lcd2(10), 
  1382 ;;  data            1   11[COMRAM] unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1385 ;;  ret             1   14[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      unsigned char 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;Total ram usage:        6 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 2
  1402 ;; This function calls:
  1403 ;;		_gpio_pin_write_logic
  1404 ;;		_lcd_8bit_send_enable_signal
  1405 ;; This function is called by:
  1406 ;;		_lcd_8bit_send_char_data_pos
  1407 ;;		_lcd_8bit_send_string_pos
  1408 ;;		_lcd_8bit_send_string
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text9
  1413   001646                     __ptext9:
  1414                           	callstack 0
  1415   001646                     _lcd_8bit_send_char_data:
  1416                           	callstack 26
  1417   001646                     
  1418                           ;ECU_Layer/lcd/lcd.c: 163:     uint8 l_pin_counter = 0;
  1419   001646  0E00               	movlw	0
  1420   001648  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
  1421                           
  1422                           ;ECU_Layer/lcd/lcd.c: 164:      if(((void*)0)==lcd){
  1423   00164A  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1424   00164C  A4D8               	btfss	status,2,c
  1425   00164E  EF2B  F00B         	goto	u831
  1426   001652  EF2D  F00B         	goto	u830
  1427   001656                     u831:
  1428   001656  EF31  F00B         	goto	l1660
  1429   00165A                     u830:
  1430   00165A                     
  1431                           ;ECU_Layer/lcd/lcd.c: 165:             ret = (Std_ReturnType)0x00;
  1432   00165A  0E00               	movlw	0
  1433   00165C  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
  1434                           
  1435                           ;ECU_Layer/lcd/lcd.c: 166:      }else{
  1436   00165E  EF5A  F00B         	goto	l1674
  1437   001662                     l1660:
  1438   001662  C039  F02F         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1439   001666  0E01               	movlw	1
  1440   001668  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1441   00166A  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1442   00166E                     l1666:
  1443   00166E  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1444   001670  243E               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
  1445   001672  0F02               	addlw	2
  1446   001674  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1447   001676  C03E  F03B         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
  1448   00167A  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
  1449   00167E  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
  1450   001680  EF44  F00B         	goto	u844
  1451   001684                     u845:
  1452   001684  90D8               	bcf	status,0,c
  1453   001686  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
  1454   001688                     u844:
  1455   001688  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
  1456   00168A  EF42  F00B         	goto	u845
  1457   00168E  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
  1458   001690  0B01               	andlw	1
  1459   001692  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1460   001694  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1461   001698                     
  1462                           ;ECU_Layer/lcd/lcd.c: 170:          }
  1463   001698  2A3E               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
  1464   00169A  0E07               	movlw	7
  1465   00169C  643E               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
  1466   00169E  EF53  F00B         	goto	u851
  1467   0016A2  EF55  F00B         	goto	u850
  1468   0016A6                     u851:
  1469   0016A6  EF37  F00B         	goto	l1666
  1470   0016AA                     u850:
  1471   0016AA                     
  1472                           ;ECU_Layer/lcd/lcd.c: 171:          ret = lcd_8bit_send_enable_signal(lcd);
  1473   0016AA  C039  F037         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  1474   0016AE  ECD8  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1475   0016B2  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
  1476   0016B4                     l1674:
  1477                           
  1478                           ;ECU_Layer/lcd/lcd.c: 173:     return ret;
  1479   0016B4  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1480   0016B6  0012               	return		;funcret
  1481   0016B8                     __end_of_lcd_8bit_send_char_data:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _application_intialize *****************
  1485 ;; Defined at:
  1486 ;;		line 47 in file "application.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  ret             1    0        unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 4
  1507 ;; This function calls:
  1508 ;;		_lcd_4bit_intialize
  1509 ;;		_lcd_8bit_intialize
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text10
  1516   001A88                     __ptext10:
  1517                           	callstack 0
  1518   001A88                     _application_intialize:
  1519                           	callstack 26
  1520   001A88  0E29               	movlw	low _lcd1
  1521   001A8A  6E3D               	movwf	lcd_4bit_intialize@lcd^0,c
  1522   001A8C  EC9E  F009         	call	_lcd_4bit_intialize	;wreg free
  1523   001A90  0E1F               	movlw	low _lcd2
  1524   001A92  6E3F               	movwf	lcd_8bit_intialize@lcd^0,c
  1525   001A94  EC2B  F009         	call	_lcd_8bit_intialize	;wreg free
  1526   001A98  0012               	return		;funcret
  1527   001A9A                     __end_of_application_intialize:
  1528                           	callstack 0
  1529                           
  1530 ;; *************** function _lcd_8bit_intialize *****************
  1531 ;; Defined at:
  1532 ;;		line 118 in file "ECU_Layer/lcd/lcd.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  lcd             1   16[COMRAM] PTR const struct .
  1535 ;;		 -> lcd2(10), 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  ret             1   19[COMRAM] unsigned char 
  1538 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      unsigned char 
  1541 ;; Registers used:
  1542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1548 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;Total ram usage:        4 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; Hardware stack levels required when called: 3
  1555 ;; This function calls:
  1556 ;;		_gpio_pin_intialize
  1557 ;;		_lcd_8bit_send_command
  1558 ;; This function is called by:
  1559 ;;		_application_intialize
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text11
  1564   001256                     __ptext11:
  1565                           	callstack 0
  1566   001256                     _lcd_8bit_intialize:
  1567                           	callstack 26
  1568   001256                     
  1569                           ;ECU_Layer/lcd/lcd.c: 120:      uint8 l_data_pins_counter =0;
  1570   001256  0E00               	movlw	0
  1571   001258  6E41               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  1572                           
  1573                           ;ECU_Layer/lcd/lcd.c: 121:      if(((void*)0)==lcd){
  1574   00125A  503F               	movf	lcd_8bit_intialize@lcd^0,w,c
  1575   00125C  A4D8               	btfss	status,2,c
  1576   00125E  EF33  F009         	goto	u921
  1577   001262  EF35  F009         	goto	u920
  1578   001266                     u921:
  1579   001266  EF39  F009         	goto	l1758
  1580   00126A                     u920:
  1581   00126A                     
  1582                           ;ECU_Layer/lcd/lcd.c: 122:             ret = (Std_ReturnType)0x00;
  1583   00126A  0E00               	movlw	0
  1584   00126C  6E42               	movwf	lcd_8bit_intialize@ret^0,c
  1585                           
  1586                           ;ECU_Layer/lcd/lcd.c: 123:      }else{
  1587   00126E  EF9C  F009         	goto	l1792
  1588   001272                     l1758:
  1589                           
  1590                           ;ECU_Layer/lcd/lcd.c: 124:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1591   001272  C03F  F037         	movff	lcd_8bit_intialize@lcd,gpio_pin_intialize@_pin_config
  1592   001276  EC32  F00C         	call	_gpio_pin_intialize	;wreg free
  1593   00127A  6E42               	movwf	lcd_8bit_intialize@ret^0,c
  1594                           
  1595                           ;ECU_Layer/lcd/lcd.c: 125:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  1596   00127C  283F               	incf	lcd_8bit_intialize@lcd^0,w,c
  1597   00127E  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1598   001280  EC32  F00C         	call	_gpio_pin_intialize	;wreg free
  1599   001284  6E42               	movwf	lcd_8bit_intialize@ret^0,c
  1600   001286                     l1764:
  1601   001286  503F               	movf	lcd_8bit_intialize@lcd^0,w,c
  1602   001288  2441               	addwf	lcd_8bit_intialize@l_data_pins_counter^0,w,c
  1603   00128A  0F02               	addlw	2
  1604   00128C  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1605   00128E  EC32  F00C         	call	_gpio_pin_intialize	;wreg free
  1606   001292                     
  1607                           ;ECU_Layer/lcd/lcd.c: 128:         }
  1608   001292  2A41               	incf	lcd_8bit_intialize@l_data_pins_counter^0,f,c
  1609   001294  0E07               	movlw	7
  1610   001296  6441               	cpfsgt	lcd_8bit_intialize@l_data_pins_counter^0,c
  1611   001298  EF50  F009         	goto	u931
  1612   00129C  EF52  F009         	goto	u930
  1613   0012A0                     u931:
  1614   0012A0  EF43  F009         	goto	l1764
  1615   0012A4                     u930:
  1616   0012A4                     
  1617                           ;ECU_Layer/lcd/lcd.c: 129:         _delay((unsigned long)((20)*((uint64)3200000/4000.0))
      +                          );
  1618   0012A4  0E15               	movlw	21
  1619   0012A6  6E40               	movwf	??_lcd_8bit_intialize^0,c
  1620   0012A8  0EC6               	movlw	198
  1621   0012AA                     u1097:
  1622   0012AA  2EE8               	decfsz	wreg,f,c
  1623   0012AC  D7FE               	bra	u1097
  1624   0012AE  2E40               	decfsz	??_lcd_8bit_intialize^0,f,c
  1625   0012B0  D7FC               	bra	u1097
  1626   0012B2  D000               	nop2	
  1627   0012B4  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1628   0012B8  0E38               	movlw	56
  1629   0012BA  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1630   0012BC  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1631   0012C0                     
  1632                           ;ECU_Layer/lcd/lcd.c: 131:         _delay((unsigned long)((5)*((uint64)3200000/4000.0)))
      +                          ;
  1633   0012C0  0E06               	movlw	6
  1634   0012C2  6E40               	movwf	??_lcd_8bit_intialize^0,c
  1635   0012C4  0E30               	movlw	48
  1636   0012C6                     u1107:
  1637   0012C6  2EE8               	decfsz	wreg,f,c
  1638   0012C8  D7FE               	bra	u1107
  1639   0012CA  2E40               	decfsz	??_lcd_8bit_intialize^0,f,c
  1640   0012CC  D7FC               	bra	u1107
  1641   0012CE  D000               	nop2	
  1642   0012D0  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1643   0012D4  0E38               	movlw	56
  1644   0012D6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1645   0012D8  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1646   0012DC                     
  1647                           ;ECU_Layer/lcd/lcd.c: 133:         _delay((unsigned long)((150)*((uint64)3200000/4000000
      +                          .0)));
  1648   0012DC  0E28               	movlw	40
  1649   0012DE                     u1117:
  1650   0012DE  2EE8               	decfsz	wreg,f,c
  1651   0012E0  D7FE               	bra	u1117
  1652   0012E2  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1653   0012E6  0E38               	movlw	56
  1654   0012E8  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1655   0012EA  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1656   0012EE  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1657   0012F2  0E01               	movlw	1
  1658   0012F4  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1659   0012F6  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1660   0012FA  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1661   0012FE  0E02               	movlw	2
  1662   001300  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1663   001302  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1664   001306  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1665   00130A  0E06               	movlw	6
  1666   00130C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1667   00130E  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1668   001312  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1669   001316  0E0C               	movlw	12
  1670   001318  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1671   00131A  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1672   00131E  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1673   001322  0E38               	movlw	56
  1674   001324  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1675   001326  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1676   00132A                     
  1677                           ;ECU_Layer/lcd/lcd.c: 142:         ret = lcd_8bit_send_command(lcd,0x80);
  1678   00132A  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1679   00132E  0E80               	movlw	128
  1680   001330  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1681   001332  EC5C  F00B         	call	_lcd_8bit_send_command	;wreg free
  1682   001336  6E42               	movwf	lcd_8bit_intialize@ret^0,c
  1683   001338                     l1792:
  1684                           
  1685                           ;ECU_Layer/lcd/lcd.c: 145:     return ret;
  1686   001338  5042               	movf	lcd_8bit_intialize@ret^0,w,c
  1687   00133A  0012               	return		;funcret
  1688   00133C                     __end_of_lcd_8bit_intialize:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _lcd_8bit_send_command *****************
  1692 ;; Defined at:
  1693 ;;		line 147 in file "ECU_Layer/lcd/lcd.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  lcd             1   10[COMRAM] PTR const struct .
  1696 ;;		 -> lcd2(10), 
  1697 ;;  command         1   11[COMRAM] unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1700 ;;  ret             1   14[COMRAM] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      unsigned char 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;Total ram usage:        6 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 2
  1717 ;; This function calls:
  1718 ;;		_gpio_pin_write_logic
  1719 ;;		_lcd_8bit_send_enable_signal
  1720 ;; This function is called by:
  1721 ;;		_lcd_8bit_intialize
  1722 ;;		_lcd_8bit_set_cursor
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text12
  1727   0016B8                     __ptext12:
  1728                           	callstack 0
  1729   0016B8                     _lcd_8bit_send_command:
  1730                           	callstack 25
  1731   0016B8                     
  1732                           ;ECU_Layer/lcd/lcd.c: 149:      uint8 l_pin_counter = 0;
  1733   0016B8  0E00               	movlw	0
  1734   0016BA  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1735                           
  1736                           ;ECU_Layer/lcd/lcd.c: 150:      if(((void*)0)==lcd){
  1737   0016BC  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1738   0016BE  A4D8               	btfss	status,2,c
  1739   0016C0  EF64  F00B         	goto	u711
  1740   0016C4  EF66  F00B         	goto	u710
  1741   0016C8                     u711:
  1742   0016C8  EF6A  F00B         	goto	l1578
  1743   0016CC                     u710:
  1744   0016CC                     
  1745                           ;ECU_Layer/lcd/lcd.c: 151:             ret = (Std_ReturnType)0x00;
  1746   0016CC  0E00               	movlw	0
  1747   0016CE  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1748                           
  1749                           ;ECU_Layer/lcd/lcd.c: 152:      }else{
  1750   0016D0  EF93  F00B         	goto	l1592
  1751   0016D4                     l1578:
  1752   0016D4  C039  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1753   0016D8  0E00               	movlw	0
  1754   0016DA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1755   0016DC  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1756   0016E0                     l1584:
  1757   0016E0  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1758   0016E2  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1759   0016E4  0F02               	addlw	2
  1760   0016E6  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1761   0016E8  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1762   0016EC  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1763   0016F0  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1764   0016F2  EF7D  F00B         	goto	u724
  1765   0016F6                     u725:
  1766   0016F6  90D8               	bcf	status,0,c
  1767   0016F8  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1768   0016FA                     u724:
  1769   0016FA  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1770   0016FC  EF7B  F00B         	goto	u725
  1771   001700  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1772   001702  0B01               	andlw	1
  1773   001704  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1774   001706  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1775   00170A                     
  1776                           ;ECU_Layer/lcd/lcd.c: 156:          }
  1777   00170A  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1778   00170C  0E07               	movlw	7
  1779   00170E  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1780   001710  EF8C  F00B         	goto	u731
  1781   001714  EF8E  F00B         	goto	u730
  1782   001718                     u731:
  1783   001718  EF70  F00B         	goto	l1584
  1784   00171C                     u730:
  1785   00171C                     
  1786                           ;ECU_Layer/lcd/lcd.c: 157:          ret = lcd_8bit_send_enable_signal(lcd);
  1787   00171C  C039  F037         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1788   001720  ECD8  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1789   001724  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1790   001726                     l1592:
  1791                           
  1792                           ;ECU_Layer/lcd/lcd.c: 159:     return ret;
  1793   001726  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1794   001728  0012               	return		;funcret
  1795   00172A                     __end_of_lcd_8bit_send_command:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1799 ;; Defined at:
  1800 ;;		line 244 in file "ECU_Layer/lcd/lcd.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  lcd             1    8[COMRAM] PTR const struct .
  1803 ;;		 -> lcd2(10), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  ret             1    9[COMRAM] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      unsigned char 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1815 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 1
  1822 ;; This function calls:
  1823 ;;		_gpio_pin_write_logic
  1824 ;; This function is called by:
  1825 ;;		_lcd_8bit_send_command
  1826 ;;		_lcd_8bit_send_char_data
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text13
  1831   0019B0                     __ptext13:
  1832                           	callstack 0
  1833   0019B0                     _lcd_8bit_send_enable_signal:
  1834                           	callstack 25
  1835   0019B0                     
  1836                           ;ECU_Layer/lcd/lcd.c: 246:      if(((void*)0)==lcd){
  1837   0019B0  5037               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1838   0019B2  A4D8               	btfss	status,2,c
  1839   0019B4  EFDE  F00C         	goto	u691
  1840   0019B8  EFE0  F00C         	goto	u690
  1841   0019BC                     u691:
  1842   0019BC  EFE4  F00C         	goto	l1556
  1843   0019C0                     u690:
  1844   0019C0                     
  1845                           ;ECU_Layer/lcd/lcd.c: 247:             ret = (Std_ReturnType)0x00;
  1846   0019C0  0E00               	movlw	0
  1847   0019C2  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1848                           
  1849                           ;ECU_Layer/lcd/lcd.c: 248:      }else{
  1850   0019C4  EFF1  F00C         	goto	l1560
  1851   0019C8                     l1556:
  1852   0019C8  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1853   0019CA  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1854   0019CC  0E01               	movlw	1
  1855   0019CE  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1856   0019D0  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1857   0019D4                     
  1858                           ;ECU_Layer/lcd/lcd.c: 250:             _delay((unsigned long)((1)*((uint64)3200000/40000
      +                          00.0)));
  1859                           ;ECU_Layer/lcd/lcd.c: 251:             ret = gpio_pin_write_logic(&(lcd->lcd_en),GPIO_LO
      +                          W);
  1860   0019D4  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1861   0019D6  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1862   0019D8  0E00               	movlw	0
  1863   0019DA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1864   0019DC  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  1865   0019E0  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1866   0019E2                     l1560:
  1867                           
  1868                           ;ECU_Layer/lcd/lcd.c: 253:     return ret;
  1869   0019E2  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1870   0019E4  0012               	return		;funcret
  1871   0019E6                     __end_of_lcd_8bit_send_enable_signal:
  1872                           	callstack 0
  1873                           
  1874 ;; *************** function _lcd_4bit_intialize *****************
  1875 ;; Defined at:
  1876 ;;		line 18 in file "ECU_Layer/lcd/lcd.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  lcd             1   14[COMRAM] PTR const struct .
  1879 ;;		 -> lcd1(6), 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  ret             1   17[COMRAM] unsigned char 
  1882 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      unsigned char 
  1885 ;; Registers used:
  1886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1892 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;Total ram usage:        4 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 3
  1899 ;; This function calls:
  1900 ;;		_gpio_pin_intialize
  1901 ;;		_lcd_4bit_send_command
  1902 ;; This function is called by:
  1903 ;;		_application_intialize
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text14
  1908   00133C                     __ptext14:
  1909                           	callstack 0
  1910   00133C                     _lcd_4bit_intialize:
  1911                           	callstack 26
  1912   00133C                     
  1913                           ;ECU_Layer/lcd/lcd.c: 20:    uint8 l_data_pins_counter= 0;
  1914   00133C  0E00               	movlw	0
  1915   00133E  6E3F               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  1916                           
  1917                           ;ECU_Layer/lcd/lcd.c: 21:      if(((void*)0)==lcd){
  1918   001340  503D               	movf	lcd_4bit_intialize@lcd^0,w,c
  1919   001342  A4D8               	btfss	status,2,c
  1920   001344  EFA6  F009         	goto	u871
  1921   001348  EFA8  F009         	goto	u870
  1922   00134C                     u871:
  1923   00134C  EFAC  F009         	goto	l1702
  1924   001350                     u870:
  1925   001350                     
  1926                           ;ECU_Layer/lcd/lcd.c: 22:             ret = (Std_ReturnType)0x00;
  1927   001350  0E00               	movlw	0
  1928   001352  6E40               	movwf	lcd_4bit_intialize@ret^0,c
  1929                           
  1930                           ;ECU_Layer/lcd/lcd.c: 23:      }else{
  1931   001354  EF0F  F00A         	goto	l1736
  1932   001358                     l1702:
  1933                           
  1934                           ;ECU_Layer/lcd/lcd.c: 24:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1935   001358  C03D  F037         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  1936   00135C  EC32  F00C         	call	_gpio_pin_intialize	;wreg free
  1937   001360  6E40               	movwf	lcd_4bit_intialize@ret^0,c
  1938                           
  1939                           ;ECU_Layer/lcd/lcd.c: 25:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  1940   001362  283D               	incf	lcd_4bit_intialize@lcd^0,w,c
  1941   001364  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1942   001366  EC32  F00C         	call	_gpio_pin_intialize	;wreg free
  1943   00136A  6E40               	movwf	lcd_4bit_intialize@ret^0,c
  1944   00136C                     l1708:
  1945   00136C  503D               	movf	lcd_4bit_intialize@lcd^0,w,c
  1946   00136E  243F               	addwf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  1947   001370  0F02               	addlw	2
  1948   001372  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1949   001374  EC32  F00C         	call	_gpio_pin_intialize	;wreg free
  1950   001378                     
  1951                           ;ECU_Layer/lcd/lcd.c: 28:         }
  1952   001378  2A3F               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  1953   00137A  0E03               	movlw	3
  1954   00137C  643F               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  1955   00137E  EFC3  F009         	goto	u881
  1956   001382  EFC5  F009         	goto	u880
  1957   001386                     u881:
  1958   001386  EFB6  F009         	goto	l1708
  1959   00138A                     u880:
  1960   00138A                     
  1961                           ;ECU_Layer/lcd/lcd.c: 29:         _delay((unsigned long)((20)*((uint64)3200000/4000.0)))
      +                          ;
  1962   00138A  0E15               	movlw	21
  1963   00138C  6E3E               	movwf	??_lcd_4bit_intialize^0,c
  1964   00138E  0EC6               	movlw	198
  1965   001390                     u1127:
  1966   001390  2EE8               	decfsz	wreg,f,c
  1967   001392  D7FE               	bra	u1127
  1968   001394  2E3E               	decfsz	??_lcd_4bit_intialize^0,f,c
  1969   001396  D7FC               	bra	u1127
  1970   001398  D000               	nop2	
  1971   00139A  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1972   00139E  0E38               	movlw	56
  1973   0013A0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1974   0013A2  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
  1975   0013A6                     
  1976                           ;ECU_Layer/lcd/lcd.c: 31:         _delay((unsigned long)((5)*((uint64)3200000/4000.0)));
  1977   0013A6  0E06               	movlw	6
  1978   0013A8  6E3E               	movwf	??_lcd_4bit_intialize^0,c
  1979   0013AA  0E30               	movlw	48
  1980   0013AC                     u1137:
  1981   0013AC  2EE8               	decfsz	wreg,f,c
  1982   0013AE  D7FE               	bra	u1137
  1983   0013B0  2E3E               	decfsz	??_lcd_4bit_intialize^0,f,c
  1984   0013B2  D7FC               	bra	u1137
  1985   0013B4  D000               	nop2	
  1986   0013B6  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1987   0013BA  0E38               	movlw	56
  1988   0013BC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1989   0013BE  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
  1990   0013C2                     
  1991                           ;ECU_Layer/lcd/lcd.c: 33:         _delay((unsigned long)((150)*((uint64)3200000/4000000.
      +                          0)));
  1992   0013C2  0E28               	movlw	40
  1993   0013C4                     u1147:
  1994   0013C4  2EE8               	decfsz	wreg,f,c
  1995   0013C6  D7FE               	bra	u1147
  1996   0013C8  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1997   0013CC  0E38               	movlw	56
  1998   0013CE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1999   0013D0  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
  2000   0013D4  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2001   0013D8  0E01               	movlw	1
  2002   0013DA  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2003   0013DC  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
  2004   0013E0  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2005   0013E4  0E02               	movlw	2
  2006   0013E6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2007   0013E8  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
  2008   0013EC  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2009   0013F0  0E06               	movlw	6
  2010   0013F2  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2011   0013F4  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
  2012   0013F8  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2013   0013FC  0E0C               	movlw	12
  2014   0013FE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2015   001400  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
  2016   001404  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2017   001408  0E28               	movlw	40
  2018   00140A  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2019   00140C  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
  2020   001410                     
  2021                           ;ECU_Layer/lcd/lcd.c: 42:         ret = lcd_4bit_send_command(lcd,0x80);
  2022   001410  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  2023   001414  0E80               	movlw	128
  2024   001416  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2025   001418  EC8F  F00C         	call	_lcd_4bit_send_command	;wreg free
  2026   00141C  6E40               	movwf	lcd_4bit_intialize@ret^0,c
  2027   00141E                     l1736:
  2028                           
  2029                           ;ECU_Layer/lcd/lcd.c: 44:     return ret;
  2030   00141E  5040               	movf	lcd_4bit_intialize@ret^0,w,c
  2031   001420  0012               	return		;funcret
  2032   001422                     __end_of_lcd_4bit_intialize:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _lcd_4bit_send_command *****************
  2036 ;; Defined at:
  2037 ;;		line 46 in file "ECU_Layer/lcd/lcd.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  lcd             1   11[COMRAM] PTR const struct .
  2040 ;;		 -> lcd1(6), 
  2041 ;;  command         1   12[COMRAM] unsigned char 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  ret             1   13[COMRAM] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      unsigned char 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;Total ram usage:        3 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 2
  2060 ;; This function calls:
  2061 ;;		_gpio_pin_write_logic
  2062 ;;		_lcd_4bit_send_enable_signal
  2063 ;;		_lcd_send_4bits
  2064 ;; This function is called by:
  2065 ;;		_lcd_4bit_intialize
  2066 ;;		_lcd_4bit_set_cursor
  2067 ;;		_welcome_message
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text15
  2072   00191E                     __ptext15:
  2073                           	callstack 0
  2074   00191E                     _lcd_4bit_send_command:
  2075                           	callstack 25
  2076   00191E                     
  2077                           ;ECU_Layer/lcd/lcd.c: 48:      if(((void*)0)==lcd){
  2078   00191E  503A               	movf	lcd_4bit_send_command@lcd^0,w,c
  2079   001920  A4D8               	btfss	status,2,c
  2080   001922  EF95  F00C         	goto	u701
  2081   001926  EF97  F00C         	goto	u700
  2082   00192A                     u701:
  2083   00192A  EF9B  F00C         	goto	l1568
  2084   00192E                     u700:
  2085   00192E                     
  2086                           ;ECU_Layer/lcd/lcd.c: 49:             ret = (Std_ReturnType)0x00;
  2087   00192E  0E00               	movlw	0
  2088   001930  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2089                           
  2090                           ;ECU_Layer/lcd/lcd.c: 50:      }else{
  2091   001932  EFBB  F00C         	goto	l1570
  2092   001936                     l1568:
  2093                           
  2094                           ;ECU_Layer/lcd/lcd.c: 51:          ret =gpio_pin_write_logic(&(lcd->lcd_rs),GPIO_LOW);
  2095   001936  C03A  F02F         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2096   00193A  0E00               	movlw	0
  2097   00193C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2098   00193E  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  2099   001942  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2100                           
  2101                           ;ECU_Layer/lcd/lcd.c: 52:          ret =lcd_send_4bits(lcd,command>>4);
  2102   001944  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2103   001948  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  2104   00194A  0B0F               	andlw	15
  2105   00194C  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  2106   00194E  ECCC  F00B         	call	_lcd_send_4bits	;wreg free
  2107   001952  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2108                           
  2109                           ;ECU_Layer/lcd/lcd.c: 53:          ret =lcd_4bit_send_enable_signal(lcd);
  2110   001954  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2111   001958  ECF3  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  2112   00195C  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2113                           
  2114                           ;ECU_Layer/lcd/lcd.c: 54:          ret =lcd_send_4bits(lcd,command);
  2115   00195E  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2116   001962  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  2117   001966  ECCC  F00B         	call	_lcd_send_4bits	;wreg free
  2118   00196A  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2119                           
  2120                           ;ECU_Layer/lcd/lcd.c: 55:          ret =lcd_4bit_send_enable_signal(lcd);
  2121   00196C  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2122   001970  ECF3  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  2123   001974  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2124   001976                     l1570:
  2125                           
  2126                           ;ECU_Layer/lcd/lcd.c: 58:     return ret;
  2127   001976  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  2128   001978  0012               	return		;funcret
  2129   00197A                     __end_of_lcd_4bit_send_command:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _lcd_send_4bits *****************
  2133 ;; Defined at:
  2134 ;;		line 221 in file "ECU_Layer/lcd/lcd.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  lcd             1    8[COMRAM] PTR const struct .
  2137 ;;		 -> lcd1(6), 
  2138 ;;  _data_comman    1    9[COMRAM] unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  ret             1   10[COMRAM] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      unsigned char 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;Total ram usage:        3 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 1
  2157 ;; This function calls:
  2158 ;;		_gpio_pin_write_logic
  2159 ;; This function is called by:
  2160 ;;		_lcd_4bit_send_command
  2161 ;;		_lcd_4bit_send_char_data
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text16
  2166   001798                     __ptext16:
  2167                           	callstack 0
  2168   001798                     _lcd_send_4bits:
  2169                           	callstack 25
  2170   001798                     
  2171                           ;ECU_Layer/lcd/lcd.c: 223:      if(((void*)0)==lcd){
  2172   001798  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2173   00179A  A4D8               	btfss	status,2,c
  2174   00179C  EFD2  F00B         	goto	u671
  2175   0017A0  EFD4  F00B         	goto	u670
  2176   0017A4                     u671:
  2177   0017A4  EFD8  F00B         	goto	l1534
  2178   0017A8                     u670:
  2179   0017A8                     
  2180                           ;ECU_Layer/lcd/lcd.c: 224:             ret = (Std_ReturnType)0x00;
  2181   0017A8  0E00               	movlw	0
  2182   0017AA  6E39               	movwf	lcd_send_4bits@ret^0,c
  2183                           
  2184                           ;ECU_Layer/lcd/lcd.c: 225:      }else{
  2185   0017AC  EF01  F00C         	goto	l1536
  2186   0017B0                     l1534:
  2187                           
  2188                           ;ECU_Layer/lcd/lcd.c: 226:        ret = gpio_pin_write_logic(&(lcd->lcd_data[0]),(_data_
      +                          command >> 0)& (uint8)0x01);
  2189   0017B0  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2190   0017B2  0F02               	addlw	2
  2191   0017B4  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2192   0017B6  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  2193   0017B8  0B01               	andlw	1
  2194   0017BA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2195   0017BC  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  2196   0017C0  6E39               	movwf	lcd_send_4bits@ret^0,c
  2197                           
  2198                           ;ECU_Layer/lcd/lcd.c: 227:        ret = gpio_pin_write_logic(&(lcd->lcd_data[1]),(_data_
      +                          command >> 1)& (uint8)0x01);
  2199   0017C2  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2200   0017C4  0F03               	addlw	3
  2201   0017C6  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2202   0017C8  90D8               	bcf	status,0,c
  2203   0017CA  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2204   0017CC  0B01               	andlw	1
  2205   0017CE  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2206   0017D0  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  2207   0017D4  6E39               	movwf	lcd_send_4bits@ret^0,c
  2208                           
  2209                           ;ECU_Layer/lcd/lcd.c: 228:        ret = gpio_pin_write_logic(&(lcd->lcd_data[2]),(_data_
      +                          command >> 2)& (uint8)0x01);
  2210   0017D6  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2211   0017D8  0F04               	addlw	4
  2212   0017DA  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2213   0017DC  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2214   0017DE  42E8               	rrncf	wreg,f,c
  2215   0017E0  0B3F               	andlw	63
  2216   0017E2  0B01               	andlw	1
  2217   0017E4  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2218   0017E6  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  2219   0017EA  6E39               	movwf	lcd_send_4bits@ret^0,c
  2220                           
  2221                           ;ECU_Layer/lcd/lcd.c: 229:        ret = gpio_pin_write_logic(&(lcd->lcd_data[3]),(_data_
      +                          command >> 3)& (uint8)0x01);
  2222   0017EC  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2223   0017EE  0F05               	addlw	5
  2224   0017F0  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2225   0017F2  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  2226   0017F4  46E8               	rlncf	wreg,f,c
  2227   0017F6  0B1F               	andlw	31
  2228   0017F8  0B01               	andlw	1
  2229   0017FA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2230   0017FC  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  2231   001800  6E39               	movwf	lcd_send_4bits@ret^0,c
  2232   001802                     l1536:
  2233                           
  2234                           ;ECU_Layer/lcd/lcd.c: 231:     return ret;
  2235   001802  5039               	movf	lcd_send_4bits@ret^0,w,c
  2236   001804  0012               	return		;funcret
  2237   001806                     __end_of_lcd_send_4bits:
  2238                           	callstack 0
  2239                           
  2240 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2241 ;; Defined at:
  2242 ;;		line 233 in file "ECU_Layer/lcd/lcd.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  lcd             1    8[COMRAM] PTR const struct .
  2245 ;;		 -> lcd1(6), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  ret             1    9[COMRAM] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      unsigned char 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2257 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;Total ram usage:        2 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 1
  2264 ;; This function calls:
  2265 ;;		_gpio_pin_write_logic
  2266 ;; This function is called by:
  2267 ;;		_lcd_4bit_send_command
  2268 ;;		_lcd_4bit_send_char_data
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text17
  2273   0019E6                     __ptext17:
  2274                           	callstack 0
  2275   0019E6                     _lcd_4bit_send_enable_signal:
  2276                           	callstack 25
  2277   0019E6                     
  2278                           ;ECU_Layer/lcd/lcd.c: 235:      if(((void*)0)==lcd){
  2279   0019E6  5037               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2280   0019E8  A4D8               	btfss	status,2,c
  2281   0019EA  EFF9  F00C         	goto	u681
  2282   0019EE  EFFB  F00C         	goto	u680
  2283   0019F2                     u681:
  2284   0019F2  EFFF  F00C         	goto	l1544
  2285   0019F6                     u680:
  2286   0019F6                     
  2287                           ;ECU_Layer/lcd/lcd.c: 236:             ret = (Std_ReturnType)0x00;
  2288   0019F6  0E00               	movlw	0
  2289   0019F8  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2290                           
  2291                           ;ECU_Layer/lcd/lcd.c: 237:      }else{
  2292   0019FA  EF0C  F00D         	goto	l1548
  2293   0019FE                     l1544:
  2294   0019FE  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2295   001A00  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2296   001A02  0E01               	movlw	1
  2297   001A04  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2298   001A06  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  2299   001A0A                     
  2300                           ;ECU_Layer/lcd/lcd.c: 239:             _delay((unsigned long)((1)*((uint64)3200000/40000
      +                          00.0)));
  2301                           ;ECU_Layer/lcd/lcd.c: 240:             ret = gpio_pin_write_logic(&(lcd->lcd_en),GPIO_LO
      +                          W);
  2302   001A0A  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2303   001A0C  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2304   001A0E  0E00               	movlw	0
  2305   001A10  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2306   001A12  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  2307   001A16  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2308   001A18                     l1548:
  2309                           
  2310                           ;ECU_Layer/lcd/lcd.c: 242:     return ret;
  2311   001A18  5038               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2312   001A1A  0012               	return		;funcret
  2313   001A1C                     __end_of_lcd_4bit_send_enable_signal:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _gpio_pin_intialize *****************
  2317 ;; Defined at:
  2318 ;;		line 133 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  2321 ;;		 -> lcd2$lcd_data(8), lcd2(10), lcd1$lcd_data(4), lcd1(6), 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  ret             1   10[COMRAM] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      unsigned char 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2333 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;Total ram usage:        3 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 1
  2340 ;; This function calls:
  2341 ;;		_gpio_pin_direction_intialize
  2342 ;;		_gpio_pin_write_logic
  2343 ;; This function is called by:
  2344 ;;		_lcd_4bit_intialize
  2345 ;;		_lcd_8bit_intialize
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text18
  2350   001864                     __ptext18:
  2351                           	callstack 0
  2352   001864                     _gpio_pin_intialize:
  2353                           	callstack 27
  2354   001864                     
  2355                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:      if(((void*)0)==_pin_config || _pin_config->pin >8
      +                           -1){
  2356   001864  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2357   001866  B4D8               	btfsc	status,2,c
  2358   001868  EF38  F00C         	goto	u791
  2359   00186C  EF3A  F00C         	goto	u790
  2360   001870                     u791:
  2361   001870  EF4A  F00C         	goto	l1618
  2362   001874                     u790:
  2363   001874  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2364   001876  6ED9               	movwf	fsr2l,c
  2365   001878  6ADA               	clrf	fsr2h,c
  2366   00187A  30DF               	rrcf	223,w,c
  2367   00187C  32E8               	rrcf	wreg,f,c
  2368   00187E  32E8               	rrcf	wreg,f,c
  2369   001880  0B07               	andlw	7
  2370   001882  6E38               	movwf	??_gpio_pin_intialize^0,c
  2371   001884  0E07               	movlw	7
  2372   001886  6438               	cpfsgt	??_gpio_pin_intialize^0,c
  2373   001888  EF48  F00C         	goto	u801
  2374   00188C  EF4A  F00C         	goto	u800
  2375   001890                     u801:
  2376   001890  EF4E  F00C         	goto	l1620
  2377   001894                     u800:
  2378   001894                     l1618:
  2379                           
  2380                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:                  ret = (Std_ReturnType)0x00;
  2381   001894  0E00               	movlw	0
  2382   001896  6E39               	movwf	gpio_pin_intialize@ret^0,c
  2383                           
  2384                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:      }else{
  2385   001898  EF5F  F00C         	goto	l1622
  2386   00189C                     l1620:
  2387                           
  2388                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:          ret = gpio_pin_direction_intialize( _pin_conf
      +                          ig );
  2389   00189C  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  2390   0018A0  EC1A  F008         	call	_gpio_pin_direction_intialize	;wreg free
  2391   0018A4  6E39               	movwf	gpio_pin_intialize@ret^0,c
  2392                           
  2393                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:          ret = gpio_pin_write_logic(_pin_config ,_pin_
      +                          config-> logic);
  2394   0018A6  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  2395   0018AA  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2396   0018AC  6ED9               	movwf	fsr2l,c
  2397   0018AE  6ADA               	clrf	fsr2h,c
  2398   0018B0  0E00               	movlw	0
  2399   0018B2  BEDF               	btfsc	indf2,7,c
  2400   0018B4  0E01               	movlw	1
  2401   0018B6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2402   0018B8  ECA3  F008         	call	_gpio_pin_write_logic	;wreg free
  2403   0018BC  6E39               	movwf	gpio_pin_intialize@ret^0,c
  2404   0018BE                     l1622:
  2405                           
  2406                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:      return ret;
  2407   0018BE  5039               	movf	gpio_pin_intialize@ret^0,w,c
  2408   0018C0  0012               	return		;funcret
  2409   0018C2                     __end_of_gpio_pin_intialize:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _gpio_pin_write_logic *****************
  2413 ;; Defined at:
  2414 ;;		line 70 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2417 ;;		 -> lcd2$lcd_data(8), lcd2(10), lcd1$lcd_data(4), lcd1(6), 
  2418 ;;  logic           1    1[COMRAM] enum E2494
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  ret             1    7[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      unsigned char 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;Total ram usage:        8 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_lcd_4bit_send_command
  2440 ;;		_lcd_4bit_send_char_data
  2441 ;;		_lcd_8bit_send_command
  2442 ;;		_lcd_8bit_send_char_data
  2443 ;;		_lcd_send_4bits
  2444 ;;		_lcd_4bit_send_enable_signal
  2445 ;;		_lcd_8bit_send_enable_signal
  2446 ;;		_gpio_pin_intialize
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text19
  2451   001146                     __ptext19:
  2452                           	callstack 0
  2453   001146                     _gpio_pin_write_logic:
  2454                           	callstack 25
  2455   001146                     
  2456                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2457   001146  0E01               	movlw	1
  2458   001148  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2459                           
  2460                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     if(((void*)0)==_pin_config|| _pin_config->pin >8 -1
      +                           ){
  2461   00114A  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2462   00114C  B4D8               	btfsc	status,2,c
  2463   00114E  EFAB  F008         	goto	u631
  2464   001152  EFAD  F008         	goto	u630
  2465   001156                     u631:
  2466   001156  EFBD  F008         	goto	l1512
  2467   00115A                     u630:
  2468   00115A  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2469   00115C  6ED9               	movwf	fsr2l,c
  2470   00115E  6ADA               	clrf	fsr2h,c
  2471   001160  30DF               	rrcf	223,w,c
  2472   001162  32E8               	rrcf	wreg,f,c
  2473   001164  32E8               	rrcf	wreg,f,c
  2474   001166  0B07               	andlw	7
  2475   001168  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2476   00116A  0E07               	movlw	7
  2477   00116C  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  2478   00116E  EFBB  F008         	goto	u641
  2479   001172  EFBD  F008         	goto	u640
  2480   001176                     u641:
  2481   001176  EF14  F009         	goto	l1520
  2482   00117A                     u640:
  2483   00117A                     l1512:
  2484                           
  2485                           ;MCAL_Layer/GPIO/hal_gpio.c: 73:         ret = (Std_ReturnType)0x00;
  2486   00117A  0E00               	movlw	0
  2487   00117C  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2488                           
  2489                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     }else{
  2490   00117E  EF29  F009         	goto	l1522
  2491   001182                     l1514:
  2492                           
  2493                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  2494   001182  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2495   001184  6ED9               	movwf	fsr2l,c
  2496   001186  6ADA               	clrf	fsr2h,c
  2497   001188  30DF               	rrcf	223,w,c
  2498   00118A  32E8               	rrcf	wreg,f,c
  2499   00118C  32E8               	rrcf	wreg,f,c
  2500   00118E  0B07               	andlw	7
  2501   001190  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2502   001192  0E01               	movlw	1
  2503   001194  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2504   001196  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2505   001198  EFD0  F008         	goto	u654
  2506   00119C                     u655:
  2507   00119C  90D8               	bcf	status,0,c
  2508   00119E  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2509   0011A0                     u654:
  2510   0011A0  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2511   0011A2  EFCE  F008         	goto	u655
  2512   0011A6  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2513   0011A8  6ED9               	movwf	fsr2l,c
  2514   0011AA  6ADA               	clrf	fsr2h,c
  2515   0011AC  50DF               	movf	223,w,c
  2516   0011AE  0B07               	andlw	7
  2517   0011B0  0D02               	mullw	2
  2518   0011B2  50F3               	movf	243,w,c
  2519   0011B4  0F0B               	addlw	low _lat_registers
  2520   0011B6  6ED9               	movwf	fsr2l,c
  2521   0011B8  6ADA               	clrf	fsr2h,c
  2522   0011BA  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  2523   0011BE  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  2524   0011C2  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2525   0011C6  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2526   0011CA  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2527   0011CC  12DF               	iorwf	indf2,f,c
  2528                           
  2529                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:                 break;
  2530   0011CE  EF29  F009         	goto	l1522
  2531   0011D2                     l1516:
  2532                           
  2533                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  2534   0011D2  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2535   0011D4  6ED9               	movwf	fsr2l,c
  2536   0011D6  6ADA               	clrf	fsr2h,c
  2537   0011D8  30DF               	rrcf	223,w,c
  2538   0011DA  32E8               	rrcf	wreg,f,c
  2539   0011DC  32E8               	rrcf	wreg,f,c
  2540   0011DE  0B07               	andlw	7
  2541   0011E0  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2542   0011E2  0E01               	movlw	1
  2543   0011E4  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2544   0011E6  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2545   0011E8  EFF8  F008         	goto	u664
  2546   0011EC                     u665:
  2547   0011EC  90D8               	bcf	status,0,c
  2548   0011EE  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2549   0011F0                     u664:
  2550   0011F0  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2551   0011F2  EFF6  F008         	goto	u665
  2552   0011F6  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2553   0011F8  0AFF               	xorlw	255
  2554   0011FA  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2555   0011FC  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2556   0011FE  6ED9               	movwf	fsr2l,c
  2557   001200  6ADA               	clrf	fsr2h,c
  2558   001202  50DF               	movf	223,w,c
  2559   001204  0B07               	andlw	7
  2560   001206  0D02               	mullw	2
  2561   001208  50F3               	movf	243,w,c
  2562   00120A  0F0B               	addlw	low _lat_registers
  2563   00120C  6ED9               	movwf	fsr2l,c
  2564   00120E  6ADA               	clrf	fsr2h,c
  2565   001210  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  2566   001214  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  2567   001218  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2568   00121C  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2569   001220  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2570   001222  16DF               	andwf	indf2,f,c
  2571                           
  2572                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
  2573   001224  EF29  F009         	goto	l1522
  2574   001228                     l1520:
  2575   001228  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  2576   00122A  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2577   00122C  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2578                           
  2579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 1, Range of values is 0 to 0
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte            4     3 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586   00122E  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2587   001230  0A00               	xorlw	0	; case 0
  2588   001232  B4D8               	btfsc	status,2,c
  2589   001234  EF1E  F009         	goto	l1910
  2590   001238  EFBD  F008         	goto	l1512
  2591   00123C                     l1910:
  2592                           
  2593                           ; Switch size 1, requested type "simple"
  2594                           ; Number of cases is 2, Range of values is 0 to 1
  2595                           ; switch strategies available:
  2596                           ; Name         Instructions Cycles
  2597                           ; simple_byte            7     4 (average)
  2598                           ;	Chosen strategy is simple_byte
  2599   00123C  5031               	movf	??_gpio_pin_write_logic^0,w,c
  2600   00123E  0A00               	xorlw	0	; case 0
  2601   001240  B4D8               	btfsc	status,2,c
  2602   001242  EFE9  F008         	goto	l1516
  2603   001246  0A01               	xorlw	1	; case 1
  2604   001248  B4D8               	btfsc	status,2,c
  2605   00124A  EFC1  F008         	goto	l1514
  2606   00124E  EFBD  F008         	goto	l1512
  2607   001252                     l1522:
  2608                           
  2609                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:         return ret ;
  2610   001252  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  2611   001254  0012               	return		;funcret
  2612   001256                     __end_of_gpio_pin_write_logic:
  2613                           	callstack 0
  2614                           
  2615 ;; *************** function _gpio_pin_direction_intialize *****************
  2616 ;; Defined at:
  2617 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2620 ;;		 -> lcd2$lcd_data(8), lcd2(10), lcd1$lcd_data(4), lcd1(6), 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  ret             1    6[COMRAM] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      unsigned char 
  2625 ;; Registers used:
  2626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;Total ram usage:        7 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_gpio_pin_intialize
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text20
  2646   001034                     __ptext20:
  2647                           	callstack 0
  2648   001034                     _gpio_pin_direction_intialize:
  2649                           	callstack 27
  2650   001034                     
  2651                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2652   001034  0E01               	movlw	1
  2653   001036  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  2654                           
  2655                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if(((void*)0)==_pin_config || _pin_config->pin >8 -
      +                          1){
  2656   001038  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2657   00103A  B4D8               	btfsc	status,2,c
  2658   00103C  EF22  F008         	goto	u741
  2659   001040  EF24  F008         	goto	u740
  2660   001044                     u741:
  2661   001044  EF34  F008         	goto	l1600
  2662   001048                     u740:
  2663   001048  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2664   00104A  6ED9               	movwf	fsr2l,c
  2665   00104C  6ADA               	clrf	fsr2h,c
  2666   00104E  30DF               	rrcf	223,w,c
  2667   001050  32E8               	rrcf	wreg,f,c
  2668   001052  32E8               	rrcf	wreg,f,c
  2669   001054  0B07               	andlw	7
  2670   001056  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2671   001058  0E07               	movlw	7
  2672   00105A  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2673   00105C  EF32  F008         	goto	u751
  2674   001060  EF34  F008         	goto	u750
  2675   001064                     u751:
  2676   001064  EF8B  F008         	goto	l1608
  2677   001068                     u750:
  2678   001068                     l1600:
  2679                           
  2680                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (Std_ReturnType)0x00;
  2681   001068  0E00               	movlw	0
  2682   00106A  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  2683                           
  2684                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }else{
  2685   00106C  EFA1  F008         	goto	l1610
  2686   001070                     l1602:
  2687                           
  2688                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  2689   001070  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2690   001072  6ED9               	movwf	fsr2l,c
  2691   001074  6ADA               	clrf	fsr2h,c
  2692   001076  30DF               	rrcf	223,w,c
  2693   001078  32E8               	rrcf	wreg,f,c
  2694   00107A  32E8               	rrcf	wreg,f,c
  2695   00107C  0B07               	andlw	7
  2696   00107E  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2697   001080  0E01               	movlw	1
  2698   001082  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2699   001084  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  2700   001086  EF47  F008         	goto	u764
  2701   00108A                     u765:
  2702   00108A  90D8               	bcf	status,0,c
  2703   00108C  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2704   00108E                     u764:
  2705   00108E  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2706   001090  EF45  F008         	goto	u765
  2707   001094  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2708   001096  0AFF               	xorlw	255
  2709   001098  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2710   00109A  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2711   00109C  6ED9               	movwf	fsr2l,c
  2712   00109E  6ADA               	clrf	fsr2h,c
  2713   0010A0  50DF               	movf	223,w,c
  2714   0010A2  0B07               	andlw	7
  2715   0010A4  0D02               	mullw	2
  2716   0010A6  50F3               	movf	243,w,c
  2717   0010A8  0F15               	addlw	low _tris_registers
  2718   0010AA  6ED9               	movwf	fsr2l,c
  2719   0010AC  6ADA               	clrf	fsr2h,c
  2720   0010AE  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2721   0010B2  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2722   0010B6  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2723   0010BA  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2724   0010BE  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2725   0010C0  16DF               	andwf	indf2,f,c
  2726                           
  2727                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:               break;
  2728   0010C2  EFA1  F008         	goto	l1610
  2729   0010C6                     l1604:
  2730                           
  2731                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  2732   0010C6  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2733   0010C8  6ED9               	movwf	fsr2l,c
  2734   0010CA  6ADA               	clrf	fsr2h,c
  2735   0010CC  30DF               	rrcf	223,w,c
  2736   0010CE  32E8               	rrcf	wreg,f,c
  2737   0010D0  32E8               	rrcf	wreg,f,c
  2738   0010D2  0B07               	andlw	7
  2739   0010D4  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2740   0010D6  0E01               	movlw	1
  2741   0010D8  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2742   0010DA  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  2743   0010DC  EF72  F008         	goto	u774
  2744   0010E0                     u775:
  2745   0010E0  90D8               	bcf	status,0,c
  2746   0010E2  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2747   0010E4                     u774:
  2748   0010E4  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2749   0010E6  EF70  F008         	goto	u775
  2750   0010EA  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2751   0010EC  6ED9               	movwf	fsr2l,c
  2752   0010EE  6ADA               	clrf	fsr2h,c
  2753   0010F0  50DF               	movf	223,w,c
  2754   0010F2  0B07               	andlw	7
  2755   0010F4  0D02               	mullw	2
  2756   0010F6  50F3               	movf	243,w,c
  2757   0010F8  0F15               	addlw	low _tris_registers
  2758   0010FA  6ED9               	movwf	fsr2l,c
  2759   0010FC  6ADA               	clrf	fsr2h,c
  2760   0010FE  CFDE F032          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2761   001102  CFDD F033          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2762   001106  C032  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2763   00110A  C033  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2764   00110E  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2765   001110  12DF               	iorwf	indf2,f,c
  2766                           
  2767                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:               break;
  2768   001112  EFA1  F008         	goto	l1610
  2769   001116                     l1608:
  2770   001116  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2771   001118  6ED9               	movwf	fsr2l,c
  2772   00111A  6ADA               	clrf	fsr2h,c
  2773   00111C  BCDF               	btfsc	indf2,6,c
  2774   00111E  EF93  F008         	goto	u781
  2775   001122  EF96  F008         	goto	u780
  2776   001126                     u781:
  2777   001126  0E01               	movlw	1
  2778   001128  EF97  F008         	goto	u786
  2779   00112C                     u780:
  2780   00112C  0E00               	movlw	0
  2781   00112E                     u786:
  2782                           
  2783                           ; Switch size 1, requested type "simple"
  2784                           ; Number of cases is 2, Range of values is 0 to 1
  2785                           ; switch strategies available:
  2786                           ; Name         Instructions Cycles
  2787                           ; simple_byte            7     4 (average)
  2788                           ;	Chosen strategy is simple_byte
  2789   00112E  0A00               	xorlw	0	; case 0
  2790   001130  B4D8               	btfsc	status,2,c
  2791   001132  EF38  F008         	goto	l1602
  2792   001136  0A01               	xorlw	1	; case 1
  2793   001138  B4D8               	btfsc	status,2,c
  2794   00113A  EF63  F008         	goto	l1604
  2795   00113E  EF34  F008         	goto	l1600
  2796   001142                     l1610:
  2797                           
  2798                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret ;
  2799   001142  5035               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2800   001144  0012               	return		;funcret
  2801   001146                     __end_of_gpio_pin_direction_intialize:
  2802                           	callstack 0
  2803                           
  2804                           	psect	rparam
  2805   000000                     
  2806                           	psect	config
  2807                           
  2808                           ; Padding undefined space
  2809   300000                     	org	3145728
  2810   300000  FF                 	db	255
  2811                           
  2812                           ;Config register CONFIG1H @ 0x300001
  2813                           ;	Oscillator Selection bits
  2814                           ;	OSC = HS, HS oscillator
  2815                           ;	Fail-Safe Clock Monitor Enable bit
  2816                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2817                           ;	Internal/External Oscillator Switchover bit
  2818                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2819   300001                     	org	3145729
  2820   300001  02                 	db	2
  2821                           
  2822                           ;Config register CONFIG2L @ 0x300002
  2823                           ;	Power-up Timer Enable bit
  2824                           ;	PWRT = OFF, PWRT disabled
  2825                           ;	Brown-out Reset Enable bits
  2826                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2827                           ;	Brown Out Reset Voltage bits
  2828                           ;	BORV = 1, 
  2829   300002                     	org	3145730
  2830   300002  09                 	db	9
  2831                           
  2832                           ;Config register CONFIG2H @ 0x300003
  2833                           ;	Watchdog Timer Enable bit
  2834                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2835                           ;	Watchdog Timer Postscale Select bits
  2836                           ;	WDTPS = 32768, 1:32768
  2837   300003                     	org	3145731
  2838   300003  1E                 	db	30
  2839                           
  2840                           ; Padding undefined space
  2841   300004                     	org	3145732
  2842   300004  FF                 	db	255
  2843                           
  2844                           ;Config register CONFIG3H @ 0x300005
  2845                           ;	CCP2 MUX bit
  2846                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2847                           ;	PORTB A/D Enable bit
  2848                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2849                           ;	Low-Power Timer1 Oscillator Enable bit
  2850                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2851                           ;	MCLR Pin Enable bit
  2852                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2853   300005                     	org	3145733
  2854   300005  81                 	db	129
  2855                           
  2856                           ;Config register CONFIG4L @ 0x300006
  2857                           ;	Stack Full/Underflow Reset Enable bit
  2858                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2859                           ;	Single-Supply ICSP Enable bit
  2860                           ;	LVP = OFF, Single-Supply ICSP disabled
  2861                           ;	Extended Instruction Set Enable bit
  2862                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2863                           ;	Background Debugger Enable bit
  2864                           ;	DEBUG = 0x1, unprogrammed default
  2865   300006                     	org	3145734
  2866   300006  81                 	db	129
  2867                           
  2868                           ; Padding undefined space
  2869   300007                     	org	3145735
  2870   300007  FF                 	db	255
  2871                           
  2872                           ;Config register CONFIG5L @ 0x300008
  2873                           ;	Code Protection bit
  2874                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2875                           ;	Code Protection bit
  2876                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2877                           ;	Code Protection bit
  2878                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2879                           ;	Code Protection bit
  2880                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2881   300008                     	org	3145736
  2882   300008  0F                 	db	15
  2883                           
  2884                           ;Config register CONFIG5H @ 0x300009
  2885                           ;	Boot Block Code Protection bit
  2886                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2887                           ;	Data EEPROM Code Protection bit
  2888                           ;	CPD = OFF, Data EEPROM not code-protected
  2889   300009                     	org	3145737
  2890   300009  C0                 	db	192
  2891                           
  2892                           ;Config register CONFIG6L @ 0x30000A
  2893                           ;	Write Protection bit
  2894                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2895                           ;	Write Protection bit
  2896                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2897                           ;	Write Protection bit
  2898                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2899                           ;	Write Protection bit
  2900                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2901   30000A                     	org	3145738
  2902   30000A  0F                 	db	15
  2903                           
  2904                           ;Config register CONFIG6H @ 0x30000B
  2905                           ;	Configuration Register Write Protection bit
  2906                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2907                           ;	Boot Block Write Protection bit
  2908                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2909                           ;	Data EEPROM Write Protection bit
  2910                           ;	WRTD = OFF, Data EEPROM not write-protected
  2911   30000B                     	org	3145739
  2912   30000B  E0                 	db	224
  2913                           
  2914                           ;Config register CONFIG7L @ 0x30000C
  2915                           ;	Table Read Protection bit
  2916                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2917                           ;	Table Read Protection bit
  2918                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2919                           ;	Table Read Protection bit
  2920                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2921                           ;	Table Read Protection bit
  2922                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2923   30000C                     	org	3145740
  2924   30000C  0F                 	db	15
  2925                           
  2926                           ;Config register CONFIG7H @ 0x30000D
  2927                           ;	Boot Block Table Read Protection bit
  2928                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2929   30000D                     	org	3145741
  2930   30000D  40                 	db	64
  2931                           tosu	equ	0xFFF
  2932                           tosh	equ	0xFFE
  2933                           tosl	equ	0xFFD
  2934                           stkptr	equ	0xFFC
  2935                           pclatu	equ	0xFFB
  2936                           pclath	equ	0xFFA
  2937                           pcl	equ	0xFF9
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodh	equ	0xFF4
  2943                           prodl	equ	0xFF3
  2944                           indf0	equ	0xFEF
  2945                           postinc0	equ	0xFEE
  2946                           postdec0	equ	0xFED
  2947                           preinc0	equ	0xFEC
  2948                           plusw0	equ	0xFEB
  2949                           fsr0h	equ	0xFEA
  2950                           fsr0l	equ	0xFE9
  2951                           wreg	equ	0xFE8
  2952                           indf1	equ	0xFE7
  2953                           postinc1	equ	0xFE6
  2954                           postdec1	equ	0xFE5
  2955                           preinc1	equ	0xFE4
  2956                           plusw1	equ	0xFE3
  2957                           fsr1h	equ	0xFE2
  2958                           fsr1l	equ	0xFE1
  2959                           bsr	equ	0xFE0
  2960                           indf2	equ	0xFDF
  2961                           postinc2	equ	0xFDE
  2962                           postdec2	equ	0xFDD
  2963                           preinc2	equ	0xFDC
  2964                           plusw2	equ	0xFDB
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    0
    Data        46
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_data(COMRAM[8]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_data(COMRAM[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_data(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[10]), STR_2(CODE[17]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_intialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 15
		 -> STR_3(CODE[8]), STR_4(CODE[15]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_loading_screen
    _welcome_message->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _loading_screen->_lcd_8bit_send_char_data_pos
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_send_char_data_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _application_intialize->_lcd_8bit_intialize
    _lcd_8bit_intialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   87666
              _application_intialize
                     _loading_screen
                    _welcome_message
 ---------------------------------------------------------------------------------
 (1) _welcome_message                                      3     3      0   32695
                                             22 COMRAM     3     3      0
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string_pos                             5     1      4   21708
                                             18 COMRAM     4     0      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_cursor                                  4     1      3   11645
                                             14 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2    9268
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _loading_screen                                       2     2      0   29118
                                             25 COMRAM     2     2      0
        _lcd_8bit_send_char_data_pos
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string_pos                             5     1      4   14688
                                             20 COMRAM     4     0      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data_pos                          5     1      4   14361
                                             20 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_cursor                                  4     1      3    8070
                                             16 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              6     4      2    5845
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   25852
                 _lcd_4bit_intialize
                 _lcd_8bit_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_intialize                                   4     3      1   11137
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                6     4      2    7365
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (5) _lcd_8bit_send_enable_signal                          2     1      1    2703
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   4     3      1   14712
                                             14 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                3     1      2   10940
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       3     1      2    3293
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_signal                          2     1      1    2855
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    3306
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                 8     6      2    2459
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     255
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _lcd_4bit_intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_intialize
       _gpio_pin_intialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
   _loading_screen
     _lcd_8bit_send_char_data_pos
       _lcd_8bit_send_char_data
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
       _lcd_8bit_set_cursor
         _lcd_8bit_send_command
     _lcd_8bit_send_string_pos
       _lcd_8bit_send_char_data
       _lcd_8bit_set_cursor
   _welcome_message
     _lcd_4bit_send_command
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
         _lcd_send_4bits
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1B      49       1       57.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      39        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Oct 07 01:42:07 2024

                        ?_lcd_send_4bits 0037                                       l31 1420  
                                     l41 191C                                       l36 1978  
                                     l64 1796                                       l90 16B6  
                                     l83 1728                                       l76 133A  
                                     l95 19AE                         ??_loading_screen 0048  
                                    l113 1862                                      l123 1804  
                                    l133 19E4                                      l214 1144  
                                    l128 1A1A                                      l233 1254  
                                    l145 1558                                      l313 1644  
                                    l324 1A98                                      l308 15D0  
                                    l157 14BC                                      l254 18C0  
                                    u700 192E                                      u701 192A  
                                    u630 115A                                      u710 16CC  
                                    u631 1156                                      u711 16C8  
                                    u640 117A                                      u800 1894  
                                    u641 1176                                      u801 1890  
                                    u730 171C                                      u810 18D2  
                                    u731 1718                                      u811 18CE  
                                    u740 1048                                      u724 16FA  
                                    u820 1436                                      u900 174A  
                                    u741 1044                                      u725 16F6  
                                    u821 1432                                      u901 1746  
                                    u750 1068                                      u654 11A0  
                                    u670 17A8                                      u830 165A  
                                    u910 1796                                      u751 1064  
                                    u655 119C                                      u671 17A4  
                                    u831 1656                                      u911 1792  
                                    u664 11F0                                      u680 19F6  
                                    u920 126A                                      u665 11EC  
                                    u681 19F2                                      u921 1266  
                                    u690 19C0                                      u930 12A4  
                                    u850 16AA                                      u691 19BC  
                                    u931 12A0                                      u851 16A6  
                                    u780 112C                                      u764 108E  
                                    u844 1688                                      u860 14D2  
                                    u940 198A                                      u781 1126  
                                    u765 108A                                      u845 1684  
                                    u861 14CE                                      u941 1986  
                                    u774 10E4                                      u790 1874  
                                    u870 1350                                      u950 1816  
                                    u775 10E0                                      u791 1870  
                                    u871 134C                                      u951 1812  
                                    u880 138A                                      u960 1862  
                                    u881 1386                                      u961 185E  
                                    u786 112E                                      u890 173A  
                                    u970 15D0                                      u891 1736  
                                    u971 15CC                                      u980 1620  
                                    u981 161C      __end_of_lcd_4bit_send_enable_signal 1A1C  
            _lcd_4bit_send_enable_signal 19E6                ?_lcd_8bit_send_string_pos 0043  
                                    wreg 0FE8              __end_of_lcd_8bit_set_cursor 155A  
            lcd_send_4bits@_data_command 0038                                     l1510 115A  
                                   l1600 1068                                     l1520 1228  
                                   l1512 117A                                     l1602 1070  
                                   l1610 1142                                     l1514 1182  
                                   l1522 1252                                     l1530 1798  
                                   l1604 10C6                                     l1516 11D2  
                                   l1508 1146                                     l1620 189C  
                                   l1540 19E6                                     l1532 17A8  
                                   l1700 1350                                     l1622 18BE  
                                   l1614 1864                                     l1542 19F6  
                                   l1534 17B0                                     l1710 1378  
                                   l1702 1358                                     l1630 18DA  
                                   l1608 1116                                     l1616 1874  
                                   l1544 19FE                                     l1536 1802  
                                   l1720 13C2                                     l1712 137A  
                                   l1560 19E2                                     l1552 19B0  
                                   l1800 198E                                     l1632 191A  
                                   l1640 143E                                     l1618 1894  
                                   l1546 1A0A                                     l1570 1976  
                                   l1730 13F8                                     l1722 13C8  
                                   l1714 138A                                     l1554 19C0  
                                   l1810 182E                                     l1626 18C2  
                                   l1642 1444                                     l1650 1494  
                                   l1548 1A18                                     l1564 191E  
                                   l1732 1404                                     l1724 13D4  
                                   l1716 139A                                     l1708 136C  
                                   l1556 19C8                                     l1660 1662  
                                   l1812 1844                                     l1804 1806  
                                   l1628 18D2                                     l1644 1458  
                                   l1652 14BA                                     l1636 1422  
                                   l1740 172A                                     l1900 1A74  
                                   l1910 123C                                     l1566 192E  
                                   l1734 1410                                     l1726 13E0  
                                   l1718 13A6                                     l1558 19D4  
                                   l1590 171C                                     l1574 16B8  
                                   l1670 169A                                     l1814 1846  
                                   l1806 1816                                     l1646 146C  
                                   l1638 1436                                     l1750 1778  
                                   l1742 173A                                     l1830 15BE  
                                   l1822 1562                                     l1902 1A78  
                                   l1568 1936                                     l1728 13EC  
                                   l1736 141E                                     l1584 16E0  
                                   l1592 1726                                     l1576 16CC  
                                   l1672 16AA                                     l1656 1646  
                                   l1680 14D2                                     l1808 181A  
                                   l1648 1480                                     l1752 177A  
                                   l1744 174A                                     l1832 15C0  
                                   l1824 158A                                     l1816 155A  
                                   l1904 1A7C                                     l1586 170A  
                                   l1578 16D4                                     l1770 12A4  
                                   l1754 1256                                     l1666 166E  
                                   l1674 16B4                                     l1658 165A  
                                   l1690 151C                                     l1682 14DA  
                                   l1850 1610                                     l1834 15D2  
                                   l1746 174E                                     l1826 15A2  
                                   l1596 1034                                     l1588 170C  
                                   l1780 12EE                                     l1772 12B4  
                                   l1764 1286                                     l1756 126A  
                                   l1860 1A90                                     l1668 1698  
                                   l1684 14E0                                     l1692 1530  
                                   l1852 1620                                     l1844 15EA  
                                   l1836 15E6                                     l1748 1762  
                                   l1828 15AE                                     l1598 1048  
                                   l1790 132A                                     l1782 12FA  
                                   l1774 12C0                                     l1766 1292  
                                   l1758 1272                                     l1686 14F4  
                                   l1694 1556                                     l1678 14BE  
                                   l1854 1634                                     l1846 15FE  
                                   l1838 15E6                                     l1784 1306  
                                   l1776 12DC                                     l1768 1294  
                                   l1792 1338                                     l1856 1A88  
                                   l1688 1508                                     l1848 160E  
                                   l1698 133C                                     l1786 1312  
                                   l1778 12E2                                     l1858 1A88  
                                   l1788 131E                                     l1796 197A  
                                   l1798 198A                                     l1898 1A74  
                                   STR_1 1021                                     STR_2 1001  
                                   STR_3 102B                                     STR_4 1012  
                                   u1107 12C6                                     u1117 12DE  
                                   u1127 1390       lcd_8bit_send_command@l_pin_counter 003E  
                                   u1137 13AC                                     u1057 1594  
                                   u1147 13C4                                     u1067 15B4  
                                   u1077 1604                                     _LATA 0F89  
                                   _LATB 0F8A                                     u1087 163A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   u1097 12AA                                     _LATE 0F8D  
                ??_application_intialize 0043            ??_lcd_4bit_send_enable_signal 0038  
                                   _lcd1 0029                                     _lcd2 001F  
                                   _main 1A74                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000            __end_of_lcd_8bit_send_command 172A  
                           ___param_bank 0000                    _lcd_4bit_send_command 191E  
                   _gpio_pin_write_logic 1146           lcd_4bit_send_string_pos@column 0043  
                  lcd_4bit_intialize@lcd 003D                    lcd_4bit_intialize@ret 0040  
                                  ?_main 002F                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                lcd_4bit_set_cursor@column 003F  
               ?_lcd_8bit_send_char_data 0039      __end_of_lcd_8bit_send_char_data_pos 19B0  
            _lcd_8bit_send_char_data_pos 197A                                    tablat 0FF5  
                                  status 0FD8            ??_lcd_8bit_send_char_data_pos 0047  
                        __initialization 1A4A                             __end_of_main 1A88  
                  ?_gpio_pin_write_logic 002F                   lcd_8bit_set_cursor@lcd 003F  
                 lcd_8bit_set_cursor@ret 0042                   lcd_8bit_set_cursor@row 0040  
                          _lat_registers 000B                                   ??_main 004A  
                          __activetblptr 0002         __end_of_lcd_4bit_send_string_pos 1798  
                 ?_lcd_4bit_send_command 003A                                   isa$std 0001  
         lcd_8bit_send_char_data_pos@lcd 0043           lcd_8bit_send_char_data_pos@ret 0047  
            lcd_8bit_send_string_pos@lcd 0043           lcd_8bit_send_char_data_pos@row 0044  
            lcd_8bit_send_string_pos@row 0044              lcd_8bit_send_string_pos@str 0046  
gpio_pin_direction_intialize@_pin_config 002F                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 1A6A  
                          ___rparam_used 0001                         ??_lcd_send_4bits 0039  
                _lcd_4bit_send_char_data 18C2                   ??_gpio_pin_write_logic 0031  
                         __pcstackCOMRAM 002F                 lcd_4bit_send_command@lcd 003A  
               lcd_4bit_send_command@ret 003C                       _lcd_8bit_intialize 1256  
                    ?_lcd_8bit_intialize 003F            __end_of_application_intialize 1A9A  
                   ??_lcd_8bit_intialize 0040                ?_lcd_4bit_send_string_pos 0041  
    __end_of_lcd_8bit_send_enable_signal 19E6              _lcd_8bit_send_enable_signal 19B0  
         lcd_8bit_send_enable_signal@lcd 0037           lcd_8bit_send_enable_signal@ret 0038  
                         _tris_registers 0015                ??_lcd_4bit_send_char_data 003C  
          ??_lcd_8bit_send_enable_signal 0038                                  __Hparam 0000  
                                __Lparam 0000                    _lcd_8bit_send_command 16B8  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 18C2  
                                __pcinit 1A4A                                  __ramtop 1000  
               _lcd_8bit_send_string_pos 1806                                  __ptext0 1A74  
                                __ptext1 155A                                  __ptext2 172A  
                                __ptext3 1422                                  __ptext4 18C2  
                                __ptext5 15D2                                  __ptext6 1806  
                                __ptext7 197A                                  __ptext8 14BE  
                                __ptext9 1646          lcd_8bit_send_char_data_pos@data 0046  
  lcd_8bit_intialize@l_data_pins_counter 0041    lcd_4bit_intialize@l_data_pins_counter 003F  
                   end_of_initialization 1A6A                        lcd_send_4bits@lcd 0037  
                      lcd_send_4bits@ret 0039                        ??_welcome_message 0045  
                          __Lmediumconst 0000               __end_of_lcd_4bit_intialize 1422  
                ??_lcd_4bit_send_command 003C                    gpio_pin_intialize@ret 0039  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
        __end_of_lcd_4bit_send_char_data 191E            gpio_pin_intialize@_pin_config 0037  
             lcd_4bit_send_char_data@lcd 003A               lcd_4bit_send_char_data@ret 003C  
   __end_of_gpio_pin_direction_intialize 1146             _gpio_pin_direction_intialize 1034  
                    _lcd_4bit_set_cursor 1422                   ?_lcd_8bit_send_command 0039  
            lcd_4bit_send_string_pos@lcd 0041              lcd_4bit_send_string_pos@row 0042  
            lcd_4bit_send_string_pos@str 0044           lcd_8bit_send_string_pos@column 0045  
                          __pidataCOMRAM 1A1C                      start_initialization 1A4A  
           ?_lcd_4bit_send_enable_signal 0037                     ?_lcd_4bit_set_cursor 003D  
          ?_gpio_pin_direction_intialize 002F                  _lcd_8bit_send_char_data 1646  
                    _lcd_8bit_set_cursor 14BE             lcd_4bit_send_command@command 003B  
               lcd_8bit_send_command@lcd 0039                 lcd_8bit_send_command@ret 003D  
                  ??_lcd_4bit_set_cursor 0040                           _loading_screen 15D2  
            welcome_message@lcd1_counter 0047             ?_lcd_8bit_send_char_data_pos 0043  
                   ?_lcd_8bit_set_cursor 003F          gpio_pin_direction_intialize@ret 0035  
             ??_lcd_8bit_send_string_pos 0047                    _application_intialize 1A88  
            lcd_8bit_send_char_data@data 003A          gpio_pin_write_logic@_pin_config 002F  
              gpio_pin_write_logic@logic 0030                          _welcome_message 155A  
                            __smallconst 1000                   __end_of_loading_screen 1646  
                     _gpio_pin_intialize 1864                    ??_lcd_8bit_set_cursor 0042  
         ??_gpio_pin_direction_intialize 0030                ??_lcd_8bit_send_char_data 003B  
                    ?_gpio_pin_intialize 0037            __end_of_lcd_4bit_send_command 197A  
   lcd_8bit_send_char_data@l_pin_counter 003E                    lcd_8bit_intialize@lcd 003F  
           loading_screen@l_lcd2_counter 0049                       _lcd_4bit_intialize 133C  
                  lcd_8bit_intialize@ret 0042                 _lcd_4bit_send_string_pos 172A  
                   ??_gpio_pin_intialize 0038        lcd_8bit_send_char_data_pos@column 0045  
                        ?_loading_screen 002F                      ?_lcd_4bit_intialize 003D  
              lcd_8bit_set_cursor@column 0041                  gpio_pin_write_logic@ret 0036  
               ?_lcd_4bit_send_char_data 003A                                copy_data0 1A5E  
                ??_lcd_8bit_send_command 003B                   ?_application_intialize 002F  
                   ??_lcd_4bit_intialize 003E                                 __Hrparam 0000  
                               __Lrparam 0000                  __end_of_welcome_message 15D2  
                 lcd_4bit_set_cursor@lcd 003D                   lcd_4bit_set_cursor@ret 0040  
                 lcd_4bit_set_cursor@row 003E          __end_of_lcd_8bit_send_char_data 16B8  
             lcd_8bit_send_char_data@lcd 0039               lcd_8bit_send_char_data@ret 003D  
                               __ptext10 1A88                                 __ptext11 1256  
                               __ptext20 1034                                 __ptext12 16B8  
                               __ptext13 19B0                                 __ptext14 133C  
                               __ptext15 191E                                 __ptext16 1798  
                               __ptext17 19E6                                 __ptext18 1864  
                               __ptext19 1146         __end_of_lcd_8bit_send_string_pos 1864  
                               isa$xinst 0000                           _lcd_send_4bits 1798  
           __end_of_gpio_pin_write_logic 1256             ?_lcd_8bit_send_enable_signal 0037  
         lcd_4bit_send_enable_signal@lcd 0037           lcd_4bit_send_enable_signal@ret 0038  
                       ?_welcome_message 002F                   __end_of_lcd_send_4bits 1806  
            __end_of_lcd_4bit_set_cursor 14BE                           _port_registers 0001  
           lcd_8bit_send_command@command 003A              lcd_4bit_send_char_data@data 003B  
             __end_of_lcd_8bit_intialize 133C               ??_lcd_4bit_send_string_pos 0045  
