

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Oct 07 01:37:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 17/10/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4620 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   001A3E                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _port_registers
    73   001A3E  80                 	db	128
    74   001A3F  0F                 	db	15
    75   001A40  81                 	db	129
    76   001A41  0F                 	db	15
    77   001A42  82                 	db	130
    78   001A43  0F                 	db	15
    79   001A44  83                 	db	131
    80   001A45  0F                 	db	15
    81   001A46  84                 	db	132
    82   001A47  0F                 	db	15
    83                           
    84                           ;initializer for _lat_registers
    85   001A48  89                 	db	137
    86   001A49  0F                 	db	15
    87   001A4A  8A                 	db	138
    88   001A4B  0F                 	db	15
    89   001A4C  8B                 	db	139
    90   001A4D  0F                 	db	15
    91   001A4E  8C                 	db	140
    92   001A4F  0F                 	db	15
    93   001A50  8D                 	db	141
    94   001A51  0F                 	db	15
    95                           
    96                           ;initializer for _tris_registers
    97   001A52  92                 	db	146
    98   001A53  0F                 	db	15
    99   001A54  93                 	db	147
   100   001A55  0F                 	db	15
   101   001A56  94                 	db	148
   102   001A57  0F                 	db	15
   103   001A58  95                 	db	149
   104   001A59  0F                 	db	15
   105   001A5A  96                 	db	150
   106   001A5B  0F                 	db	15
   107                           
   108                           ;initializer for _lcd2
   109   001A5C  32                 	db	50
   110   001A5D  3A                 	db	58
   111   001A5E  03                 	db	3
   112   001A5F  0B                 	db	11
   113   001A60  13                 	db	19
   114   001A61  1B                 	db	27
   115   001A62  23                 	db	35
   116   001A63  2B                 	db	43
   117   001A64  33                 	db	51
   118   001A65  3B                 	db	59
   119                           
   120                           ;initializer for _lcd1
   121   001A66  02                 	db	2
   122   001A67  0A                 	db	10
   123   001A68  12                 	db	18
   124   001A69  1A                 	db	26
   125   001A6A  22                 	db	34
   126   001A6B  2A                 	db	42
   127   000000                     _PORTE	set	3972
   128   000000                     _PORTD	set	3971
   129   000000                     _PORTC	set	3970
   130   000000                     _PORTB	set	3969
   131   000000                     _PORTA	set	3968
   132   000000                     _LATA	set	3977
   133   000000                     _TRISA	set	3986
   134   000000                     _TRISE	set	3990
   135   000000                     _TRISD	set	3989
   136   000000                     _TRISC	set	3988
   137   000000                     _TRISB	set	3987
   138   000000                     _LATE	set	3981
   139   000000                     _LATD	set	3980
   140   000000                     _LATC	set	3979
   141   000000                     _LATB	set	3978
   142                           
   143                           	psect	smallconst
   144   001000                     __psmallconst:
   145                           	callstack 0
   146   001000  00                 	db	0
   147   001001                     STR_2:
   148   001001  45                 	db	69	;'E'
   149   001002  6D                 	db	109	;'m'
   150   001003  62                 	db	98	;'b'
   151   001004  65                 	db	101	;'e'
   152   001005  64                 	db	100	;'d'
   153   001006  64                 	db	100	;'d'
   154   001007  65                 	db	101	;'e'
   155   001008  64                 	db	100	;'d'
   156   001009  20                 	db	32
   157   00100A  64                 	db	100	;'d'
   158   00100B  69                 	db	105	;'i'
   159   00100C  70                 	db	112	;'p'
   160   00100D  6C                 	db	108	;'l'
   161   00100E  6F                 	db	111	;'o'
   162   00100F  6D                 	db	109	;'m'
   163   001010  61                 	db	97	;'a'
   164   001011  00                 	db	0
   165   001012                     STR_4:
   166   001012  20                 	db	32
   167   001013  20                 	db	32
   168   001014  20                 	db	32
   169   001015  20                 	db	32
   170   001016  20                 	db	32
   171   001017  20                 	db	32
   172   001018  20                 	db	32
   173   001019  20                 	db	32
   174   00101A  20                 	db	32
   175   00101B  20                 	db	32
   176   00101C  20                 	db	32
   177   00101D  20                 	db	32
   178   00101E  00                 	db	0
   179   00101F                     STR_3:
   180   00101F  48                 	db	72	;'H'
   181   001020  65                 	db	101	;'e'
   182   001021  6C                 	db	108	;'l'
   183   001022  6C                 	db	108	;'l'
   184   001023  6F                 	db	111	;'o'
   185   001024  20                 	db	32
   186   001025  41                 	db	65	;'A'
   187   001026  6C                 	db	108	;'l'
   188   001027  6C                 	db	108	;'l'
   189   001028  00                 	db	0
   190   001029                     STR_1:
   191   001029  4C                 	db	76	;'L'
   192   00102A  6F                 	db	111	;'o'
   193   00102B  61                 	db	97	;'a'
   194   00102C  64                 	db	100	;'d'
   195   00102D  69                 	db	105	;'i'
   196   00102E  6E                 	db	110	;'n'
   197   00102F  67                 	db	103	;'g'
   198   001030  00                 	db	0
   199   001031  00                 	db	0	; dummy byte at the end
   200   000000                     
   201                           ; #config settings
   202                           
   203                           	psect	cinit
   204   001A6C                     __pcinit:
   205                           	callstack 0
   206   001A6C                     start_initialization:
   207                           	callstack 0
   208   001A6C                     __initialization:
   209                           	callstack 0
   210                           
   211                           ; Initialize objects allocated to COMRAM (46 bytes)
   212                           ; load TBLPTR registers with __pidataCOMRAM
   213   001A6C  0E3E               	movlw	low __pidataCOMRAM
   214   001A6E  6EF6               	movwf	tblptrl,c
   215   001A70  0E1A               	movlw	high __pidataCOMRAM
   216   001A72  6EF7               	movwf	tblptrh,c
   217   001A74  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   218   001A76  6EF8               	movwf	tblptru,c
   219   001A78  EE00  F001         	lfsr	0,__pdataCOMRAM
   220   001A7C  EE10 F02E          	lfsr	1,46
   221   001A80                     copy_data0:
   222   001A80  0009               	tblrd		*+
   223   001A82  CFF5 FFEE          	movff	tablat,postinc0
   224   001A86  50E5               	movf	postdec1,w,c
   225   001A88  50E1               	movf	fsr1l,w,c
   226   001A8A  E1FA               	bnz	copy_data0
   227   001A8C                     end_of_initialization:
   228                           	callstack 0
   229   001A8C                     __end_of__initialization:
   230                           	callstack 0
   231   001A8C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   232   001A8E  6EF8               	movwf	tblptru,c
   233   001A90  0100               	movlb	0
   234   001A92  EF2A  F009         	goto	_main	;jump to C main() function
   235                           
   236                           	psect	dataCOMRAM
   237   000001                     __pdataCOMRAM:
   238                           	callstack 0
   239   000001                     _port_registers:
   240                           	callstack 0
   241   000001                     	ds	10
   242   00000B                     _lat_registers:
   243                           	callstack 0
   244   00000B                     	ds	10
   245   000015                     _tris_registers:
   246                           	callstack 0
   247   000015                     	ds	10
   248   00001F                     _lcd2:
   249                           	callstack 0
   250   00001F                     	ds	10
   251   000029                     _lcd1:
   252                           	callstack 0
   253   000029                     	ds	6
   254                           
   255                           	psect	cstackCOMRAM
   256   00002F                     __pcstackCOMRAM:
   257                           	callstack 0
   258   00002F                     gpio_pin_direction_intialize@_pin_config:
   259                           	callstack 0
   260   00002F                     gpio_pin_write_logic@_pin_config:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x0
   264   00002F                     	ds	1
   265   000030                     ??_gpio_pin_direction_intialize:
   266   000030                     gpio_pin_write_logic@logic:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x1
   270   000030                     	ds	1
   271   000031                     ??_gpio_pin_write_logic:
   272                           
   273                           ; 1 bytes @ 0x2
   274   000031                     	ds	4
   275   000035                     gpio_pin_direction_intialize@ret:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x6
   279   000035                     	ds	1
   280   000036                     gpio_pin_write_logic@ret:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x7
   284   000036                     	ds	1
   285   000037                     lcd_send_4bits@lcd:
   286                           	callstack 0
   287   000037                     lcd_4bit_send_enable_signal@lcd:
   288                           	callstack 0
   289   000037                     lcd_8bit_send_enable_signal@lcd:
   290                           	callstack 0
   291   000037                     gpio_pin_intialize@_pin_config:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x8
   295   000037                     	ds	1
   296   000038                     ??_gpio_pin_intialize:
   297   000038                     lcd_send_4bits@_data_command:
   298                           	callstack 0
   299   000038                     lcd_4bit_send_enable_signal@ret:
   300                           	callstack 0
   301   000038                     lcd_8bit_send_enable_signal@ret:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x9
   305   000038                     	ds	1
   306   000039                     lcd_8bit_send_command@lcd:
   307                           	callstack 0
   308   000039                     lcd_8bit_send_char_data@lcd:
   309                           	callstack 0
   310   000039                     lcd_send_4bits@ret:
   311                           	callstack 0
   312   000039                     gpio_pin_intialize@ret:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0xA
   316   000039                     	ds	1
   317   00003A                     lcd_4bit_send_command@lcd:
   318                           	callstack 0
   319   00003A                     lcd_4bit_send_char_data@lcd:
   320                           	callstack 0
   321   00003A                     lcd_8bit_send_command@command:
   322                           	callstack 0
   323   00003A                     lcd_8bit_send_char_data@data:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0xB
   327   00003A                     	ds	1
   328   00003B                     ??_lcd_8bit_send_command:
   329   00003B                     ??_lcd_8bit_send_char_data:
   330   00003B                     lcd_4bit_send_command@command:
   331                           	callstack 0
   332   00003B                     lcd_4bit_send_char_data@data:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0xC
   336   00003B                     	ds	1
   337   00003C                     lcd_4bit_send_command@ret:
   338                           	callstack 0
   339   00003C                     lcd_4bit_send_char_data@ret:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0xD
   343   00003C                     	ds	1
   344   00003D                     lcd_4bit_intialize@lcd:
   345                           	callstack 0
   346   00003D                     lcd_8bit_send_command@ret:
   347                           	callstack 0
   348   00003D                     lcd_8bit_send_char_data@ret:
   349                           	callstack 0
   350   00003D                     lcd_4bit_set_cursor@lcd:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0xE
   354   00003D                     	ds	1
   355   00003E                     ??_lcd_4bit_intialize:
   356   00003E                     lcd_8bit_send_command@l_pin_counter:
   357                           	callstack 0
   358   00003E                     lcd_8bit_send_char_data@l_pin_counter:
   359                           	callstack 0
   360   00003E                     lcd_4bit_set_cursor@row:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xF
   364   00003E                     	ds	1
   365   00003F                     lcd_4bit_intialize@l_data_pins_counter:
   366                           	callstack 0
   367   00003F                     lcd_8bit_intialize@lcd:
   368                           	callstack 0
   369   00003F                     lcd_8bit_set_cursor@lcd:
   370                           	callstack 0
   371   00003F                     lcd_4bit_set_cursor@column:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x10
   375   00003F                     	ds	1
   376   000040                     ??_lcd_8bit_intialize:
   377   000040                     lcd_4bit_intialize@ret:
   378                           	callstack 0
   379   000040                     lcd_8bit_set_cursor@row:
   380                           	callstack 0
   381   000040                     lcd_4bit_set_cursor@ret:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x11
   385   000040                     	ds	1
   386   000041                     lcd_4bit_send_char_data_pos@lcd:
   387                           	callstack 0
   388   000041                     lcd_4bit_send_string_pos@lcd:
   389                           	callstack 0
   390   000041                     lcd_8bit_intialize@l_data_pins_counter:
   391                           	callstack 0
   392   000041                     lcd_8bit_set_cursor@column:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x12
   396   000041                     	ds	1
   397   000042                     lcd_4bit_send_char_data_pos@row:
   398                           	callstack 0
   399   000042                     lcd_4bit_send_string_pos@row:
   400                           	callstack 0
   401   000042                     lcd_8bit_intialize@ret:
   402                           	callstack 0
   403   000042                     lcd_8bit_set_cursor@ret:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x13
   407   000042                     	ds	1
   408   000043                     lcd_4bit_send_char_data_pos@column:
   409                           	callstack 0
   410   000043                     lcd_4bit_send_string_pos@column:
   411                           	callstack 0
   412   000043                     lcd_8bit_send_string_pos@lcd:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x14
   416   000043                     	ds	1
   417   000044                     lcd_4bit_send_char_data_pos@data:
   418                           	callstack 0
   419   000044                     lcd_4bit_send_string_pos@str:
   420                           	callstack 0
   421   000044                     lcd_8bit_send_string_pos@row:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x15
   425   000044                     	ds	1
   426   000045                     lcd_4bit_send_char_data_pos@ret:
   427                           	callstack 0
   428   000045                     lcd_4bit_send_string_pos@ret:
   429                           	callstack 0
   430   000045                     lcd_8bit_send_string_pos@column:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x16
   434   000045                     	ds	1
   435   000046                     lcd_8bit_send_string_pos@str:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x17
   439   000046                     	ds	1
   440   000047                     lcd_8bit_send_string_pos@ret:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x18
   444   000047                     	ds	1
   445   000048                     ??_main:
   446                           
   447                           ; 1 bytes @ 0x19
   448   000048                     	ds	2
   449   00004A                     main@lcd1_counter:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x1B
   453   00004A                     	ds	1
   454                           
   455 ;;
   456 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   457 ;;
   458 ;; *************** function _main *****************
   459 ;; Defined at:
   460 ;;		line 13 in file "application.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  lcd1_counter    1   27[COMRAM] unsigned char 
   465 ;;  ret             1    0        unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  2  305[None  ] int 
   468 ;; Registers used:
   469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:        3 bytes
   480 ;; Hardware stack levels required when called: 5
   481 ;; This function calls:
   482 ;;		_application_intialize
   483 ;;		_lcd_4bit_send_char_data_pos
   484 ;;		_lcd_4bit_send_string_pos
   485 ;;		_lcd_8bit_send_string_pos
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text0
   492   001254                     __ptext0:
   493                           	callstack 0
   494   001254                     _main:
   495                           	callstack 26
   496   001254                     
   497                           ;application.c: 15: uint8 lcd1_counter=0;
   498   001254  0E00               	movlw	0
   499   001256  6E4A               	movwf	main@lcd1_counter^0,c
   500   001258                     
   501                           ;application.c: 16: application_intialize();
   502   001258  EC4B  F00D         	call	_application_intialize	;wreg free
   503   00125C  0E1F               	movlw	low _lcd2
   504   00125E  6E43               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   505   001260  0E01               	movlw	1
   506   001262  6E44               	movwf	lcd_8bit_send_string_pos@row^0,c
   507   001264  0E01               	movlw	1
   508   001266  6E45               	movwf	lcd_8bit_send_string_pos@column^0,c
   509   001268  0E29               	movlw	low STR_1
   510   00126A  6E46               	movwf	lcd_8bit_send_string_pos@str^0,c
   511   00126C  EC0E  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
   512   001270  0E1F               	movlw	low _lcd2
   513   001272  6E43               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   514   001274  0E01               	movlw	1
   515   001276  6E44               	movwf	lcd_8bit_send_string_pos@row^0,c
   516   001278  0E01               	movlw	1
   517   00127A  6E45               	movwf	lcd_8bit_send_string_pos@column^0,c
   518   00127C  0E01               	movlw	low STR_2
   519   00127E  6E46               	movwf	lcd_8bit_send_string_pos@str^0,c
   520   001280  EC0E  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
   521   001284                     l1872:
   522                           
   523                           ;application.c: 20:     for(lcd1_counter=5;lcd1_counter<=7;++lcd1_counter){
   524   001284  0E05               	movlw	5
   525   001286  6E4A               	movwf	main@lcd1_counter^0,c
   526   001288                     l1878:
   527   001288  0E29               	movlw	low _lcd1
   528   00128A  6E41               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   529   00128C  0E01               	movlw	1
   530   00128E  6E42               	movwf	lcd_4bit_send_string_pos@row^0,c
   531   001290  C04A  F043         	movff	main@lcd1_counter,lcd_4bit_send_string_pos@column
   532   001294  0E1F               	movlw	low STR_3
   533   001296  6E44               	movwf	lcd_4bit_send_string_pos@str^0,c
   534   001298  EC29  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   535   00129C                     
   536                           ;application.c: 22:         _delay((unsigned long)((250)*((uint64)3200000/4000.0)));
   537   00129C  0E02               	movlw	2
   538   00129E  6E49               	movwf	(??_main+1)^0,c
   539   0012A0  0E04               	movlw	4
   540   0012A2  6E48               	movwf	??_main^0,c
   541   0012A4  0EBA               	movlw	186
   542   0012A6                     u1057:
   543   0012A6  2EE8               	decfsz	wreg,f,c
   544   0012A8  D7FE               	bra	u1057
   545   0012AA  2E48               	decfsz	??_main^0,f,c
   546   0012AC  D7FC               	bra	u1057
   547   0012AE  2E49               	decfsz	(??_main+1)^0,f,c
   548   0012B0  D7FA               	bra	u1057
   549   0012B2  D000               	nop2	
   550   0012B4  0E29               	movlw	low _lcd1
   551   0012B6  6E41               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
   552   0012B8  0E01               	movlw	1
   553   0012BA  6E42               	movwf	lcd_4bit_send_char_data_pos@row^0,c
   554   0012BC  C04A  F043         	movff	main@lcd1_counter,lcd_4bit_send_char_data_pos@column
   555   0012C0  0E20               	movlw	32
   556   0012C2  6E44               	movwf	lcd_4bit_send_char_data_pos@data^0,c
   557   0012C4  ECCB  F00C         	call	_lcd_4bit_send_char_data_pos	;wreg free
   558   0012C8                     
   559                           ;application.c: 24:     }
   560   0012C8  2A4A               	incf	main@lcd1_counter^0,f,c
   561   0012CA  0E07               	movlw	7
   562   0012CC  644A               	cpfsgt	main@lcd1_counter^0,c
   563   0012CE  EF6B  F009         	goto	u1031
   564   0012D2  EF6D  F009         	goto	u1030
   565   0012D6                     u1031:
   566   0012D6  EF44  F009         	goto	l1878
   567   0012DA                     u1030:
   568   0012DA  0E29               	movlw	low _lcd1
   569   0012DC  6E41               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   570   0012DE  0E01               	movlw	1
   571   0012E0  6E42               	movwf	lcd_4bit_send_string_pos@row^0,c
   572   0012E2  0E05               	movlw	5
   573   0012E4  6E43               	movwf	lcd_4bit_send_string_pos@column^0,c
   574   0012E6  0E12               	movlw	low STR_4
   575   0012E8  6E44               	movwf	lcd_4bit_send_string_pos@str^0,c
   576   0012EA  EC29  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   577   0012EE                     
   578                           ;application.c: 26:      for(lcd1_counter=7;lcd1_counter>=5;--lcd1_counter){
   579   0012EE  0E07               	movlw	7
   580   0012F0  6E4A               	movwf	main@lcd1_counter^0,c
   581   0012F2                     l1896:
   582   0012F2  0E29               	movlw	low _lcd1
   583   0012F4  6E41               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   584   0012F6  0E01               	movlw	1
   585   0012F8  6E42               	movwf	lcd_4bit_send_string_pos@row^0,c
   586   0012FA  C04A  F043         	movff	main@lcd1_counter,lcd_4bit_send_string_pos@column
   587   0012FE  0E1F               	movlw	low STR_3
   588   001300  6E44               	movwf	lcd_4bit_send_string_pos@str^0,c
   589   001302  EC29  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   590   001306                     
   591                           ;application.c: 28:         _delay((unsigned long)((250)*((uint64)3200000/4000.0)));
   592   001306  0E02               	movlw	2
   593   001308  6E49               	movwf	(??_main+1)^0,c
   594   00130A  0E04               	movlw	4
   595   00130C  6E48               	movwf	??_main^0,c
   596   00130E  0EBA               	movlw	186
   597   001310                     u1067:
   598   001310  2EE8               	decfsz	wreg,f,c
   599   001312  D7FE               	bra	u1067
   600   001314  2E48               	decfsz	??_main^0,f,c
   601   001316  D7FC               	bra	u1067
   602   001318  2E49               	decfsz	(??_main+1)^0,f,c
   603   00131A  D7FA               	bra	u1067
   604   00131C  D000               	nop2	
   605   00131E  0E29               	movlw	low _lcd1
   606   001320  6E41               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
   607   001322  0E01               	movlw	1
   608   001324  6E42               	movwf	lcd_4bit_send_char_data_pos@row^0,c
   609   001326  504A               	movf	main@lcd1_counter^0,w,c
   610   001328  0F08               	addlw	8
   611   00132A  6E43               	movwf	lcd_4bit_send_char_data_pos@column^0,c
   612   00132C  0E20               	movlw	32
   613   00132E  6E44               	movwf	lcd_4bit_send_char_data_pos@data^0,c
   614   001330  ECCB  F00C         	call	_lcd_4bit_send_char_data_pos	;wreg free
   615   001334                     
   616                           ;application.c: 30:     }
   617   001334  064A               	decf	main@lcd1_counter^0,f,c
   618   001336  0E05               	movlw	5
   619   001338  604A               	cpfslt	main@lcd1_counter^0,c
   620   00133A  EFA1  F009         	goto	u1041
   621   00133E  EFA3  F009         	goto	u1040
   622   001342                     u1041:
   623   001342  EF79  F009         	goto	l1896
   624   001346                     u1040:
   625   001346  EF42  F009         	goto	l1872
   626   00134A  EF00  F000         	goto	start
   627   00134E                     __end_of_main:
   628                           	callstack 0
   629                           
   630 ;; *************** function _lcd_8bit_send_string_pos *****************
   631 ;; Defined at:
   632 ;;		line 197 in file "ECU_Layer/lcd/lcd.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  lcd             1   20[COMRAM] PTR const struct .
   635 ;;		 -> lcd2(10), 
   636 ;;  row             1   21[COMRAM] unsigned char 
   637 ;;  column          1   22[COMRAM] unsigned char 
   638 ;;  str             1   23[COMRAM] PTR unsigned char 
   639 ;;		 -> STR_2(17), STR_1(8), 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  ret             1   24[COMRAM] unsigned char 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      unsigned char 
   644 ;; Registers used:
   645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;Total ram usage:        5 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 4
   658 ;; This function calls:
   659 ;;		_lcd_8bit_send_char_data
   660 ;;		_lcd_8bit_set_cursor
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text1
   667   00181C                     __ptext1:
   668                           	callstack 0
   669   00181C                     _lcd_8bit_send_string_pos:
   670                           	callstack 26
   671   00181C                     
   672                           ;ECU_Layer/lcd/lcd.c: 199:      if(((void*)0)==lcd){
   673   00181C  5043               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   674   00181E  A4D8               	btfss	status,2,c
   675   001820  EF14  F00C         	goto	u951
   676   001824  EF16  F00C         	goto	u950
   677   001828                     u951:
   678   001828  EF18  F00C         	goto	l1810
   679   00182C                     u950:
   680   00182C                     
   681                           ;ECU_Layer/lcd/lcd.c: 201:      }else{
   682   00182C  EF3F  F00C         	goto	l113
   683   001830                     l1810:
   684                           
   685                           ;ECU_Layer/lcd/lcd.c: 202:             ret = lcd_8bit_set_cursor(lcd,row,column);
   686   001830  C043  F03F         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
   687   001834  C044  F040         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   688   001838  C045  F041         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
   689   00183C  EC8D  F00A         	call	_lcd_8bit_set_cursor	;wreg free
   690   001840  6E47               	movwf	lcd_8bit_send_string_pos@ret^0,c
   691                           
   692                           ;ECU_Layer/lcd/lcd.c: 203:             while(*str){
   693   001842  EF30  F00C         	goto	l1816
   694   001846                     l1812:
   695                           
   696                           ;ECU_Layer/lcd/lcd.c: 204:              ret = lcd_8bit_send_char_data(lcd,*str);
   697   001846  C043  F039         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
   698   00184A  C046  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   699   00184E                     	if	1	;There is more than 1 active tblptr byte
   700   00184E  0E10               	movlw	high __smallconst
   701   001850  6EF7               	movwf	tblptrh,c
   702   001852                     	endif
   703   001852                     	if	0	;tblptru may be non-zero
   704   001852                     	endif
   705   001852                     	if	0	;tblptru may be non-zero
   706   001852                     	endif
   707   001852  0008               	tblrd		*
   708   001854  CFF5 F03A          	movff	tablat,lcd_8bit_send_char_data@data
   709   001858  EC65  F00B         	call	_lcd_8bit_send_char_data	;wreg free
   710   00185C  6E47               	movwf	lcd_8bit_send_string_pos@ret^0,c
   711   00185E                     
   712                           ;ECU_Layer/lcd/lcd.c: 205:              str++;
   713   00185E  2A46               	incf	lcd_8bit_send_string_pos@str^0,f,c
   714   001860                     l1816:
   715                           
   716                           ;ECU_Layer/lcd/lcd.c: 203:             while(*str){
   717   001860  C046  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   718   001864                     	if	1	;There is more than 1 active tblptr byte
   719   001864  0E10               	movlw	high __smallconst
   720   001866  6EF7               	movwf	tblptrh,c
   721   001868                     	endif
   722   001868                     	if	0	;tblptru may be non-zero
   723   001868                     	endif
   724   001868                     	if	0	;tblptru may be non-zero
   725   001868                     	endif
   726   001868  0008               	tblrd		*
   727   00186A  50F5               	movf	tablat,w,c
   728   00186C  0900               	iorlw	0
   729   00186E  A4D8               	btfss	status,2,c
   730   001870  EF3C  F00C         	goto	u961
   731   001874  EF3E  F00C         	goto	u960
   732   001878                     u961:
   733   001878  EF23  F00C         	goto	l1812
   734   00187C                     u960:
   735   00187C                     
   736                           ;ECU_Layer/lcd/lcd.c: 208:     return ret;
   737   00187C  5047               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   738   00187E                     l113:
   739   00187E  0012               	return		;funcret
   740   001880                     __end_of_lcd_8bit_send_string_pos:
   741                           	callstack 0
   742                           
   743 ;; *************** function _lcd_8bit_set_cursor *****************
   744 ;; Defined at:
   745 ;;		line 256 in file "ECU_Layer/lcd/lcd.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  lcd             1   16[COMRAM] PTR const struct .
   748 ;;		 -> lcd2(10), 
   749 ;;  row             1   17[COMRAM] unsigned char 
   750 ;;  column          1   18[COMRAM] unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  ret             1   19[COMRAM] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      unsigned char 
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:        4 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 3
   769 ;; This function calls:
   770 ;;		_lcd_8bit_send_command
   771 ;; This function is called by:
   772 ;;		_lcd_8bit_send_string_pos
   773 ;;		_lcd_8bit_send_char_data_pos
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text2
   778   00151A                     __ptext2:
   779                           	callstack 0
   780   00151A                     _lcd_8bit_set_cursor:
   781                           	callstack 26
   782   00151A                     
   783                           ;ECU_Layer/lcd/lcd.c: 257:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   784   00151A  0E01               	movlw	1
   785   00151C  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
   786                           
   787                           ;ECU_Layer/lcd/lcd.c: 258:      if(((void*)0)==lcd){
   788   00151E  503F               	movf	lcd_8bit_set_cursor@lcd^0,w,c
   789   001520  A4D8               	btfss	status,2,c
   790   001522  EF95  F00A         	goto	u901
   791   001526  EF97  F00A         	goto	u900
   792   00152A                     u901:
   793   00152A  EF9B  F00A         	goto	l1762
   794   00152E                     u900:
   795   00152E                     
   796                           ;ECU_Layer/lcd/lcd.c: 259:             ret = (Std_ReturnType)0x00;
   797   00152E  0E00               	movlw	0
   798   001530  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
   799                           
   800                           ;ECU_Layer/lcd/lcd.c: 260:      }else{
   801   001532  EFD9  F00A         	goto	l1774
   802   001536                     l1762:
   803                           
   804                           ;ECU_Layer/lcd/lcd.c: 261:          column--;
   805   001536  0641               	decf	lcd_8bit_set_cursor@column^0,f,c
   806                           
   807                           ;ECU_Layer/lcd/lcd.c: 262:          switch(row){
   808   001538  EFC6  F00A         	goto	l1772
   809   00153C                     l1764:
   810   00153C  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   811   001540  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   812   001542  0F80               	addlw	128
   813   001544  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   814   001546  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
   815   00154A  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
   816   00154C  EFD9  F00A         	goto	l1774
   817   001550                     l1766:
   818   001550  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   819   001554  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   820   001556  0FC0               	addlw	192
   821   001558  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   822   00155A  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
   823   00155E  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
   824   001560  EFD9  F00A         	goto	l1774
   825   001564                     l1768:
   826   001564  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   827   001568  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   828   00156A  0F94               	addlw	148
   829   00156C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   830   00156E  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
   831   001572  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
   832   001574  EFD9  F00A         	goto	l1774
   833   001578                     l1770:
   834   001578  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   835   00157C  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   836   00157E  0FD4               	addlw	212
   837   001580  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   838   001582  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
   839   001586  6E42               	movwf	lcd_8bit_set_cursor@ret^0,c
   840   001588  EFD9  F00A         	goto	l1774
   841   00158C                     l1772:
   842   00158C  5040               	movf	lcd_8bit_set_cursor@row^0,w,c
   843                           
   844                           ; Switch size 1, requested type "simple"
   845                           ; Number of cases is 4, Range of values is 1 to 4
   846                           ; switch strategies available:
   847                           ; Name         Instructions Cycles
   848                           ; simple_byte           13     7 (average)
   849                           ;	Chosen strategy is simple_byte
   850   00158E  0A01               	xorlw	1	; case 1
   851   001590  B4D8               	btfsc	status,2,c
   852   001592  EF9E  F00A         	goto	l1764
   853   001596  0A03               	xorlw	3	; case 2
   854   001598  B4D8               	btfsc	status,2,c
   855   00159A  EFA8  F00A         	goto	l1766
   856   00159E  0A01               	xorlw	1	; case 3
   857   0015A0  B4D8               	btfsc	status,2,c
   858   0015A2  EFB2  F00A         	goto	l1768
   859   0015A6  0A07               	xorlw	7	; case 4
   860   0015A8  B4D8               	btfsc	status,2,c
   861   0015AA  EFBC  F00A         	goto	l1770
   862   0015AE  EFD9  F00A         	goto	l1774
   863   0015B2                     l1774:
   864                           
   865                           ;ECU_Layer/lcd/lcd.c: 270:     return ret;
   866   0015B2  5042               	movf	lcd_8bit_set_cursor@ret^0,w,c
   867   0015B4  0012               	return		;funcret
   868   0015B6                     __end_of_lcd_8bit_set_cursor:
   869                           	callstack 0
   870                           
   871 ;; *************** function _lcd_8bit_send_char_data *****************
   872 ;; Defined at:
   873 ;;		line 161 in file "ECU_Layer/lcd/lcd.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  lcd             1   10[COMRAM] PTR const struct .
   876 ;;		 -> lcd2(10), 
   877 ;;  data            1   11[COMRAM] unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   880 ;;  ret             1   14[COMRAM] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      unsigned char 
   883 ;; Registers used:
   884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;Total ram usage:        6 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 2
   897 ;; This function calls:
   898 ;;		_gpio_pin_write_logic
   899 ;;		_lcd_8bit_send_enable_signal
   900 ;; This function is called by:
   901 ;;		_lcd_8bit_send_string_pos
   902 ;;		_lcd_8bit_send_char_data_pos
   903 ;;		_lcd_8bit_send_string
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text3
   908   0016CA                     __ptext3:
   909                           	callstack 0
   910   0016CA                     _lcd_8bit_send_char_data:
   911                           	callstack 27
   912   0016CA                     
   913                           ;ECU_Layer/lcd/lcd.c: 163:     uint8 l_pin_counter = 0;
   914   0016CA  0E00               	movlw	0
   915   0016CC  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   916                           
   917                           ;ECU_Layer/lcd/lcd.c: 164:      if(((void*)0)==lcd){
   918   0016CE  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   919   0016D0  A4D8               	btfss	status,2,c
   920   0016D2  EF6D  F00B         	goto	u871
   921   0016D6  EF6F  F00B         	goto	u870
   922   0016DA                     u871:
   923   0016DA  EF73  F00B         	goto	l1740
   924   0016DE                     u870:
   925   0016DE                     
   926                           ;ECU_Layer/lcd/lcd.c: 165:             ret = (Std_ReturnType)0x00;
   927   0016DE  0E00               	movlw	0
   928   0016E0  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   929                           
   930                           ;ECU_Layer/lcd/lcd.c: 166:      }else{
   931   0016E2  EF9C  F00B         	goto	l1754
   932   0016E6                     l1740:
   933   0016E6  C039  F02F         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
   934   0016EA  0E01               	movlw	1
   935   0016EC  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   936   0016EE  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
   937   0016F2                     l1746:
   938   0016F2  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   939   0016F4  243E               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
   940   0016F6  0F02               	addlw	2
   941   0016F8  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   942   0016FA  C03E  F03B         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
   943   0016FE  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
   944   001702  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
   945   001704  EF86  F00B         	goto	u884
   946   001708                     u885:
   947   001708  90D8               	bcf	status,0,c
   948   00170A  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
   949   00170C                     u884:
   950   00170C  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
   951   00170E  EF84  F00B         	goto	u885
   952   001712  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
   953   001714  0B01               	andlw	1
   954   001716  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   955   001718  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
   956   00171C                     
   957                           ;ECU_Layer/lcd/lcd.c: 170:          }
   958   00171C  2A3E               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
   959   00171E  0E07               	movlw	7
   960   001720  643E               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
   961   001722  EF95  F00B         	goto	u891
   962   001726  EF97  F00B         	goto	u890
   963   00172A                     u891:
   964   00172A  EF79  F00B         	goto	l1746
   965   00172E                     u890:
   966   00172E                     
   967                           ;ECU_Layer/lcd/lcd.c: 171:          ret = lcd_8bit_send_enable_signal(lcd);
   968   00172E  C039  F037         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
   969   001732  ECE9  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
   970   001736  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   971   001738                     l1754:
   972                           
   973                           ;ECU_Layer/lcd/lcd.c: 173:     return ret;
   974   001738  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
   975   00173A  0012               	return		;funcret
   976   00173C                     __end_of_lcd_8bit_send_char_data:
   977                           	callstack 0
   978                           
   979 ;; *************** function _lcd_4bit_send_string_pos *****************
   980 ;; Defined at:
   981 ;;		line 95 in file "ECU_Layer/lcd/lcd.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  lcd             1   18[COMRAM] PTR const struct .
   984 ;;		 -> lcd1(6), 
   985 ;;  row             1   19[COMRAM] unsigned char 
   986 ;;  column          1   20[COMRAM] unsigned char 
   987 ;;  str             1   21[COMRAM] PTR unsigned char 
   988 ;;		 -> STR_5(10), STR_4(13), STR_3(10), 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  ret             1   22[COMRAM] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      unsigned char 
   993 ;; Registers used:
   994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;Total ram usage:        5 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; Hardware stack levels required when called: 4
  1007 ;; This function calls:
  1008 ;;		_lcd_4bit_send_char_data
  1009 ;;		_lcd_4bit_set_cursor
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text4
  1016   001652                     __ptext4:
  1017                           	callstack 0
  1018   001652                     _lcd_4bit_send_string_pos:
  1019                           	callstack 26
  1020   001652                     
  1021                           ;ECU_Layer/lcd/lcd.c: 97:      if(((void*)0)==lcd || ((void*)0)==str){
  1022   001652  5041               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1023   001654  B4D8               	btfsc	status,2,c
  1024   001656  EF2F  F00B         	goto	u921
  1025   00165A  EF31  F00B         	goto	u920
  1026   00165E                     u921:
  1027   00165E  EF39  F00B         	goto	l1792
  1028   001662                     u920:
  1029   001662  5044               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1030   001664  A4D8               	btfss	status,2,c
  1031   001666  EF37  F00B         	goto	u931
  1032   00166A  EF39  F00B         	goto	u930
  1033   00166E                     u931:
  1034   00166E  EF3D  F00B         	goto	l1794
  1035   001672                     u930:
  1036   001672                     l1792:
  1037                           
  1038                           ;ECU_Layer/lcd/lcd.c: 98:             ret = (Std_ReturnType)0x00;
  1039   001672  0E00               	movlw	0
  1040   001674  6E45               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1041                           
  1042                           ;ECU_Layer/lcd/lcd.c: 99:      }else{
  1043   001676  EF63  F00B         	goto	l1802
  1044   00167A                     l1794:
  1045                           
  1046                           ;ECU_Layer/lcd/lcd.c: 100:          ret = lcd_4bit_set_cursor(lcd,row,column);
  1047   00167A  C041  F03D         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1048   00167E  C042  F03E         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1049   001682  C043  F03F         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1050   001686  ECDB  F00A         	call	_lcd_4bit_set_cursor	;wreg free
  1051   00168A  6E45               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1052                           
  1053                           ;ECU_Layer/lcd/lcd.c: 101:          while(*str){
  1054   00168C  EF55  F00B         	goto	l1800
  1055   001690                     l1796:
  1056                           
  1057                           ;ECU_Layer/lcd/lcd.c: 102:              ret = lcd_4bit_send_char_data(lcd,*str);
  1058   001690  C041  F03A         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1059   001694  C044  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1060   001698                     	if	1	;There is more than 1 active tblptr byte
  1061   001698  0E10               	movlw	high __smallconst
  1062   00169A  6EF7               	movwf	tblptrh,c
  1063   00169C                     	endif
  1064   00169C                     	if	0	;tblptru may be non-zero
  1065   00169C                     	endif
  1066   00169C                     	if	0	;tblptru may be non-zero
  1067   00169C                     	endif
  1068   00169C  0008               	tblrd		*
  1069   00169E  CFF5 F03B          	movff	tablat,lcd_4bit_send_char_data@data
  1070   0016A2  EC6F  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  1071   0016A6  6E45               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1072   0016A8                     
  1073                           ;ECU_Layer/lcd/lcd.c: 103:              str++;
  1074   0016A8  2A44               	incf	lcd_4bit_send_string_pos@str^0,f,c
  1075   0016AA                     l1800:
  1076                           
  1077                           ;ECU_Layer/lcd/lcd.c: 101:          while(*str){
  1078   0016AA  C044  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1079   0016AE                     	if	1	;There is more than 1 active tblptr byte
  1080   0016AE  0E10               	movlw	high __smallconst
  1081   0016B0  6EF7               	movwf	tblptrh,c
  1082   0016B2                     	endif
  1083   0016B2                     	if	0	;tblptru may be non-zero
  1084   0016B2                     	endif
  1085   0016B2                     	if	0	;tblptru may be non-zero
  1086   0016B2                     	endif
  1087   0016B2  0008               	tblrd		*
  1088   0016B4  50F5               	movf	tablat,w,c
  1089   0016B6  0900               	iorlw	0
  1090   0016B8  A4D8               	btfss	status,2,c
  1091   0016BA  EF61  F00B         	goto	u941
  1092   0016BE  EF63  F00B         	goto	u940
  1093   0016C2                     u941:
  1094   0016C2  EF48  F00B         	goto	l1796
  1095   0016C6                     u940:
  1096   0016C6                     l1802:
  1097                           
  1098                           ;ECU_Layer/lcd/lcd.c: 106:     return ret;
  1099   0016C6  5045               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1100   0016C8  0012               	return		;funcret
  1101   0016CA                     __end_of_lcd_4bit_send_string_pos:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1105 ;; Defined at:
  1106 ;;		line 73 in file "ECU_Layer/lcd/lcd.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  lcd             1   18[COMRAM] PTR const struct .
  1109 ;;		 -> lcd1(6), 
  1110 ;;  row             1   19[COMRAM] unsigned char 
  1111 ;;  column          1   20[COMRAM] unsigned char 
  1112 ;;  data            1   21[COMRAM] unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  ret             1   22[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      unsigned char 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;Total ram usage:        5 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 4
  1131 ;; This function calls:
  1132 ;;		_lcd_4bit_send_char_data
  1133 ;;		_lcd_4bit_set_cursor
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text5
  1140   001996                     __ptext5:
  1141                           	callstack 0
  1142   001996                     _lcd_4bit_send_char_data_pos:
  1143                           	callstack 26
  1144   001996                     
  1145                           ;ECU_Layer/lcd/lcd.c: 75:      if(((void*)0)==lcd){
  1146   001996  5041               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  1147   001998  A4D8               	btfss	status,2,c
  1148   00199A  EFD1  F00C         	goto	u911
  1149   00199E  EFD3  F00C         	goto	u910
  1150   0019A2                     u911:
  1151   0019A2  EFD7  F00C         	goto	l1782
  1152   0019A6                     u910:
  1153   0019A6                     
  1154                           ;ECU_Layer/lcd/lcd.c: 76:             ret = (Std_ReturnType)0x00;
  1155   0019A6  0E00               	movlw	0
  1156   0019A8  6E45               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1157                           
  1158                           ;ECU_Layer/lcd/lcd.c: 77:      }else{
  1159   0019AA  EFE7  F00C         	goto	l1784
  1160   0019AE                     l1782:
  1161                           
  1162                           ;ECU_Layer/lcd/lcd.c: 78:         ret = lcd_4bit_set_cursor(lcd,row,column);
  1163   0019AE  C041  F03D         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  1164   0019B2  C042  F03E         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  1165   0019B6  C043  F03F         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
  1166   0019BA  ECDB  F00A         	call	_lcd_4bit_set_cursor	;wreg free
  1167   0019BE  6E45               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1168                           
  1169                           ;ECU_Layer/lcd/lcd.c: 79:         ret = lcd_4bit_send_char_data(lcd,data);
  1170   0019C0  C041  F03A         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1171   0019C4  C044  F03B         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1172   0019C8  EC6F  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  1173   0019CC  6E45               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1174   0019CE                     l1784:
  1175                           
  1176                           ;ECU_Layer/lcd/lcd.c: 81:     return ret;
  1177   0019CE  5045               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  1178   0019D0  0012               	return		;funcret
  1179   0019D2                     __end_of_lcd_4bit_send_char_data_pos:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _lcd_4bit_set_cursor *****************
  1183 ;; Defined at:
  1184 ;;		line 273 in file "ECU_Layer/lcd/lcd.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  lcd             1   14[COMRAM] PTR const struct .
  1187 ;;		 -> lcd1(6), 
  1188 ;;  row             1   15[COMRAM] unsigned char 
  1189 ;;  column          1   16[COMRAM] unsigned char 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  ret             1   17[COMRAM] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      unsigned char 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1201 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;Total ram usage:        4 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 3
  1208 ;; This function calls:
  1209 ;;		_lcd_4bit_send_command
  1210 ;; This function is called by:
  1211 ;;		_lcd_4bit_send_char_data_pos
  1212 ;;		_lcd_4bit_send_string_pos
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text6
  1217   0015B6                     __ptext6:
  1218                           	callstack 0
  1219   0015B6                     _lcd_4bit_set_cursor:
  1220                           	callstack 26
  1221   0015B6                     
  1222                           ;ECU_Layer/lcd/lcd.c: 274:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  1223   0015B6  0E01               	movlw	1
  1224   0015B8  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
  1225                           
  1226                           ;ECU_Layer/lcd/lcd.c: 275:      if(((void*)0)==lcd){
  1227   0015BA  503D               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1228   0015BC  A4D8               	btfss	status,2,c
  1229   0015BE  EFE3  F00A         	goto	u841
  1230   0015C2  EFE5  F00A         	goto	u840
  1231   0015C6                     u841:
  1232   0015C6  EFE9  F00A         	goto	l1678
  1233   0015CA                     u840:
  1234   0015CA                     
  1235                           ;ECU_Layer/lcd/lcd.c: 276:             ret = (Std_ReturnType)0x00;
  1236   0015CA  0E00               	movlw	0
  1237   0015CC  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
  1238                           
  1239                           ;ECU_Layer/lcd/lcd.c: 277:      }else{
  1240   0015CE  EF27  F00B         	goto	l1690
  1241   0015D2                     l1678:
  1242                           
  1243                           ;ECU_Layer/lcd/lcd.c: 278:          column--;
  1244   0015D2  063F               	decf	lcd_4bit_set_cursor@column^0,f,c
  1245                           
  1246                           ;ECU_Layer/lcd/lcd.c: 279:          switch(row){
  1247   0015D4  EF14  F00B         	goto	l1688
  1248   0015D8                     l1680:
  1249   0015D8  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1250   0015DC  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1251   0015DE  0F80               	addlw	128
  1252   0015E0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1253   0015E2  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1254   0015E6  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
  1255   0015E8  EF27  F00B         	goto	l1690
  1256   0015EC                     l1682:
  1257   0015EC  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1258   0015F0  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1259   0015F2  0FC0               	addlw	192
  1260   0015F4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1261   0015F6  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1262   0015FA  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
  1263   0015FC  EF27  F00B         	goto	l1690
  1264   001600                     l1684:
  1265   001600  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1266   001604  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1267   001606  0F94               	addlw	148
  1268   001608  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1269   00160A  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1270   00160E  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
  1271   001610  EF27  F00B         	goto	l1690
  1272   001614                     l1686:
  1273   001614  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1274   001618  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1275   00161A  0FD4               	addlw	212
  1276   00161C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1277   00161E  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1278   001622  6E40               	movwf	lcd_4bit_set_cursor@ret^0,c
  1279   001624  EF27  F00B         	goto	l1690
  1280   001628                     l1688:
  1281   001628  503E               	movf	lcd_4bit_set_cursor@row^0,w,c
  1282                           
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 4, Range of values is 1 to 4
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte           13     7 (average)
  1288                           ;	Chosen strategy is simple_byte
  1289   00162A  0A01               	xorlw	1	; case 1
  1290   00162C  B4D8               	btfsc	status,2,c
  1291   00162E  EFEC  F00A         	goto	l1680
  1292   001632  0A03               	xorlw	3	; case 2
  1293   001634  B4D8               	btfsc	status,2,c
  1294   001636  EFF6  F00A         	goto	l1682
  1295   00163A  0A01               	xorlw	1	; case 3
  1296   00163C  B4D8               	btfsc	status,2,c
  1297   00163E  EF00  F00B         	goto	l1684
  1298   001642  0A07               	xorlw	7	; case 4
  1299   001644  B4D8               	btfsc	status,2,c
  1300   001646  EF0A  F00B         	goto	l1686
  1301   00164A  EF27  F00B         	goto	l1690
  1302   00164E                     l1690:
  1303                           
  1304                           ;ECU_Layer/lcd/lcd.c: 287:     return ret;
  1305   00164E  5040               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1306   001650  0012               	return		;funcret
  1307   001652                     __end_of_lcd_4bit_set_cursor:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _lcd_4bit_send_char_data *****************
  1311 ;; Defined at:
  1312 ;;		line 60 in file "ECU_Layer/lcd/lcd.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  lcd             1   11[COMRAM] PTR const struct .
  1315 ;;		 -> lcd1(6), 
  1316 ;;  data            1   12[COMRAM] unsigned char 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  ret             1   13[COMRAM] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      unsigned char 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:        3 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 2
  1335 ;; This function calls:
  1336 ;;		_gpio_pin_write_logic
  1337 ;;		_lcd_4bit_send_enable_signal
  1338 ;;		_lcd_send_4bits
  1339 ;; This function is called by:
  1340 ;;		_lcd_4bit_send_char_data_pos
  1341 ;;		_lcd_4bit_send_string_pos
  1342 ;;		_lcd_4bit_send_string
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text7
  1347   0018DE                     __ptext7:
  1348                           	callstack 0
  1349   0018DE                     _lcd_4bit_send_char_data:
  1350                           	callstack 27
  1351   0018DE                     
  1352                           ;ECU_Layer/lcd/lcd.c: 62:      if(((void*)0)==lcd){
  1353   0018DE  503A               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1354   0018E0  A4D8               	btfss	status,2,c
  1355   0018E2  EF75  F00C         	goto	u831
  1356   0018E6  EF77  F00C         	goto	u830
  1357   0018EA                     u831:
  1358   0018EA  EF7B  F00C         	goto	l1668
  1359   0018EE                     u830:
  1360   0018EE                     
  1361                           ;ECU_Layer/lcd/lcd.c: 63:             ret = (Std_ReturnType)0x00;
  1362   0018EE  0E00               	movlw	0
  1363   0018F0  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1364                           
  1365                           ;ECU_Layer/lcd/lcd.c: 64:      }else{
  1366   0018F2  EF9B  F00C         	goto	l1670
  1367   0018F6                     l1668:
  1368                           
  1369                           ;ECU_Layer/lcd/lcd.c: 65:          ret =gpio_pin_write_logic(&(lcd->lcd_rs),GPIO_HIGH);
  1370   0018F6  C03A  F02F         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1371   0018FA  0E01               	movlw	1
  1372   0018FC  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1373   0018FE  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  1374   001902  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1375                           
  1376                           ;ECU_Layer/lcd/lcd.c: 66:          ret =lcd_send_4bits(lcd,data>>4);
  1377   001904  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1378   001908  383B               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1379   00190A  0B0F               	andlw	15
  1380   00190C  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1381   00190E  ECD7  F00B         	call	_lcd_send_4bits	;wreg free
  1382   001912  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1383                           
  1384                           ;ECU_Layer/lcd/lcd.c: 67:          ret =lcd_4bit_send_enable_signal(lcd);
  1385   001914  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1386   001918  EC04  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  1387   00191C  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1388                           
  1389                           ;ECU_Layer/lcd/lcd.c: 68:          ret =lcd_send_4bits(lcd,data);
  1390   00191E  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1391   001922  C03B  F038         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1392   001926  ECD7  F00B         	call	_lcd_send_4bits	;wreg free
  1393   00192A  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1394                           
  1395                           ;ECU_Layer/lcd/lcd.c: 69:          ret =lcd_4bit_send_enable_signal(lcd);
  1396   00192C  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1397   001930  EC04  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  1398   001934  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1399   001936                     l1670:
  1400                           
  1401                           ;ECU_Layer/lcd/lcd.c: 71:     return ret;
  1402   001936  503C               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1403   001938  0012               	return		;funcret
  1404   00193A                     __end_of_lcd_4bit_send_char_data:
  1405                           	callstack 0
  1406                           
  1407 ;; *************** function _application_intialize *****************
  1408 ;; Defined at:
  1409 ;;		line 35 in file "application.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  ret             1    0        unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 4
  1430 ;; This function calls:
  1431 ;;		_lcd_4bit_intialize
  1432 ;;		_lcd_8bit_intialize
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text8
  1439   001A96                     __ptext8:
  1440                           	callstack 0
  1441   001A96                     _application_intialize:
  1442                           	callstack 26
  1443   001A96  0E29               	movlw	low _lcd1
  1444   001A98  6E3D               	movwf	lcd_4bit_intialize@lcd^0,c
  1445   001A9A  EC1A  F00A         	call	_lcd_4bit_intialize	;wreg free
  1446   001A9E  0E1F               	movlw	low _lcd2
  1447   001AA0  6E3F               	movwf	lcd_8bit_intialize@lcd^0,c
  1448   001AA2  ECA7  F009         	call	_lcd_8bit_intialize	;wreg free
  1449   001AA6  0012               	return		;funcret
  1450   001AA8                     __end_of_application_intialize:
  1451                           	callstack 0
  1452                           
  1453 ;; *************** function _lcd_8bit_intialize *****************
  1454 ;; Defined at:
  1455 ;;		line 118 in file "ECU_Layer/lcd/lcd.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  lcd             1   16[COMRAM] PTR const struct .
  1458 ;;		 -> lcd2(10), 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  ret             1   19[COMRAM] unsigned char 
  1461 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1471 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;Total ram usage:        4 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; Hardware stack levels required when called: 3
  1478 ;; This function calls:
  1479 ;;		_gpio_pin_intialize
  1480 ;;		_lcd_8bit_send_command
  1481 ;; This function is called by:
  1482 ;;		_application_intialize
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text9
  1487   00134E                     __ptext9:
  1488                           	callstack 0
  1489   00134E                     _lcd_8bit_intialize:
  1490                           	callstack 26
  1491   00134E                     
  1492                           ;ECU_Layer/lcd/lcd.c: 120:      uint8 l_data_pins_counter =0;
  1493   00134E  0E00               	movlw	0
  1494   001350  6E41               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  1495                           
  1496                           ;ECU_Layer/lcd/lcd.c: 121:      if(((void*)0)==lcd){
  1497   001352  503F               	movf	lcd_8bit_intialize@lcd^0,w,c
  1498   001354  A4D8               	btfss	status,2,c
  1499   001356  EFAF  F009         	goto	u851
  1500   00135A  EFB1  F009         	goto	u850
  1501   00135E                     u851:
  1502   00135E  EFB5  F009         	goto	l1698
  1503   001362                     u850:
  1504   001362                     
  1505                           ;ECU_Layer/lcd/lcd.c: 122:             ret = (Std_ReturnType)0x00;
  1506   001362  0E00               	movlw	0
  1507   001364  6E42               	movwf	lcd_8bit_intialize@ret^0,c
  1508                           
  1509                           ;ECU_Layer/lcd/lcd.c: 123:      }else{
  1510   001366  EF18  F00A         	goto	l1732
  1511   00136A                     l1698:
  1512                           
  1513                           ;ECU_Layer/lcd/lcd.c: 124:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1514   00136A  C03F  F037         	movff	lcd_8bit_intialize@lcd,gpio_pin_intialize@_pin_config
  1515   00136E  EC40  F00C         	call	_gpio_pin_intialize	;wreg free
  1516   001372  6E42               	movwf	lcd_8bit_intialize@ret^0,c
  1517                           
  1518                           ;ECU_Layer/lcd/lcd.c: 125:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  1519   001374  283F               	incf	lcd_8bit_intialize@lcd^0,w,c
  1520   001376  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1521   001378  EC40  F00C         	call	_gpio_pin_intialize	;wreg free
  1522   00137C  6E42               	movwf	lcd_8bit_intialize@ret^0,c
  1523   00137E                     l1704:
  1524   00137E  503F               	movf	lcd_8bit_intialize@lcd^0,w,c
  1525   001380  2441               	addwf	lcd_8bit_intialize@l_data_pins_counter^0,w,c
  1526   001382  0F02               	addlw	2
  1527   001384  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1528   001386  EC40  F00C         	call	_gpio_pin_intialize	;wreg free
  1529   00138A                     
  1530                           ;ECU_Layer/lcd/lcd.c: 128:         }
  1531   00138A  2A41               	incf	lcd_8bit_intialize@l_data_pins_counter^0,f,c
  1532   00138C  0E07               	movlw	7
  1533   00138E  6441               	cpfsgt	lcd_8bit_intialize@l_data_pins_counter^0,c
  1534   001390  EFCC  F009         	goto	u861
  1535   001394  EFCE  F009         	goto	u860
  1536   001398                     u861:
  1537   001398  EFBF  F009         	goto	l1704
  1538   00139C                     u860:
  1539   00139C                     
  1540                           ;ECU_Layer/lcd/lcd.c: 129:         _delay((unsigned long)((20)*((uint64)3200000/4000.0))
      +                          );
  1541   00139C  0E15               	movlw	21
  1542   00139E  6E40               	movwf	??_lcd_8bit_intialize^0,c
  1543   0013A0  0EC6               	movlw	198
  1544   0013A2                     u1077:
  1545   0013A2  2EE8               	decfsz	wreg,f,c
  1546   0013A4  D7FE               	bra	u1077
  1547   0013A6  2E40               	decfsz	??_lcd_8bit_intialize^0,f,c
  1548   0013A8  D7FC               	bra	u1077
  1549   0013AA  D000               	nop2	
  1550   0013AC  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1551   0013B0  0E38               	movlw	56
  1552   0013B2  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1553   0013B4  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
  1554   0013B8                     
  1555                           ;ECU_Layer/lcd/lcd.c: 131:         _delay((unsigned long)((5)*((uint64)3200000/4000.0)))
      +                          ;
  1556   0013B8  0E06               	movlw	6
  1557   0013BA  6E40               	movwf	??_lcd_8bit_intialize^0,c
  1558   0013BC  0E30               	movlw	48
  1559   0013BE                     u1087:
  1560   0013BE  2EE8               	decfsz	wreg,f,c
  1561   0013C0  D7FE               	bra	u1087
  1562   0013C2  2E40               	decfsz	??_lcd_8bit_intialize^0,f,c
  1563   0013C4  D7FC               	bra	u1087
  1564   0013C6  D000               	nop2	
  1565   0013C8  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1566   0013CC  0E38               	movlw	56
  1567   0013CE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1568   0013D0  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
  1569   0013D4                     
  1570                           ;ECU_Layer/lcd/lcd.c: 133:         _delay((unsigned long)((150)*((uint64)3200000/4000000
      +                          .0)));
  1571   0013D4  0E28               	movlw	40
  1572   0013D6                     u1097:
  1573   0013D6  2EE8               	decfsz	wreg,f,c
  1574   0013D8  D7FE               	bra	u1097
  1575   0013DA  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1576   0013DE  0E38               	movlw	56
  1577   0013E0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1578   0013E2  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
  1579   0013E6  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1580   0013EA  0E01               	movlw	1
  1581   0013EC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1582   0013EE  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
  1583   0013F2  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1584   0013F6  0E02               	movlw	2
  1585   0013F8  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1586   0013FA  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
  1587   0013FE  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1588   001402  0E06               	movlw	6
  1589   001404  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1590   001406  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
  1591   00140A  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1592   00140E  0E0C               	movlw	12
  1593   001410  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1594   001412  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
  1595   001416  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1596   00141A  0E38               	movlw	56
  1597   00141C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1598   00141E  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
  1599   001422                     
  1600                           ;ECU_Layer/lcd/lcd.c: 142:         ret = lcd_8bit_send_command(lcd,0x80);
  1601   001422  C03F  F039         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1602   001426  0E80               	movlw	128
  1603   001428  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1604   00142A  EC9E  F00B         	call	_lcd_8bit_send_command	;wreg free
  1605   00142E  6E42               	movwf	lcd_8bit_intialize@ret^0,c
  1606   001430                     l1732:
  1607                           
  1608                           ;ECU_Layer/lcd/lcd.c: 145:     return ret;
  1609   001430  5042               	movf	lcd_8bit_intialize@ret^0,w,c
  1610   001432  0012               	return		;funcret
  1611   001434                     __end_of_lcd_8bit_intialize:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _lcd_8bit_send_command *****************
  1615 ;; Defined at:
  1616 ;;		line 147 in file "ECU_Layer/lcd/lcd.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  lcd             1   10[COMRAM] PTR const struct .
  1619 ;;		 -> lcd2(10), 
  1620 ;;  command         1   11[COMRAM] unsigned char 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1623 ;;  ret             1   14[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;Total ram usage:        6 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 2
  1640 ;; This function calls:
  1641 ;;		_gpio_pin_write_logic
  1642 ;;		_lcd_8bit_send_enable_signal
  1643 ;; This function is called by:
  1644 ;;		_lcd_8bit_intialize
  1645 ;;		_lcd_8bit_set_cursor
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text10
  1650   00173C                     __ptext10:
  1651                           	callstack 0
  1652   00173C                     _lcd_8bit_send_command:
  1653                           	callstack 26
  1654   00173C                     
  1655                           ;ECU_Layer/lcd/lcd.c: 149:      uint8 l_pin_counter = 0;
  1656   00173C  0E00               	movlw	0
  1657   00173E  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1658                           
  1659                           ;ECU_Layer/lcd/lcd.c: 150:      if(((void*)0)==lcd){
  1660   001740  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1661   001742  A4D8               	btfss	status,2,c
  1662   001744  EFA6  F00B         	goto	u781
  1663   001748  EFA8  F00B         	goto	u780
  1664   00174C                     u781:
  1665   00174C  EFAC  F00B         	goto	l1604
  1666   001750                     u780:
  1667   001750                     
  1668                           ;ECU_Layer/lcd/lcd.c: 151:             ret = (Std_ReturnType)0x00;
  1669   001750  0E00               	movlw	0
  1670   001752  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1671                           
  1672                           ;ECU_Layer/lcd/lcd.c: 152:      }else{
  1673   001754  EFD5  F00B         	goto	l1618
  1674   001758                     l1604:
  1675   001758  C039  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1676   00175C  0E00               	movlw	0
  1677   00175E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1678   001760  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  1679   001764                     l1610:
  1680   001764  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1681   001766  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1682   001768  0F02               	addlw	2
  1683   00176A  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1684   00176C  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1685   001770  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1686   001774  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1687   001776  EFBF  F00B         	goto	u794
  1688   00177A                     u795:
  1689   00177A  90D8               	bcf	status,0,c
  1690   00177C  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1691   00177E                     u794:
  1692   00177E  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1693   001780  EFBD  F00B         	goto	u795
  1694   001784  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1695   001786  0B01               	andlw	1
  1696   001788  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1697   00178A  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  1698   00178E                     
  1699                           ;ECU_Layer/lcd/lcd.c: 156:          }
  1700   00178E  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1701   001790  0E07               	movlw	7
  1702   001792  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1703   001794  EFCE  F00B         	goto	u801
  1704   001798  EFD0  F00B         	goto	u800
  1705   00179C                     u801:
  1706   00179C  EFB2  F00B         	goto	l1610
  1707   0017A0                     u800:
  1708   0017A0                     
  1709                           ;ECU_Layer/lcd/lcd.c: 157:          ret = lcd_8bit_send_enable_signal(lcd);
  1710   0017A0  C039  F037         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1711   0017A4  ECE9  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1712   0017A8  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1713   0017AA                     l1618:
  1714                           
  1715                           ;ECU_Layer/lcd/lcd.c: 159:     return ret;
  1716   0017AA  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1717   0017AC  0012               	return		;funcret
  1718   0017AE                     __end_of_lcd_8bit_send_command:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1722 ;; Defined at:
  1723 ;;		line 244 in file "ECU_Layer/lcd/lcd.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  lcd             1    8[COMRAM] PTR const struct .
  1726 ;;		 -> lcd2(10), 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  ret             1    9[COMRAM] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      unsigned char 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1738 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;Total ram usage:        2 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 1
  1745 ;; This function calls:
  1746 ;;		_gpio_pin_write_logic
  1747 ;; This function is called by:
  1748 ;;		_lcd_8bit_send_command
  1749 ;;		_lcd_8bit_send_char_data
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text11
  1754   0019D2                     __ptext11:
  1755                           	callstack 0
  1756   0019D2                     _lcd_8bit_send_enable_signal:
  1757                           	callstack 26
  1758   0019D2                     
  1759                           ;ECU_Layer/lcd/lcd.c: 246:      if(((void*)0)==lcd){
  1760   0019D2  5037               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1761   0019D4  A4D8               	btfss	status,2,c
  1762   0019D6  EFEF  F00C         	goto	u691
  1763   0019DA  EFF1  F00C         	goto	u690
  1764   0019DE                     u691:
  1765   0019DE  EFF5  F00C         	goto	l1552
  1766   0019E2                     u690:
  1767   0019E2                     
  1768                           ;ECU_Layer/lcd/lcd.c: 247:             ret = (Std_ReturnType)0x00;
  1769   0019E2  0E00               	movlw	0
  1770   0019E4  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1771                           
  1772                           ;ECU_Layer/lcd/lcd.c: 248:      }else{
  1773   0019E6  EF02  F00D         	goto	l1556
  1774   0019EA                     l1552:
  1775   0019EA  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1776   0019EC  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1777   0019EE  0E01               	movlw	1
  1778   0019F0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1779   0019F2  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  1780   0019F6                     
  1781                           ;ECU_Layer/lcd/lcd.c: 250:             _delay((unsigned long)((1)*((uint64)3200000/40000
      +                          00.0)));
  1782                           ;ECU_Layer/lcd/lcd.c: 251:             ret = gpio_pin_write_logic(&(lcd->lcd_en),GPIO_LO
      +                          W);
  1783   0019F6  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1784   0019F8  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1785   0019FA  0E00               	movlw	0
  1786   0019FC  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1787   0019FE  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  1788   001A02  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1789   001A04                     l1556:
  1790                           
  1791                           ;ECU_Layer/lcd/lcd.c: 253:     return ret;
  1792   001A04  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1793   001A06  0012               	return		;funcret
  1794   001A08                     __end_of_lcd_8bit_send_enable_signal:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _lcd_4bit_intialize *****************
  1798 ;; Defined at:
  1799 ;;		line 18 in file "ECU_Layer/lcd/lcd.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  lcd             1   14[COMRAM] PTR const struct .
  1802 ;;		 -> lcd1(6), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  ret             1   17[COMRAM] unsigned char 
  1805 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      unsigned char 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1815 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;Total ram usage:        4 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 3
  1822 ;; This function calls:
  1823 ;;		_gpio_pin_intialize
  1824 ;;		_lcd_4bit_send_command
  1825 ;; This function is called by:
  1826 ;;		_application_intialize
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text12
  1831   001434                     __ptext12:
  1832                           	callstack 0
  1833   001434                     _lcd_4bit_intialize:
  1834                           	callstack 26
  1835   001434                     
  1836                           ;ECU_Layer/lcd/lcd.c: 20:    uint8 l_data_pins_counter= 0;
  1837   001434  0E00               	movlw	0
  1838   001436  6E3F               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  1839                           
  1840                           ;ECU_Layer/lcd/lcd.c: 21:      if(((void*)0)==lcd){
  1841   001438  503D               	movf	lcd_4bit_intialize@lcd^0,w,c
  1842   00143A  A4D8               	btfss	status,2,c
  1843   00143C  EF22  F00A         	goto	u811
  1844   001440  EF24  F00A         	goto	u810
  1845   001444                     u811:
  1846   001444  EF28  F00A         	goto	l1626
  1847   001448                     u810:
  1848   001448                     
  1849                           ;ECU_Layer/lcd/lcd.c: 22:             ret = (Std_ReturnType)0x00;
  1850   001448  0E00               	movlw	0
  1851   00144A  6E40               	movwf	lcd_4bit_intialize@ret^0,c
  1852                           
  1853                           ;ECU_Layer/lcd/lcd.c: 23:      }else{
  1854   00144C  EF8B  F00A         	goto	l1660
  1855   001450                     l1626:
  1856                           
  1857                           ;ECU_Layer/lcd/lcd.c: 24:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1858   001450  C03D  F037         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  1859   001454  EC40  F00C         	call	_gpio_pin_intialize	;wreg free
  1860   001458  6E40               	movwf	lcd_4bit_intialize@ret^0,c
  1861                           
  1862                           ;ECU_Layer/lcd/lcd.c: 25:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  1863   00145A  283D               	incf	lcd_4bit_intialize@lcd^0,w,c
  1864   00145C  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1865   00145E  EC40  F00C         	call	_gpio_pin_intialize	;wreg free
  1866   001462  6E40               	movwf	lcd_4bit_intialize@ret^0,c
  1867   001464                     l1632:
  1868   001464  503D               	movf	lcd_4bit_intialize@lcd^0,w,c
  1869   001466  243F               	addwf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  1870   001468  0F02               	addlw	2
  1871   00146A  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  1872   00146C  EC40  F00C         	call	_gpio_pin_intialize	;wreg free
  1873   001470                     
  1874                           ;ECU_Layer/lcd/lcd.c: 28:         }
  1875   001470  2A3F               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  1876   001472  0E03               	movlw	3
  1877   001474  643F               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  1878   001476  EF3F  F00A         	goto	u821
  1879   00147A  EF41  F00A         	goto	u820
  1880   00147E                     u821:
  1881   00147E  EF32  F00A         	goto	l1632
  1882   001482                     u820:
  1883   001482                     
  1884                           ;ECU_Layer/lcd/lcd.c: 29:         _delay((unsigned long)((20)*((uint64)3200000/4000.0)))
      +                          ;
  1885   001482  0E15               	movlw	21
  1886   001484  6E3E               	movwf	??_lcd_4bit_intialize^0,c
  1887   001486  0EC6               	movlw	198
  1888   001488                     u1107:
  1889   001488  2EE8               	decfsz	wreg,f,c
  1890   00148A  D7FE               	bra	u1107
  1891   00148C  2E3E               	decfsz	??_lcd_4bit_intialize^0,f,c
  1892   00148E  D7FC               	bra	u1107
  1893   001490  D000               	nop2	
  1894   001492  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1895   001496  0E38               	movlw	56
  1896   001498  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1897   00149A  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1898   00149E                     
  1899                           ;ECU_Layer/lcd/lcd.c: 31:         _delay((unsigned long)((5)*((uint64)3200000/4000.0)));
  1900   00149E  0E06               	movlw	6
  1901   0014A0  6E3E               	movwf	??_lcd_4bit_intialize^0,c
  1902   0014A2  0E30               	movlw	48
  1903   0014A4                     u1117:
  1904   0014A4  2EE8               	decfsz	wreg,f,c
  1905   0014A6  D7FE               	bra	u1117
  1906   0014A8  2E3E               	decfsz	??_lcd_4bit_intialize^0,f,c
  1907   0014AA  D7FC               	bra	u1117
  1908   0014AC  D000               	nop2	
  1909   0014AE  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1910   0014B2  0E38               	movlw	56
  1911   0014B4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1912   0014B6  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1913   0014BA                     
  1914                           ;ECU_Layer/lcd/lcd.c: 33:         _delay((unsigned long)((150)*((uint64)3200000/4000000.
      +                          0)));
  1915   0014BA  0E28               	movlw	40
  1916   0014BC                     u1127:
  1917   0014BC  2EE8               	decfsz	wreg,f,c
  1918   0014BE  D7FE               	bra	u1127
  1919   0014C0  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1920   0014C4  0E38               	movlw	56
  1921   0014C6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1922   0014C8  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1923   0014CC  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1924   0014D0  0E01               	movlw	1
  1925   0014D2  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1926   0014D4  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1927   0014D8  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1928   0014DC  0E02               	movlw	2
  1929   0014DE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1930   0014E0  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1931   0014E4  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1932   0014E8  0E06               	movlw	6
  1933   0014EA  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1934   0014EC  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1935   0014F0  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1936   0014F4  0E0C               	movlw	12
  1937   0014F6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1938   0014F8  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1939   0014FC  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1940   001500  0E28               	movlw	40
  1941   001502  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1942   001504  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1943   001508                     
  1944                           ;ECU_Layer/lcd/lcd.c: 42:         ret = lcd_4bit_send_command(lcd,0x80);
  1945   001508  C03D  F03A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1946   00150C  0E80               	movlw	128
  1947   00150E  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1948   001510  EC9D  F00C         	call	_lcd_4bit_send_command	;wreg free
  1949   001514  6E40               	movwf	lcd_4bit_intialize@ret^0,c
  1950   001516                     l1660:
  1951                           
  1952                           ;ECU_Layer/lcd/lcd.c: 44:     return ret;
  1953   001516  5040               	movf	lcd_4bit_intialize@ret^0,w,c
  1954   001518  0012               	return		;funcret
  1955   00151A                     __end_of_lcd_4bit_intialize:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _lcd_4bit_send_command *****************
  1959 ;; Defined at:
  1960 ;;		line 46 in file "ECU_Layer/lcd/lcd.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  lcd             1   11[COMRAM] PTR const struct .
  1963 ;;		 -> lcd1(6), 
  1964 ;;  command         1   12[COMRAM] unsigned char 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  ret             1   13[COMRAM] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      unsigned char 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;Total ram usage:        3 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 2
  1983 ;; This function calls:
  1984 ;;		_gpio_pin_write_logic
  1985 ;;		_lcd_4bit_send_enable_signal
  1986 ;;		_lcd_send_4bits
  1987 ;; This function is called by:
  1988 ;;		_lcd_4bit_intialize
  1989 ;;		_lcd_4bit_set_cursor
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text13
  1994   00193A                     __ptext13:
  1995                           	callstack 0
  1996   00193A                     _lcd_4bit_send_command:
  1997                           	callstack 26
  1998   00193A                     
  1999                           ;ECU_Layer/lcd/lcd.c: 48:      if(((void*)0)==lcd){
  2000   00193A  503A               	movf	lcd_4bit_send_command@lcd^0,w,c
  2001   00193C  A4D8               	btfss	status,2,c
  2002   00193E  EFA3  F00C         	goto	u771
  2003   001942  EFA5  F00C         	goto	u770
  2004   001946                     u771:
  2005   001946  EFA9  F00C         	goto	l1594
  2006   00194A                     u770:
  2007   00194A                     
  2008                           ;ECU_Layer/lcd/lcd.c: 49:             ret = (Std_ReturnType)0x00;
  2009   00194A  0E00               	movlw	0
  2010   00194C  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2011                           
  2012                           ;ECU_Layer/lcd/lcd.c: 50:      }else{
  2013   00194E  EFC9  F00C         	goto	l1596
  2014   001952                     l1594:
  2015                           
  2016                           ;ECU_Layer/lcd/lcd.c: 51:          ret =gpio_pin_write_logic(&(lcd->lcd_rs),GPIO_LOW);
  2017   001952  C03A  F02F         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2018   001956  0E00               	movlw	0
  2019   001958  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2020   00195A  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  2021   00195E  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2022                           
  2023                           ;ECU_Layer/lcd/lcd.c: 52:          ret =lcd_send_4bits(lcd,command>>4);
  2024   001960  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2025   001964  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  2026   001966  0B0F               	andlw	15
  2027   001968  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  2028   00196A  ECD7  F00B         	call	_lcd_send_4bits	;wreg free
  2029   00196E  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2030                           
  2031                           ;ECU_Layer/lcd/lcd.c: 53:          ret =lcd_4bit_send_enable_signal(lcd);
  2032   001970  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2033   001974  EC04  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  2034   001978  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2035                           
  2036                           ;ECU_Layer/lcd/lcd.c: 54:          ret =lcd_send_4bits(lcd,command);
  2037   00197A  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2038   00197E  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  2039   001982  ECD7  F00B         	call	_lcd_send_4bits	;wreg free
  2040   001986  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2041                           
  2042                           ;ECU_Layer/lcd/lcd.c: 55:          ret =lcd_4bit_send_enable_signal(lcd);
  2043   001988  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2044   00198C  EC04  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  2045   001990  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2046   001992                     l1596:
  2047                           
  2048                           ;ECU_Layer/lcd/lcd.c: 58:     return ret;
  2049   001992  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  2050   001994  0012               	return		;funcret
  2051   001996                     __end_of_lcd_4bit_send_command:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _lcd_send_4bits *****************
  2055 ;; Defined at:
  2056 ;;		line 221 in file "ECU_Layer/lcd/lcd.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  lcd             1    8[COMRAM] PTR const struct .
  2059 ;;		 -> lcd1(6), 
  2060 ;;  _data_comman    1    9[COMRAM] unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  ret             1   10[COMRAM] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      unsigned char 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;Total ram usage:        3 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 1
  2079 ;; This function calls:
  2080 ;;		_gpio_pin_write_logic
  2081 ;; This function is called by:
  2082 ;;		_lcd_4bit_send_command
  2083 ;;		_lcd_4bit_send_char_data
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text14
  2088   0017AE                     __ptext14:
  2089                           	callstack 0
  2090   0017AE                     _lcd_send_4bits:
  2091                           	callstack 26
  2092   0017AE                     
  2093                           ;ECU_Layer/lcd/lcd.c: 223:      if(((void*)0)==lcd){
  2094   0017AE  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2095   0017B0  A4D8               	btfss	status,2,c
  2096   0017B2  EFDD  F00B         	goto	u671
  2097   0017B6  EFDF  F00B         	goto	u670
  2098   0017BA                     u671:
  2099   0017BA  EFE3  F00B         	goto	l1530
  2100   0017BE                     u670:
  2101   0017BE                     
  2102                           ;ECU_Layer/lcd/lcd.c: 224:             ret = (Std_ReturnType)0x00;
  2103   0017BE  0E00               	movlw	0
  2104   0017C0  6E39               	movwf	lcd_send_4bits@ret^0,c
  2105                           
  2106                           ;ECU_Layer/lcd/lcd.c: 225:      }else{
  2107   0017C2  EF0C  F00C         	goto	l1532
  2108   0017C6                     l1530:
  2109                           
  2110                           ;ECU_Layer/lcd/lcd.c: 226:        ret = gpio_pin_write_logic(&(lcd->lcd_data[0]),(_data_
      +                          command >> 0)& (uint8)0x01);
  2111   0017C6  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2112   0017C8  0F02               	addlw	2
  2113   0017CA  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2114   0017CC  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  2115   0017CE  0B01               	andlw	1
  2116   0017D0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2117   0017D2  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  2118   0017D6  6E39               	movwf	lcd_send_4bits@ret^0,c
  2119                           
  2120                           ;ECU_Layer/lcd/lcd.c: 227:        ret = gpio_pin_write_logic(&(lcd->lcd_data[1]),(_data_
      +                          command >> 1)& (uint8)0x01);
  2121   0017D8  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2122   0017DA  0F03               	addlw	3
  2123   0017DC  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2124   0017DE  90D8               	bcf	status,0,c
  2125   0017E0  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2126   0017E2  0B01               	andlw	1
  2127   0017E4  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2128   0017E6  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  2129   0017EA  6E39               	movwf	lcd_send_4bits@ret^0,c
  2130                           
  2131                           ;ECU_Layer/lcd/lcd.c: 228:        ret = gpio_pin_write_logic(&(lcd->lcd_data[2]),(_data_
      +                          command >> 2)& (uint8)0x01);
  2132   0017EC  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2133   0017EE  0F04               	addlw	4
  2134   0017F0  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2135   0017F2  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2136   0017F4  42E8               	rrncf	wreg,f,c
  2137   0017F6  0B3F               	andlw	63
  2138   0017F8  0B01               	andlw	1
  2139   0017FA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2140   0017FC  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  2141   001800  6E39               	movwf	lcd_send_4bits@ret^0,c
  2142                           
  2143                           ;ECU_Layer/lcd/lcd.c: 229:        ret = gpio_pin_write_logic(&(lcd->lcd_data[3]),(_data_
      +                          command >> 3)& (uint8)0x01);
  2144   001802  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2145   001804  0F05               	addlw	5
  2146   001806  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2147   001808  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  2148   00180A  46E8               	rlncf	wreg,f,c
  2149   00180C  0B1F               	andlw	31
  2150   00180E  0B01               	andlw	1
  2151   001810  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2152   001812  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  2153   001816  6E39               	movwf	lcd_send_4bits@ret^0,c
  2154   001818                     l1532:
  2155                           
  2156                           ;ECU_Layer/lcd/lcd.c: 231:     return ret;
  2157   001818  5039               	movf	lcd_send_4bits@ret^0,w,c
  2158   00181A  0012               	return		;funcret
  2159   00181C                     __end_of_lcd_send_4bits:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2163 ;; Defined at:
  2164 ;;		line 233 in file "ECU_Layer/lcd/lcd.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  lcd             1    8[COMRAM] PTR const struct .
  2167 ;;		 -> lcd1(6), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  ret             1    9[COMRAM] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      unsigned char 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2179 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;Total ram usage:        2 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 1
  2186 ;; This function calls:
  2187 ;;		_gpio_pin_write_logic
  2188 ;; This function is called by:
  2189 ;;		_lcd_4bit_send_command
  2190 ;;		_lcd_4bit_send_char_data
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text15
  2195   001A08                     __ptext15:
  2196                           	callstack 0
  2197   001A08                     _lcd_4bit_send_enable_signal:
  2198                           	callstack 26
  2199   001A08                     
  2200                           ;ECU_Layer/lcd/lcd.c: 235:      if(((void*)0)==lcd){
  2201   001A08  5037               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2202   001A0A  A4D8               	btfss	status,2,c
  2203   001A0C  EF0A  F00D         	goto	u681
  2204   001A10  EF0C  F00D         	goto	u680
  2205   001A14                     u681:
  2206   001A14  EF10  F00D         	goto	l1540
  2207   001A18                     u680:
  2208   001A18                     
  2209                           ;ECU_Layer/lcd/lcd.c: 236:             ret = (Std_ReturnType)0x00;
  2210   001A18  0E00               	movlw	0
  2211   001A1A  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2212                           
  2213                           ;ECU_Layer/lcd/lcd.c: 237:      }else{
  2214   001A1C  EF1D  F00D         	goto	l1544
  2215   001A20                     l1540:
  2216   001A20  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2217   001A22  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2218   001A24  0E01               	movlw	1
  2219   001A26  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2220   001A28  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  2221   001A2C                     
  2222                           ;ECU_Layer/lcd/lcd.c: 239:             _delay((unsigned long)((1)*((uint64)3200000/40000
      +                          00.0)));
  2223                           ;ECU_Layer/lcd/lcd.c: 240:             ret = gpio_pin_write_logic(&(lcd->lcd_en),GPIO_LO
      +                          W);
  2224   001A2C  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2225   001A2E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2226   001A30  0E00               	movlw	0
  2227   001A32  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2228   001A34  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  2229   001A38  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2230   001A3A                     l1544:
  2231                           
  2232                           ;ECU_Layer/lcd/lcd.c: 242:     return ret;
  2233   001A3A  5038               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2234   001A3C  0012               	return		;funcret
  2235   001A3E                     __end_of_lcd_4bit_send_enable_signal:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _gpio_pin_intialize *****************
  2239 ;; Defined at:
  2240 ;;		line 133 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  2243 ;;		 -> lcd2$lcd_data(8), lcd2(10), lcd1$lcd_data(4), lcd1(6), 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  ret             1   10[COMRAM] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      unsigned char 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2255 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;Total ram usage:        3 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 1
  2262 ;; This function calls:
  2263 ;;		_gpio_pin_direction_intialize
  2264 ;;		_gpio_pin_write_logic
  2265 ;; This function is called by:
  2266 ;;		_lcd_4bit_intialize
  2267 ;;		_lcd_8bit_intialize
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text16
  2272   001880                     __ptext16:
  2273                           	callstack 0
  2274   001880                     _gpio_pin_intialize:
  2275                           	callstack 27
  2276   001880                     
  2277                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:      if(((void*)0)==_pin_config || _pin_config->pin >8
      +                           -1){
  2278   001880  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2279   001882  B4D8               	btfsc	status,2,c
  2280   001884  EF46  F00C         	goto	u751
  2281   001888  EF48  F00C         	goto	u750
  2282   00188C                     u751:
  2283   00188C  EF58  F00C         	goto	l1582
  2284   001890                     u750:
  2285   001890  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2286   001892  6ED9               	movwf	fsr2l,c
  2287   001894  6ADA               	clrf	fsr2h,c
  2288   001896  30DF               	rrcf	223,w,c
  2289   001898  32E8               	rrcf	wreg,f,c
  2290   00189A  32E8               	rrcf	wreg,f,c
  2291   00189C  0B07               	andlw	7
  2292   00189E  6E38               	movwf	??_gpio_pin_intialize^0,c
  2293   0018A0  0E07               	movlw	7
  2294   0018A2  6438               	cpfsgt	??_gpio_pin_intialize^0,c
  2295   0018A4  EF56  F00C         	goto	u761
  2296   0018A8  EF58  F00C         	goto	u760
  2297   0018AC                     u761:
  2298   0018AC  EF5C  F00C         	goto	l1584
  2299   0018B0                     u760:
  2300   0018B0                     l1582:
  2301                           
  2302                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:                  ret = (Std_ReturnType)0x00;
  2303   0018B0  0E00               	movlw	0
  2304   0018B2  6E39               	movwf	gpio_pin_intialize@ret^0,c
  2305                           
  2306                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:      }else{
  2307   0018B4  EF6D  F00C         	goto	l1586
  2308   0018B8                     l1584:
  2309                           
  2310                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:          ret = gpio_pin_direction_intialize( _pin_conf
      +                          ig );
  2311   0018B8  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  2312   0018BC  EC19  F008         	call	_gpio_pin_direction_intialize	;wreg free
  2313   0018C0  6E39               	movwf	gpio_pin_intialize@ret^0,c
  2314                           
  2315                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:          ret = gpio_pin_write_logic(_pin_config ,_pin_
      +                          config-> logic);
  2316   0018C2  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  2317   0018C6  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  2318   0018C8  6ED9               	movwf	fsr2l,c
  2319   0018CA  6ADA               	clrf	fsr2h,c
  2320   0018CC  0E00               	movlw	0
  2321   0018CE  BEDF               	btfsc	indf2,7,c
  2322   0018D0  0E01               	movlw	1
  2323   0018D2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2324   0018D4  ECA2  F008         	call	_gpio_pin_write_logic	;wreg free
  2325   0018D8  6E39               	movwf	gpio_pin_intialize@ret^0,c
  2326   0018DA                     l1586:
  2327                           
  2328                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:      return ret;
  2329   0018DA  5039               	movf	gpio_pin_intialize@ret^0,w,c
  2330   0018DC  0012               	return		;funcret
  2331   0018DE                     __end_of_gpio_pin_intialize:
  2332                           	callstack 0
  2333                           
  2334 ;; *************** function _gpio_pin_write_logic *****************
  2335 ;; Defined at:
  2336 ;;		line 70 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2339 ;;		 -> lcd2$lcd_data(8), lcd2(10), lcd1$lcd_data(4), lcd1(6), 
  2340 ;;  logic           1    1[COMRAM] enum E2494
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  ret             1    7[COMRAM] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      unsigned char 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:        8 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_lcd_4bit_send_command
  2362 ;;		_lcd_4bit_send_char_data
  2363 ;;		_lcd_8bit_send_command
  2364 ;;		_lcd_8bit_send_char_data
  2365 ;;		_lcd_send_4bits
  2366 ;;		_lcd_4bit_send_enable_signal
  2367 ;;		_lcd_8bit_send_enable_signal
  2368 ;;		_gpio_pin_intialize
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text17
  2373   001144                     __ptext17:
  2374                           	callstack 0
  2375   001144                     _gpio_pin_write_logic:
  2376                           	callstack 26
  2377   001144                     
  2378                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2379   001144  0E01               	movlw	1
  2380   001146  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2381                           
  2382                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     if(((void*)0)==_pin_config|| _pin_config->pin >8 -1
      +                           ){
  2383   001148  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2384   00114A  B4D8               	btfsc	status,2,c
  2385   00114C  EFAA  F008         	goto	u631
  2386   001150  EFAC  F008         	goto	u630
  2387   001154                     u631:
  2388   001154  EFBC  F008         	goto	l1508
  2389   001158                     u630:
  2390   001158  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2391   00115A  6ED9               	movwf	fsr2l,c
  2392   00115C  6ADA               	clrf	fsr2h,c
  2393   00115E  30DF               	rrcf	223,w,c
  2394   001160  32E8               	rrcf	wreg,f,c
  2395   001162  32E8               	rrcf	wreg,f,c
  2396   001164  0B07               	andlw	7
  2397   001166  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2398   001168  0E07               	movlw	7
  2399   00116A  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  2400   00116C  EFBA  F008         	goto	u641
  2401   001170  EFBC  F008         	goto	u640
  2402   001174                     u641:
  2403   001174  EF13  F009         	goto	l1516
  2404   001178                     u640:
  2405   001178                     l1508:
  2406                           
  2407                           ;MCAL_Layer/GPIO/hal_gpio.c: 73:         ret = (Std_ReturnType)0x00;
  2408   001178  0E00               	movlw	0
  2409   00117A  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2410                           
  2411                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     }else{
  2412   00117C  EF28  F009         	goto	l1518
  2413   001180                     l1510:
  2414                           
  2415                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  2416   001180  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2417   001182  6ED9               	movwf	fsr2l,c
  2418   001184  6ADA               	clrf	fsr2h,c
  2419   001186  30DF               	rrcf	223,w,c
  2420   001188  32E8               	rrcf	wreg,f,c
  2421   00118A  32E8               	rrcf	wreg,f,c
  2422   00118C  0B07               	andlw	7
  2423   00118E  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2424   001190  0E01               	movlw	1
  2425   001192  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2426   001194  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2427   001196  EFCF  F008         	goto	u654
  2428   00119A                     u655:
  2429   00119A  90D8               	bcf	status,0,c
  2430   00119C  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2431   00119E                     u654:
  2432   00119E  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2433   0011A0  EFCD  F008         	goto	u655
  2434   0011A4  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2435   0011A6  6ED9               	movwf	fsr2l,c
  2436   0011A8  6ADA               	clrf	fsr2h,c
  2437   0011AA  50DF               	movf	223,w,c
  2438   0011AC  0B07               	andlw	7
  2439   0011AE  0D02               	mullw	2
  2440   0011B0  50F3               	movf	243,w,c
  2441   0011B2  0F0B               	addlw	low _lat_registers
  2442   0011B4  6ED9               	movwf	fsr2l,c
  2443   0011B6  6ADA               	clrf	fsr2h,c
  2444   0011B8  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  2445   0011BC  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  2446   0011C0  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2447   0011C4  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2448   0011C8  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2449   0011CA  12DF               	iorwf	indf2,f,c
  2450                           
  2451                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:                 break;
  2452   0011CC  EF28  F009         	goto	l1518
  2453   0011D0                     l1512:
  2454                           
  2455                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  2456   0011D0  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2457   0011D2  6ED9               	movwf	fsr2l,c
  2458   0011D4  6ADA               	clrf	fsr2h,c
  2459   0011D6  30DF               	rrcf	223,w,c
  2460   0011D8  32E8               	rrcf	wreg,f,c
  2461   0011DA  32E8               	rrcf	wreg,f,c
  2462   0011DC  0B07               	andlw	7
  2463   0011DE  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2464   0011E0  0E01               	movlw	1
  2465   0011E2  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2466   0011E4  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2467   0011E6  EFF7  F008         	goto	u664
  2468   0011EA                     u665:
  2469   0011EA  90D8               	bcf	status,0,c
  2470   0011EC  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2471   0011EE                     u664:
  2472   0011EE  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2473   0011F0  EFF5  F008         	goto	u665
  2474   0011F4  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2475   0011F6  0AFF               	xorlw	255
  2476   0011F8  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2477   0011FA  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2478   0011FC  6ED9               	movwf	fsr2l,c
  2479   0011FE  6ADA               	clrf	fsr2h,c
  2480   001200  50DF               	movf	223,w,c
  2481   001202  0B07               	andlw	7
  2482   001204  0D02               	mullw	2
  2483   001206  50F3               	movf	243,w,c
  2484   001208  0F0B               	addlw	low _lat_registers
  2485   00120A  6ED9               	movwf	fsr2l,c
  2486   00120C  6ADA               	clrf	fsr2h,c
  2487   00120E  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  2488   001212  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  2489   001216  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2490   00121A  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2491   00121E  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2492   001220  16DF               	andwf	indf2,f,c
  2493                           
  2494                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
  2495   001222  EF28  F009         	goto	l1518
  2496   001226                     l1516:
  2497   001226  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  2498   001228  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2499   00122A  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2500                           
  2501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2502                           ; Switch size 1, requested type "simple"
  2503                           ; Number of cases is 1, Range of values is 0 to 0
  2504                           ; switch strategies available:
  2505                           ; Name         Instructions Cycles
  2506                           ; simple_byte            4     3 (average)
  2507                           ;	Chosen strategy is simple_byte
  2508   00122C  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2509   00122E  0A00               	xorlw	0	; case 0
  2510   001230  B4D8               	btfsc	status,2,c
  2511   001232  EF1D  F009         	goto	l1910
  2512   001236  EFBC  F008         	goto	l1508
  2513   00123A                     l1910:
  2514                           
  2515                           ; Switch size 1, requested type "simple"
  2516                           ; Number of cases is 2, Range of values is 0 to 1
  2517                           ; switch strategies available:
  2518                           ; Name         Instructions Cycles
  2519                           ; simple_byte            7     4 (average)
  2520                           ;	Chosen strategy is simple_byte
  2521   00123A  5031               	movf	??_gpio_pin_write_logic^0,w,c
  2522   00123C  0A00               	xorlw	0	; case 0
  2523   00123E  B4D8               	btfsc	status,2,c
  2524   001240  EFE8  F008         	goto	l1512
  2525   001244  0A01               	xorlw	1	; case 1
  2526   001246  B4D8               	btfsc	status,2,c
  2527   001248  EFC0  F008         	goto	l1510
  2528   00124C  EFBC  F008         	goto	l1508
  2529   001250                     l1518:
  2530                           
  2531                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:         return ret ;
  2532   001250  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  2533   001252  0012               	return		;funcret
  2534   001254                     __end_of_gpio_pin_write_logic:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _gpio_pin_direction_intialize *****************
  2538 ;; Defined at:
  2539 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2542 ;;		 -> lcd2$lcd_data(8), lcd2(10), lcd1$lcd_data(4), lcd1(6), 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  ret             1    6[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2554 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;Total ram usage:        7 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_gpio_pin_intialize
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text18
  2568   001032                     __ptext18:
  2569                           	callstack 0
  2570   001032                     _gpio_pin_direction_intialize:
  2571                           	callstack 27
  2572   001032                     
  2573                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2574   001032  0E01               	movlw	1
  2575   001034  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  2576                           
  2577                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if(((void*)0)==_pin_config || _pin_config->pin >8 -
      +                          1){
  2578   001036  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2579   001038  B4D8               	btfsc	status,2,c
  2580   00103A  EF21  F008         	goto	u701
  2581   00103E  EF23  F008         	goto	u700
  2582   001042                     u701:
  2583   001042  EF33  F008         	goto	l1564
  2584   001046                     u700:
  2585   001046  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2586   001048  6ED9               	movwf	fsr2l,c
  2587   00104A  6ADA               	clrf	fsr2h,c
  2588   00104C  30DF               	rrcf	223,w,c
  2589   00104E  32E8               	rrcf	wreg,f,c
  2590   001050  32E8               	rrcf	wreg,f,c
  2591   001052  0B07               	andlw	7
  2592   001054  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2593   001056  0E07               	movlw	7
  2594   001058  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2595   00105A  EF31  F008         	goto	u711
  2596   00105E  EF33  F008         	goto	u710
  2597   001062                     u711:
  2598   001062  EF8A  F008         	goto	l1572
  2599   001066                     u710:
  2600   001066                     l1564:
  2601                           
  2602                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (Std_ReturnType)0x00;
  2603   001066  0E00               	movlw	0
  2604   001068  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  2605                           
  2606                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }else{
  2607   00106A  EFA0  F008         	goto	l1574
  2608   00106E                     l1566:
  2609                           
  2610                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  2611   00106E  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2612   001070  6ED9               	movwf	fsr2l,c
  2613   001072  6ADA               	clrf	fsr2h,c
  2614   001074  30DF               	rrcf	223,w,c
  2615   001076  32E8               	rrcf	wreg,f,c
  2616   001078  32E8               	rrcf	wreg,f,c
  2617   00107A  0B07               	andlw	7
  2618   00107C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2619   00107E  0E01               	movlw	1
  2620   001080  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2621   001082  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  2622   001084  EF46  F008         	goto	u724
  2623   001088                     u725:
  2624   001088  90D8               	bcf	status,0,c
  2625   00108A  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2626   00108C                     u724:
  2627   00108C  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2628   00108E  EF44  F008         	goto	u725
  2629   001092  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2630   001094  0AFF               	xorlw	255
  2631   001096  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2632   001098  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2633   00109A  6ED9               	movwf	fsr2l,c
  2634   00109C  6ADA               	clrf	fsr2h,c
  2635   00109E  50DF               	movf	223,w,c
  2636   0010A0  0B07               	andlw	7
  2637   0010A2  0D02               	mullw	2
  2638   0010A4  50F3               	movf	243,w,c
  2639   0010A6  0F15               	addlw	low _tris_registers
  2640   0010A8  6ED9               	movwf	fsr2l,c
  2641   0010AA  6ADA               	clrf	fsr2h,c
  2642   0010AC  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2643   0010B0  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2644   0010B4  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2645   0010B8  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2646   0010BC  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2647   0010BE  16DF               	andwf	indf2,f,c
  2648                           
  2649                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:               break;
  2650   0010C0  EFA0  F008         	goto	l1574
  2651   0010C4                     l1568:
  2652                           
  2653                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  2654   0010C4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2655   0010C6  6ED9               	movwf	fsr2l,c
  2656   0010C8  6ADA               	clrf	fsr2h,c
  2657   0010CA  30DF               	rrcf	223,w,c
  2658   0010CC  32E8               	rrcf	wreg,f,c
  2659   0010CE  32E8               	rrcf	wreg,f,c
  2660   0010D0  0B07               	andlw	7
  2661   0010D2  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2662   0010D4  0E01               	movlw	1
  2663   0010D6  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2664   0010D8  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  2665   0010DA  EF71  F008         	goto	u734
  2666   0010DE                     u735:
  2667   0010DE  90D8               	bcf	status,0,c
  2668   0010E0  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2669   0010E2                     u734:
  2670   0010E2  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2671   0010E4  EF6F  F008         	goto	u735
  2672   0010E8  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2673   0010EA  6ED9               	movwf	fsr2l,c
  2674   0010EC  6ADA               	clrf	fsr2h,c
  2675   0010EE  50DF               	movf	223,w,c
  2676   0010F0  0B07               	andlw	7
  2677   0010F2  0D02               	mullw	2
  2678   0010F4  50F3               	movf	243,w,c
  2679   0010F6  0F15               	addlw	low _tris_registers
  2680   0010F8  6ED9               	movwf	fsr2l,c
  2681   0010FA  6ADA               	clrf	fsr2h,c
  2682   0010FC  CFDE F032          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2683   001100  CFDD F033          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2684   001104  C032  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2685   001108  C033  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2686   00110C  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2687   00110E  12DF               	iorwf	indf2,f,c
  2688                           
  2689                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:               break;
  2690   001110  EFA0  F008         	goto	l1574
  2691   001114                     l1572:
  2692   001114  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2693   001116  6ED9               	movwf	fsr2l,c
  2694   001118  6ADA               	clrf	fsr2h,c
  2695   00111A  BCDF               	btfsc	indf2,6,c
  2696   00111C  EF92  F008         	goto	u741
  2697   001120  EF95  F008         	goto	u740
  2698   001124                     u741:
  2699   001124  0E01               	movlw	1
  2700   001126  EF96  F008         	goto	u746
  2701   00112A                     u740:
  2702   00112A  0E00               	movlw	0
  2703   00112C                     u746:
  2704                           
  2705                           ; Switch size 1, requested type "simple"
  2706                           ; Number of cases is 2, Range of values is 0 to 1
  2707                           ; switch strategies available:
  2708                           ; Name         Instructions Cycles
  2709                           ; simple_byte            7     4 (average)
  2710                           ;	Chosen strategy is simple_byte
  2711   00112C  0A00               	xorlw	0	; case 0
  2712   00112E  B4D8               	btfsc	status,2,c
  2713   001130  EF37  F008         	goto	l1566
  2714   001134  0A01               	xorlw	1	; case 1
  2715   001136  B4D8               	btfsc	status,2,c
  2716   001138  EF62  F008         	goto	l1568
  2717   00113C  EF33  F008         	goto	l1564
  2718   001140                     l1574:
  2719                           
  2720                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret ;
  2721   001140  5035               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2722   001142  0012               	return		;funcret
  2723   001144                     __end_of_gpio_pin_direction_intialize:
  2724                           	callstack 0
  2725                           
  2726                           	psect	rparam
  2727   000000                     
  2728                           	psect	config
  2729                           
  2730                           ; Padding undefined space
  2731   300000                     	org	3145728
  2732   300000  FF                 	db	255
  2733                           
  2734                           ;Config register CONFIG1H @ 0x300001
  2735                           ;	Oscillator Selection bits
  2736                           ;	OSC = HS, HS oscillator
  2737                           ;	Fail-Safe Clock Monitor Enable bit
  2738                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2739                           ;	Internal/External Oscillator Switchover bit
  2740                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2741   300001                     	org	3145729
  2742   300001  02                 	db	2
  2743                           
  2744                           ;Config register CONFIG2L @ 0x300002
  2745                           ;	Power-up Timer Enable bit
  2746                           ;	PWRT = OFF, PWRT disabled
  2747                           ;	Brown-out Reset Enable bits
  2748                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2749                           ;	Brown Out Reset Voltage bits
  2750                           ;	BORV = 1, 
  2751   300002                     	org	3145730
  2752   300002  09                 	db	9
  2753                           
  2754                           ;Config register CONFIG2H @ 0x300003
  2755                           ;	Watchdog Timer Enable bit
  2756                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2757                           ;	Watchdog Timer Postscale Select bits
  2758                           ;	WDTPS = 32768, 1:32768
  2759   300003                     	org	3145731
  2760   300003  1E                 	db	30
  2761                           
  2762                           ; Padding undefined space
  2763   300004                     	org	3145732
  2764   300004  FF                 	db	255
  2765                           
  2766                           ;Config register CONFIG3H @ 0x300005
  2767                           ;	CCP2 MUX bit
  2768                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2769                           ;	PORTB A/D Enable bit
  2770                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2771                           ;	Low-Power Timer1 Oscillator Enable bit
  2772                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2773                           ;	MCLR Pin Enable bit
  2774                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2775   300005                     	org	3145733
  2776   300005  81                 	db	129
  2777                           
  2778                           ;Config register CONFIG4L @ 0x300006
  2779                           ;	Stack Full/Underflow Reset Enable bit
  2780                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2781                           ;	Single-Supply ICSP Enable bit
  2782                           ;	LVP = OFF, Single-Supply ICSP disabled
  2783                           ;	Extended Instruction Set Enable bit
  2784                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2785                           ;	Background Debugger Enable bit
  2786                           ;	DEBUG = 0x1, unprogrammed default
  2787   300006                     	org	3145734
  2788   300006  81                 	db	129
  2789                           
  2790                           ; Padding undefined space
  2791   300007                     	org	3145735
  2792   300007  FF                 	db	255
  2793                           
  2794                           ;Config register CONFIG5L @ 0x300008
  2795                           ;	Code Protection bit
  2796                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2797                           ;	Code Protection bit
  2798                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2799                           ;	Code Protection bit
  2800                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2801                           ;	Code Protection bit
  2802                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2803   300008                     	org	3145736
  2804   300008  0F                 	db	15
  2805                           
  2806                           ;Config register CONFIG5H @ 0x300009
  2807                           ;	Boot Block Code Protection bit
  2808                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2809                           ;	Data EEPROM Code Protection bit
  2810                           ;	CPD = OFF, Data EEPROM not code-protected
  2811   300009                     	org	3145737
  2812   300009  C0                 	db	192
  2813                           
  2814                           ;Config register CONFIG6L @ 0x30000A
  2815                           ;	Write Protection bit
  2816                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2817                           ;	Write Protection bit
  2818                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2819                           ;	Write Protection bit
  2820                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2821                           ;	Write Protection bit
  2822                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2823   30000A                     	org	3145738
  2824   30000A  0F                 	db	15
  2825                           
  2826                           ;Config register CONFIG6H @ 0x30000B
  2827                           ;	Configuration Register Write Protection bit
  2828                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2829                           ;	Boot Block Write Protection bit
  2830                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2831                           ;	Data EEPROM Write Protection bit
  2832                           ;	WRTD = OFF, Data EEPROM not write-protected
  2833   30000B                     	org	3145739
  2834   30000B  E0                 	db	224
  2835                           
  2836                           ;Config register CONFIG7L @ 0x30000C
  2837                           ;	Table Read Protection bit
  2838                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2839                           ;	Table Read Protection bit
  2840                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2841                           ;	Table Read Protection bit
  2842                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2843                           ;	Table Read Protection bit
  2844                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2845   30000C                     	org	3145740
  2846   30000C  0F                 	db	15
  2847                           
  2848                           ;Config register CONFIG7H @ 0x30000D
  2849                           ;	Boot Block Table Read Protection bit
  2850                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2851   30000D                     	org	3145741
  2852   30000D  40                 	db	64
  2853                           tosu	equ	0xFFF
  2854                           tosh	equ	0xFFE
  2855                           tosl	equ	0xFFD
  2856                           stkptr	equ	0xFFC
  2857                           pclatu	equ	0xFFB
  2858                           pclath	equ	0xFFA
  2859                           pcl	equ	0xFF9
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           prodh	equ	0xFF4
  2865                           prodl	equ	0xFF3
  2866                           indf0	equ	0xFEF
  2867                           postinc0	equ	0xFEE
  2868                           postdec0	equ	0xFED
  2869                           preinc0	equ	0xFEC
  2870                           plusw0	equ	0xFEB
  2871                           fsr0h	equ	0xFEA
  2872                           fsr0l	equ	0xFE9
  2873                           wreg	equ	0xFE8
  2874                           indf1	equ	0xFE7
  2875                           postinc1	equ	0xFE6
  2876                           postdec1	equ	0xFE5
  2877                           preinc1	equ	0xFE4
  2878                           plusw1	equ	0xFE3
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           bsr	equ	0xFE0
  2882                           indf2	equ	0xFDF
  2883                           postinc2	equ	0xFDE
  2884                           postdec2	equ	0xFDD
  2885                           preinc2	equ	0xFDC
  2886                           plusw2	equ	0xFDB
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8

Data Sizes:
    Strings     48
    Constant    0
    Data        46
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      74
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_data(COMRAM[8]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_data(COMRAM[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_data(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 13
		 -> STR_3(CODE[10]), STR_4(CODE[13]), STR_5(CODE[10]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_intialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[8]), STR_2(CODE[17]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_string_pos
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_intialize->_lcd_8bit_intialize
    _lcd_8bit_intialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   83996
                                             25 COMRAM     3     3      0
              _application_intialize
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   14704
                                             20 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3    8070
                                             16 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2    5845
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   21876
                                             18 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          5     1      4   21527
                                             18 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   11493
                                             14 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2    9268
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   25700
                 _lcd_4bit_intialize
                 _lcd_8bit_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_intialize                                   4     3      1   11137
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2    7365
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    2703
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   4     3      1   14560
                                             14 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   10788
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    3293
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    2855
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    3306
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    2459
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     255
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _lcd_4bit_intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_intialize
       _gpio_pin_intialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      4A       1       58.3%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      39        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Oct 07 01:37:56 2024

                        ?_lcd_send_4bits 0037                                       l31 1518  
                                     l41 1938                                       l36 1994  
                                     l46 19D0                                       l64 16C8  
                                     l90 173A                                       l83 17AC  
                                     l76 1432                                      l113 187E  
                                    l123 181A                                      l133 1A06  
                                    l214 1142                                      l128 1A3C  
                                    l233 1252                                      l145 15B4  
                                    l316 1AA6                                      l157 1650  
                                    l254 18DC                                      u700 1046  
                                    u701 1042                                      u710 1066  
                                    u630 1158                                      u711 1062  
                                    u631 1154                                      u640 1178  
                                    u800 17A0                                      u641 1174  
                                    u801 179C                                      u810 1448  
                                    u811 1444                                      u740 112A  
                                    u724 108C                                      u820 1482  
                                    u900 152E                                      u741 1124  
                                    u725 1088                                      u821 147E  
                                    u901 152A                                      u734 10E2  
                                    u654 119E                                      u750 1890  
                                    u670 17BE                                      u830 18EE  
                                    u910 19A6                                      u735 10DE  
                                    u655 119A                                      u751 188C  
                                    u671 17BA                                      u831 18EA  
                                    u911 19A2                                      u664 11EE  
                                    u760 18B0                                      u680 1A18  
                                    u840 15CA                                      u920 1662  
                                    u665 11EA                                      u761 18AC  
                                    u681 1A14                                      u841 15C6  
                                    u921 165E                                      u746 112C  
                                    u770 194A                                      u690 19E2  
                                    u850 1362                                      u930 1672  
                                    u771 1946                                      u691 19DE  
                                    u851 135E                                      u931 166E  
                                    u780 1750                                      u860 139C  
                                    u940 16C6                                      u781 174C  
                                    u861 1398                                      u941 16C2  
                                    u870 16DE                                      u950 182C  
                                    u871 16DA                                      u951 1828  
                                    u960 187C                                      u961 1878  
                                    u794 177E                                      u890 172E  
                                    u795 177A                                      u891 172A  
                                    u884 170C                                      u885 1708  
    __end_of_lcd_4bit_send_enable_signal 1A3E              _lcd_4bit_send_enable_signal 1A08  
              ?_lcd_8bit_send_string_pos 0043                                      wreg 0FE8  
            __end_of_lcd_8bit_set_cursor 15B6              lcd_send_4bits@_data_command 0038  
                                   l1510 1180                                     l1512 11D0  
                                   l1504 1144                                     l1600 173C  
                                   l1506 1158                                     l1530 17C6  
                                   l1610 1764                                     l1602 1750  
                                   l1516 1226                                     l1508 1178  
                                   l1540 1A20                                     l1532 1818  
                                   l1612 178E                                     l1604 1758  
                                   l1518 1250                                     l1542 1A2C  
                                   l1526 17AE                                     l1622 1434  
                                   l1550 19E2                                     l1614 1790  
                                   l1710 139C                                     l1560 1032  
                                   l1544 1A3A                                     l1536 1A08  
                                   l1528 17BE                                     l1640 1492  
                                   l1632 1464                                     l1624 1448  
                                   l1552 19EA                                     l1616 17A0  
                                   l1720 13E6                                     l1712 13AC  
                                   l1704 137E                                     l1800 16AA  
                                   l1562 1046                                     l1538 1A18  
                                   l1650 14D8                                     l1642 149E  
                                   l1634 1470                                     l1626 1450  
                                   l1554 19F6                                     l1618 17AA  
                                   l1730 1422                                     l1722 13F2  
                                   l1714 13B8                                     l1706 138A  
                                   l1802 16C6                                     l1810 1830  
                                   l1572 1114                                     l1564 1066  
                                   l1580 1890                                     l1652 14E4  
                                   l1644 14BA                                     l1636 1472  
                                   l1660 1516                                     l1556 1A04  
                                   l1548 19D2                                     l1724 13FE  
                                   l1716 13D4                                     l1708 138C  
                                   l1732 1430                                     l1740 16E6  
                                   l1812 1846                                     l1900 131E  
                                   l1566 106E                                     l1574 1140  
                                   l1910 123A                                     l1582 18B0  
                                   l1590 193A                                     l1654 14F0  
                                   l1646 14C0                                     l1638 1482  
                                   l1726 140A                                     l1718 13DA  
                                   l1822 1A96                                     l1670 1936  
                                   l1750 171E                                     l1814 185E  
                                   l1806 181C                                     l1902 1334  
                                   l1568 10C4                                     l1584 18B8  
                                   l1592 194A                                     l1656 14FC  
                                   l1648 14CC                                     l1728 1416  
                                   l1824 1A96                                     l1664 18DE  
                                   l1680 15D8                                     l1752 172E  
                                   l1736 16CA                                     l1760 152E  
                                   l1816 1860                                     l1808 182C  
                                   l1904 1336                                     l1586 18DA  
                                   l1578 1880                                     l1594 1952  
                                   l1658 1508                                     l1826 1A9E  
                                   l1666 18EE                                     l1682 15EC  
                                   l1690 164E                                     l1674 15B6  
                                   l1746 16F2                                     l1754 1738  
                                   l1738 16DE                                     l1770 1578  
                                   l1762 1536                                     l1818 187C  
                                   l1596 1992                                     l1668 18F6  
                                   l1684 1600                                     l1676 15CA  
                                   l1780 19A6                                     l1748 171C  
                                   l1764 153C                                     l1772 158C  
                                   l1694 134E                                     l1686 1614  
                                   l1678 15D2                                     l1782 19AE  
                                   l1790 1662                                     l1766 1550  
                                   l1774 15B2                                     l1758 151A  
                                   l1870 1270                                     l1696 1362  
                                   l1688 1628                                     l1784 19CE  
                                   l1792 1672                                     l1768 1564  
                                   l1880 129C                                     l1872 1284  
                                   l1864 1254                                     l1698 136A  
                                   l1778 1996                                     l1794 167A  
                                   l1890 12EE                                     l1882 12B4  
                                   l1866 1258                                     l1796 1690  
                                   l1788 1652                                     l1884 12C8  
                                   l1868 125C                                     l1798 16A8  
                                   l1886 12CA                                     l1878 1288  
                                   l1896 12F2                                     l1888 12DA  
                                   l1898 1306                                     STR_1 1029  
                                   STR_2 1001                                     STR_3 101F  
                                   STR_4 1012                                     STR_5 101F  
                                   u1030 12DA                                     u1031 12D6  
                                   u1040 1346                                     u1041 1342  
                                   u1107 1488                                     u1117 14A4  
                                   u1127 14BC       lcd_8bit_send_command@l_pin_counter 003E  
                                   u1057 12A6                                     u1067 1310  
                                   u1077 13A2                                     _LATA 0F89  
                                   _LATB 0F8A                                     u1087 13BE  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   u1097 13D6                                     _LATE 0F8D  
                ??_application_intialize 0043            ??_lcd_4bit_send_enable_signal 0038  
                                   _lcd1 0029                                     _lcd2 001F  
                                   _main 1254                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9        lcd_4bit_send_char_data_pos@column 0043  
                                   prodl 0FF3                                     start 0000  
          __end_of_lcd_8bit_send_command 17AE                             ___param_bank 0000  
                  _lcd_4bit_send_command 193A                     _gpio_pin_write_logic 1144  
         lcd_4bit_send_string_pos@column 0043                    lcd_4bit_intialize@lcd 003D  
                  lcd_4bit_intialize@ret 0040                                    ?_main 002F  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
              lcd_4bit_set_cursor@column 003F                         main@lcd1_counter 004A  
               ?_lcd_8bit_send_char_data 0039                                    tablat 0FF5  
                                  status 0FD8                          __initialization 1A6C  
                           __end_of_main 134E                    ?_gpio_pin_write_logic 002F  
                 lcd_8bit_set_cursor@lcd 003F                   lcd_8bit_set_cursor@ret 0042  
                 lcd_8bit_set_cursor@row 0040                            _lat_registers 000B  
                                 ??_main 0048                            __activetblptr 0002  
       __end_of_lcd_4bit_send_string_pos 16CA                   ?_lcd_4bit_send_command 003A  
                                 isa$std 0001              lcd_8bit_send_string_pos@lcd 0043  
            lcd_8bit_send_string_pos@ret 0047              lcd_8bit_send_string_pos@row 0044  
            lcd_8bit_send_string_pos@str 0046  gpio_pin_direction_intialize@_pin_config 002F  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0080  
                __end_of__initialization 1A8C                            ___rparam_used 0001  
                       ??_lcd_send_4bits 0039                  _lcd_4bit_send_char_data 18DE  
                 ??_gpio_pin_write_logic 0031                           __pcstackCOMRAM 002F  
               lcd_4bit_send_command@lcd 003A                 lcd_4bit_send_command@ret 003C  
                     _lcd_8bit_intialize 134E                      ?_lcd_8bit_intialize 003F  
           ?_lcd_4bit_send_char_data_pos 0041            __end_of_application_intialize 1AA8  
                   ??_lcd_8bit_intialize 0040                ?_lcd_4bit_send_string_pos 0041  
    __end_of_lcd_8bit_send_enable_signal 1A08              _lcd_8bit_send_enable_signal 19D2  
         lcd_8bit_send_enable_signal@lcd 0037           lcd_8bit_send_enable_signal@ret 0038  
                         _tris_registers 0015                ??_lcd_4bit_send_char_data 003C  
          ??_lcd_8bit_send_enable_signal 0038                                  __Hparam 0000  
                                __Lparam 0000                    _lcd_8bit_send_command 173C  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 18DE  
                                __pcinit 1A6C                                  __ramtop 1000  
               _lcd_8bit_send_string_pos 181C                                  __ptext0 1254  
                                __ptext1 181C                                  __ptext2 151A  
                                __ptext3 16CA                                  __ptext4 1652  
                                __ptext5 1996                                  __ptext6 15B6  
                                __ptext7 18DE                                  __ptext8 1A96  
                                __ptext9 134E    lcd_8bit_intialize@l_data_pins_counter 0041  
  lcd_4bit_intialize@l_data_pins_counter 003F                     end_of_initialization 1A8C  
                      lcd_send_4bits@lcd 0037                        lcd_send_4bits@ret 0039  
                          __Lmediumconst 0000               __end_of_lcd_4bit_intialize 151A  
                ??_lcd_4bit_send_command 003C                    gpio_pin_intialize@ret 0039  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
        __end_of_lcd_4bit_send_char_data 193A            gpio_pin_intialize@_pin_config 0037  
             lcd_4bit_send_char_data@lcd 003A               lcd_4bit_send_char_data@ret 003C  
   __end_of_gpio_pin_direction_intialize 1144             _gpio_pin_direction_intialize 1032  
        lcd_4bit_send_char_data_pos@data 0044                      _lcd_4bit_set_cursor 15B6  
                 ?_lcd_8bit_send_command 0039              lcd_4bit_send_string_pos@lcd 0041  
            lcd_4bit_send_string_pos@ret 0045              lcd_4bit_send_string_pos@row 0042  
            lcd_4bit_send_string_pos@str 0044           lcd_8bit_send_string_pos@column 0045  
                          __pidataCOMRAM 1A3E                      start_initialization 1A6C  
           ?_lcd_4bit_send_enable_signal 0037                     ?_lcd_4bit_set_cursor 003D  
          ?_gpio_pin_direction_intialize 002F                  _lcd_8bit_send_char_data 16CA  
                    _lcd_8bit_set_cursor 151A             lcd_4bit_send_command@command 003B  
               lcd_8bit_send_command@lcd 0039                 lcd_8bit_send_command@ret 003D  
                  ??_lcd_4bit_set_cursor 0040                     ?_lcd_8bit_set_cursor 003F  
        gpio_pin_direction_intialize@ret 0035               ??_lcd_8bit_send_string_pos 0047  
                  _application_intialize 1A96              lcd_8bit_send_char_data@data 003A  
        gpio_pin_write_logic@_pin_config 002F                gpio_pin_write_logic@logic 0030  
                            __smallconst 1000                       _gpio_pin_intialize 1880  
                  ??_lcd_8bit_set_cursor 0042           ??_gpio_pin_direction_intialize 0030  
              ??_lcd_8bit_send_char_data 003B                      ?_gpio_pin_intialize 0037  
          __end_of_lcd_4bit_send_command 1996     lcd_8bit_send_char_data@l_pin_counter 003E  
                  lcd_8bit_intialize@lcd 003F                       _lcd_4bit_intialize 1434  
                  lcd_8bit_intialize@ret 0042                 _lcd_4bit_send_string_pos 1652  
                   ??_gpio_pin_intialize 0038           lcd_4bit_send_char_data_pos@lcd 0041  
         lcd_4bit_send_char_data_pos@ret 0045           lcd_4bit_send_char_data_pos@row 0042  
                    ?_lcd_4bit_intialize 003D                lcd_8bit_set_cursor@column 0041  
    __end_of_lcd_4bit_send_char_data_pos 19D2              _lcd_4bit_send_char_data_pos 1996  
                gpio_pin_write_logic@ret 0036                 ?_lcd_4bit_send_char_data 003A  
                              copy_data0 1A80            ??_lcd_4bit_send_char_data_pos 0045  
                ??_lcd_8bit_send_command 003B                   ?_application_intialize 002F  
                   ??_lcd_4bit_intialize 003E                                 __Hrparam 0000  
                               __Lrparam 0000                   lcd_4bit_set_cursor@lcd 003D  
                 lcd_4bit_set_cursor@ret 0040                   lcd_4bit_set_cursor@row 003E  
        __end_of_lcd_8bit_send_char_data 173C               lcd_8bit_send_char_data@lcd 0039  
             lcd_8bit_send_char_data@ret 003D                                 __ptext10 173C  
                               __ptext11 19D2                                 __ptext12 1434  
                               __ptext13 193A                                 __ptext14 17AE  
                               __ptext15 1A08                                 __ptext16 1880  
                               __ptext17 1144                                 __ptext18 1032  
       __end_of_lcd_8bit_send_string_pos 1880                                 isa$xinst 0000  
                         _lcd_send_4bits 17AE             __end_of_gpio_pin_write_logic 1254  
           ?_lcd_8bit_send_enable_signal 0037           lcd_4bit_send_enable_signal@lcd 0037  
         lcd_4bit_send_enable_signal@ret 0038                   __end_of_lcd_send_4bits 181C  
            __end_of_lcd_4bit_set_cursor 1652                           _port_registers 0001  
           lcd_8bit_send_command@command 003A              lcd_4bit_send_char_data@data 003B  
             __end_of_lcd_8bit_intialize 1434               ??_lcd_4bit_send_string_pos 0045  
